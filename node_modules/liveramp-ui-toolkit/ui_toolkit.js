module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	__webpack_require__(1);
	
	module.exports = {
	  UiButtonGroup: __webpack_require__(5).default,
	  UiCheckbox: __webpack_require__(8).default,
	  UiFilterGroup: __webpack_require__(10).default,
	  UiHeader: __webpack_require__(119).default,
	  UiIcon: __webpack_require__(18).default,
	  UiInput: __webpack_require__(120).default,
	  UiLabel: __webpack_require__(131).default,
	  UiSlider: __webpack_require__(133).default,
	  UiLoadingComponent: __webpack_require__(221).default,
	  UiSelect: __webpack_require__(11).default,
	  UiIdentifierSelect: __webpack_require__(222).default,
	  UiSearch: __webpack_require__(223).default,
	  UiTitle: __webpack_require__(224).default,
	  UiTabbedView: __webpack_require__(226).default,
	  UiSubHeader: __webpack_require__(227).default,
	  UiProgressMeter: __webpack_require__(228).default,
	  UiRadioButtonGroup: __webpack_require__(229).default,
	  UiRadioButton: __webpack_require__(230).default,
	  UiTile: __webpack_require__(231).default,
	  UiWizardControls: __webpack_require__(232).default,
	  UiDropdown: __webpack_require__(233).default,
	  UiCollapse: __webpack_require__(234).default,
	  UiAlert: __webpack_require__(235).default,
	  UiFileUploadStatus: __webpack_require__(237).default,
	  UiSwitch: __webpack_require__(132).default,
	  UiTable: __webpack_require__(238).default,
	  UiSplitButton: __webpack_require__(240).default,
	  UiWizard: __webpack_require__(241).default
	};

/***/ },
/* 1 */
/***/ function(module, exports) {

	// removed by extract-text-webpack-plugin

/***/ },
/* 2 */,
/* 3 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function () {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for (var i = 0; i < this.length; i++) {
				var item = this[i];
				if (item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function (modules, mediaQuery) {
			if (typeof modules === "string") modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for (var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if (typeof id === "number") alreadyImportedModules[id] = true;
			}
			for (i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if (mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if (mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(_, React) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = UiButtonGroup;
	function UiButtonGroup(props) {
	  // User provides:
	  //  - A hash which maps each button label to the function that gets called when it is clicked (labelToEventMap)
	
	  var labelToEventMap = props.labelToEventMap;
	
	
	  var buttons = _.map(Object.keys(labelToEventMap), function (label) {
	    return React.createElement(
	      "div",
	      { className: "button lr-ui-button", key: label, onClick: labelToEventMap[label] },
	      label
	    );
	  });
	
	  return React.createElement(
	    "div",
	    { className: "lr-ui-button-group" },
	    buttons
	  );
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(7)))

/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = require("underscore");

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React, cn) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = UiCheckbox;
	var docs = {
	  title: "UiCheckbox",
	  propDetails: [{ title: "value",
	    required: true,
	    type: "integer",
	    description: "The value for the checkbox." }, { title: "checked",
	    required: true,
	    type: "boolean",
	    description: "Whether or not the checkbox is checked." }, { title: "handleChange",
	    required: true,
	    type: "function",
	    description: "Function that updates state in the parent component - takes in the value and the current state of the checkbox." }, { title: "label",
	    required: false,
	    type: "string",
	    description: "A label for the checkbox." }, { title: "disabled",
	    required: false,
	    type: "boolean",
	    description: "Whether or not the checkbox is disabled." }, { title: "color",
	    required: false,
	    type: "string",
	    description: "If 'grey', checkbox will be grey." }]
	};
	
	function UiCheckbox(props) {
	  // User provides:
	  //  - value for the checkbox (value) : integer
	  //  - a boolean to determine if the checkbox is checked (checked) : boolean
	  //  - change handling function that takes in the value, and the new state of the checkbox as an argument (handleChange) : function
	  //  - optional label (label) : string
	  //  - optional boolean to disable the checkbox (disabled) : boolean
	
	  var value = props.value,
	      checked = props.checked,
	      handleChange = props.handleChange,
	      label = props.label,
	      disabled = props.disabled,
	      color = props.color;
	
	
	  var handleClick = function handleClick(e) {
	    e.stopPropagation();
	    if (!disabled) {
	      handleChange(value, !checked);
	    }
	  };
	
	  var checkboxClassName = "lr-ui-checkbox-wrapper";
	
	  if (checked) {
	    checkboxClassName += " checked";
	  };
	
	  if (disabled) {
	    checkboxClassName += " disabled";
	  };
	
	  if (color === 'grey') {
	    checkboxClassName += " grey";
	  }
	
	  return React.createElement(
	    "div",
	    { className: "lr-ui-checkbox-row" },
	    React.createElement(
	      "div",
	      { onClick: handleClick, className: "lr-ui-checkbox-container" },
	      React.createElement("input", {
	        className: "lr-ui-checkbox",
	        type: "checkbox",
	        value: value,
	        defaultChecked: checked,
	        disabled: disabled === true
	      }),
	      React.createElement("div", { className: checkboxClassName }),
	      label ? React.createElement(
	        "div",
	        { className: cn("lr-ui-checkbox-label", { 'grey': color === 'grey' }) },
	        label
	      ) : null
	    )
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(9)))

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames() {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	})();

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(_, React) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	exports.default = UiFilterGroup;
	
	var _uiSelect = __webpack_require__(11);
	
	var _uiSelect2 = _interopRequireDefault(_uiSelect);
	
	var _uiIcon = __webpack_require__(18);
	
	var _uiIcon2 = _interopRequireDefault(_uiIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var docs = {
	  title: "UiFilterGroup",
	  propDetails: [{ title: "filterParams",
	    required: true,
	    type: "array",
	    description: "An array of objects which have the keys : name(used as placeholder text and also as a key for the select), selectOptions (same as UiSelect), isMulti (boolean - determines if multi-select), allowCreate (boolean - allows creation of options), arrowOnHover (boolean - shows arrow only on hover), label (optional label for the select), placeholder (a placeholder)." }, { title: "handleChange",
	    required: true,
	    type: "function",
	    description: "Handles change events to the filter group. Receives isMulti, name, and selected - should update parent component's state. The function should be able to handle the cases for selected outlined in UiSelect." }, { title: "handleClearAll",
	    required: false,
	    type: "function",
	    description: "An optional function that handles a click of the clear all button." }, { title: "hideClearAll",
	    required: false,
	    type: "boolean",
	    description: "Whether or not to hide the clear all button." }]
	};
	
	function UiFilterGroup(props) {
	  // user should pass in:
	  // - a list of filter hashes (filterParams). Each filter hash should have the following keys:
	  //      - name: the filter's unique name, to be used as placeholder text if no placeholder is passed and as a key to look up this filter within the group
	  //      - selectOptions: a list of option hashes, formatted like [ { label: 'Option1', value: 1 }, { ... } ]
	  //      - isMulti: a boolean that determines if the input is a multi-select
	  //      - selected: a value, or list of values, that are selected
	  //      - allowCreate: an optional boolean which determines if the user can create options within the group
	  //      - arrowOnHover: an optional boolean which determines if the arrow for the dropdown appears on hover
	  //      - label: an optional label for the select
	  //      - placeholder: an optional placeholder for the select. the name will be used if no placeholder is passed
	  // - handleChange: a function that receives isMulti, name, and selected to update the parent on change
	  //    + The function should be able to handle four types of arguments for selected:
	  //       -- an empty string when no values are selected
	  //       -- a string that represents the value selected when one value is selected
	  //       -- if multi-select, and multiple values are selected, the function will receive a string consisting of the selected values separated by commas
	  //           ++ if allowCreate is true, then this string will have a string value at the end for the 'value' of the newly created value
	  // - handleClearAll: an optional function that handles a click of the clear all button
	  // - hideClearAll: an optional boolean to hide the clear all button
	
	  var filterParams = props.filterParams,
	      handleChange = props.handleChange,
	      handleClearAll = props.handleClearAll,
	      hideClearAll = props.hideClearAll;
	
	
	  var filters = _.map(filterParams, function (filter) {
	    return React.createElement(
	      'div',
	      { className: 'lr-ui-filter', key: filter.name },
	      React.createElement(_uiSelect2.default, {
	        placeholder: filter.placeholder ? filter.placeholder : filter.name,
	        label: filter.label,
	        selectOptions: filter.selectOptions,
	        isMulti: filter.isMulti,
	        selected: filter.selected,
	        handleChange: handleChange.bind(null, filter.isMulti, filter.name),
	        allowCreate: filter.allowCreate,
	        arrowOnHover: filter.arrowOnHover,
	        disabled: filter.disabled,
	        clearable: false
	      })
	    );
	  });
	
	  var clearFilters = function clearFilters() {
	    if (handleClearAll) {
	      handleClearAll();
	    } else {
	      _.each(filterParams, function (filter) {
	        handleChange(filter.isMulti, filter.name, "");
	      });
	    }
	  };
	
	  var clearButton = React.createElement(
	    'div',
	    { className: 'lr-ui-filter lr-ui-filter-group-clear-button', onClick: clearFilters },
	    React.createElement(
	      'span',
	      null,
	      'Clear'
	    ),
	    React.createElement(_uiIcon2.default, {
	      icon: 'cancel',
	      color: 'header-gray',
	      dimensions: [10, 10]
	    })
	  );
	
	  return React.createElement(
	    'div',
	    { className: 'lr-ui-filter-group' },
	    filters,
	    hideClearAll ? null : clearButton
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(7)))

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(_, React) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	exports.default = UiSelect;
	
	var _reactSelect = __webpack_require__(12);
	
	var _reactSelect2 = _interopRequireDefault(_reactSelect);
	
	var _uiIcon = __webpack_require__(18);
	
	var _uiIcon2 = _interopRequireDefault(_uiIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var docs = {
	  title: "UiSelect",
	  propDetails: [{ title: "selectOptions",
	    required: true,
	    type: "string",
	    description: "A list of option hashes, formatted like [ { label: 'Option1', value: 1 }, { ... } ]. If you want to be able to delete options, but want a specific option to not be deleted, add disableDelete: true to the option." }, { title: "selected",
	    required: true,
	    type: "integer or array",
	    description: "A selected value, or an array of selected values if a multi-select. WARNING: Due to a bug in react-select, a value of 0 will result in broken styles on UiSelect." }, { title: "handleChange",
	    required: true,
	    type: "function",
	    description: "a function that receives selected values on change to update the parent. The function receives: selectValue(number | string), selectedArray(Object[]). If single select, the function will take a number and an array: the array will contain the selected object with structure { label: 'Option1', value: 1 }. The function should be able to handle an empty array or null selectValue. If multi select, the function will take a string and an array. The function should be able to handle selectValue with an empty string when no values are selected a string that represents the value selected when one value is selected. If multiple values are selected, the function will receive a string consisting of the selected values separated by commas if allowCreate is true, then this string will have a string value at the end for the 'value' of the newly created value. In this case, you will have to create a new value in the selectOptions array. When a string value is passed the selectedArray will contain the selected values in the format they were passed to options, ie. [ { label: 'Option1', value: 1 }, { ... } ]. If allowCreate is true, the created options will be pushed to the end of the array with three keys value: the string of user-entered text label: also the string of user-entered text create: true." }, { title: "label",
	    required: false,
	    type: "string",
	    description: "A label for the select field." }, { title: "placeholder",
	    required: false,
	    type: "string",
	    description: "A placeholder for the select field when empty." }, { title: "isMulti",
	    required: false,
	    type: "boolean",
	    description: "Whether or not the select is a multi select." }, { title: "allowCreate",
	    required: false,
	    type: "boolean",
	    description: "Whether or not a user can create options." }, { title: "clearable",
	    required: false,
	    type: "boolean",
	    description: "Whether the select is clearable." }, { title: "arrowOnHover",
	    required: false,
	    type: "boolean",
	    description: "Whether the arrow for the select dropdown should show only on hover." }, { title: "canDelete",
	    required: false,
	    type: "boolean",
	    description: "Whether or not a user can delete options." }, { title: "handleDelete",
	    required: false,
	    type: "function",
	    description: "Function to handle deleting an option, takes in the value of the option to be deleted." }, { title: "fixedWidth",
	    required: false,
	    type: "boolean",
	    description: "Whether a select form is fixed width (204px)." }]
	};
	
	function UiSelect(props) {
	  // User must pass in:
	  // - selected      : integer or array : a selected value, or an array of selected values if a multi-select
	  //    + WARNING: Due to a bug in react-select, a value of 0 will result in broken styles on UiSelect
	  // - handleChange  : function         : a function that receives selected values on change to update the parent
	  //    + receives: selectValue(number | string), selectedArray(Object[])
	  //    + if single select, the function will take a number and an array:
	  //        -- the array will contain the selected object with structure { label: 'Option1', value: 1 }
	  //        -- the function should be able to handle an empty array or null selectValue
	  //    + if multi select, the function will take a string and an array
	  //        -- the function should be able to handle selectValue with
	  //           ++ an empty string when no values are selected
	  //           ++ a string that represents the value selected when one value is selected
	  //           ++ if multiple values are selected, the function will receive a string consisting of the selected values separated by commas
	  //               -- if allowCreate is true, then this string will have a string value at the end for the 'value' of the newly created value
	  //                   ++ In this case, you will have to create a new value in the selectOptions array when a string value is passed
	  //        -- the selectedArray will contain the selected values in the format they were passed to options, ie. [ { label: 'Option1', value: 1 }, { ... } ]
	  //            ++ if allowCreate is true, the created options will be pushed to the end of the array with three keys
	  //                -- value: the string of user-entered text
	  //                -- label: also the string of user-entered text
	  //                -- create: true
	  // User may pass in:
	  // - label         : string           : a label for the select field
	  // - selectOptions : array            : a list of option hashes, formatted like [ { label: 'Option1', value: 1 }, { ... } ]
	  //    + If you want to be able to delete options, but want a specific option to not be deleted,
	  //      add {disableDelete: true} to the specific option
	  // - placeholder   : string           : placeholder text to show when no value is selected
	  // - isMulti       : boolean          : whether the input is a multi-select
	  // - allowCreate   : boolean          : whether user can create elements that aren't in the options already
	  // - clearable     : boolean          : whether the select has a button to clear all selections
	  // - arrowOnHover  : boolean          : whether we show the arrow on hover
	  // - canDelete     : boolean          : whether an option can be deleted
	  // - handleDelete  : function         : if canDelete is true, a function that gets called to delete the option from the selectOptions
	  // - fixedWidth    : boolean          : whether a select form is fixed width (204px)
	
	  var label = props.label,
	      disabled = props.disabled,
	      selected = props.selected,
	      selectOptions = props.selectOptions,
	      placeholder = props.placeholder,
	      isMulti = props.isMulti,
	      arrowOnHover = props.arrowOnHover,
	      allowCreate = props.allowCreate,
	      handleChange = props.handleChange,
	      clearable = props.clearable,
	      canDelete = props.canDelete,
	      handleDelete = props.handleDelete,
	      _props$fixedwidth = props.fixedwidth,
	      fixedwidth = _props$fixedwidth === undefined ? false : _props$fixedwidth;
	
	
	  function optionRenderer(option) {
	    if (_.has(option, 'disableDelete') && option.disableDelete === true) {
	      return React.createElement(
	        'div',
	        null,
	        option.label
	      );
	    } else {
	      return React.createElement(
	        'div',
	        null,
	        option.label,
	        React.createElement(
	          'div',
	          {
	            className: 'lr-ui-select-clear',
	            onMouseDown: function onMouseDown(e) {
	              e.stopPropagation();e.preventDefault();
	            },
	            onMouseUp: function onMouseUp(e) {
	              e.stopPropagation();e.preventDefault();
	            },
	            onClick: function onClick(e) {
	              e.stopPropagation();e.preventDefault();handleDelete(option.value);
	            } },
	          React.createElement(_uiIcon2.default, {
	            color: 'sidebar-dark',
	            icon: 'clear',
	            dimensions: [20, 20]
	          })
	        )
	      );
	    }
	  };
	
	  return React.createElement(
	    'div',
	    { className: 'lr-ui-select' },
	    label ? React.createElement(
	      'div',
	      { className: 'lr-ui-select-label' },
	      label
	    ) : null,
	    React.createElement(_reactSelect2.default, {
	      className: (arrowOnHover === true ? "arrow-on-hover" : "") + (fixedwidth === true ? " fixedwidth" : ""),
	      value: selected,
	      addLabelText: 'Click to Add "{label}"',
	      openOnFocus: true,
	      disabled: disabled === true,
	      options: selectOptions,
	      placeholder: placeholder,
	      multi: allowCreate || isMulti,
	      allowCreate: allowCreate === true,
	      onChange: handleChange,
	      clearable: clearable !== false,
	      optionRenderer: canDelete ? optionRenderer : undefined
	    })
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6), __webpack_require__(7)))

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* disable some rules until we refactor more completely; fixing them now would
	   cause conflicts with some open PRs unnecessarily. */
	/* eslint react/jsx-sort-prop-types: 0, react/sort-comp: 0, react/prop-types: 0 */
	
	'use strict';
	
	var _extends = Object.assign || function (target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i];for (var key in source) {
				if (Object.prototype.hasOwnProperty.call(source, key)) {
					target[key] = source[key];
				}
			}
		}return target;
	};
	
	function _defineProperty(obj, key, value) {
		if (key in obj) {
			Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
		} else {
			obj[key] = value;
		}return obj;
	}
	
	var React = __webpack_require__(7);
	var ReactDOM = __webpack_require__(13);
	var Input = __webpack_require__(14);
	var classes = __webpack_require__(9);
	var Value = __webpack_require__(15);
	var SingleValue = __webpack_require__(16);
	var Option = __webpack_require__(17);
	
	var requestId = 0;
	
	var Select = React.createClass({
	
		displayName: 'Select',
	
		propTypes: {
			addLabelText: React.PropTypes.string, // placeholder displayed when you want to add a label on a multi-value input
			allowCreate: React.PropTypes.bool, // whether to allow creation of new entries
			asyncOptions: React.PropTypes.func, // function to call to get options
			autoload: React.PropTypes.bool, // whether to auto-load the default async options set
			backspaceRemoves: React.PropTypes.bool, // whether backspace removes an item if there is no text input
			cacheAsyncResults: React.PropTypes.bool, // whether to allow cache
			className: React.PropTypes.string, // className for the outer element
			clearAllText: React.PropTypes.string, // title for the "clear" control when multi: true
			clearValueText: React.PropTypes.string, // title for the "clear" control
			clearable: React.PropTypes.bool, // should it be possible to reset value
			delimiter: React.PropTypes.string, // delimiter to use to join multiple values
			disabled: React.PropTypes.bool, // whether the Select is disabled or not
			filterOption: React.PropTypes.func, // method to filter a single option  (option, filterString)
			filterOptions: React.PropTypes.func, // method to filter the options array: function ([options], filterString, [values])
			ignoreCase: React.PropTypes.bool, // whether to perform case-insensitive filtering
			inputProps: React.PropTypes.object, // custom attributes for the Input (in the Select-control) e.g: {'data-foo': 'bar'}
			isLoading: React.PropTypes.bool, // whether the Select is loading externally or not (such as options being loaded)
			labelKey: React.PropTypes.string, // path of the label value in option objects
			matchPos: React.PropTypes.string, // (any|start) match the start or entire string when filtering
			matchProp: React.PropTypes.string, // (any|label|value) which option property to filter on
			multi: React.PropTypes.bool, // multi-value input
			name: React.PropTypes.string, // field name, for hidden <input /> tag
			newOptionCreator: React.PropTypes.func, // factory to create new options when allowCreate set
			noResultsText: React.PropTypes.string, // placeholder displayed when there are no matching search results
			onBlur: React.PropTypes.func, // onBlur handler: function (event) {}
			onChange: React.PropTypes.func, // onChange handler: function (newValue) {}
			onFocus: React.PropTypes.func, // onFocus handler: function (event) {}
			onInputChange: React.PropTypes.func, // onInputChange handler: function (inputValue) {}
			onOptionLabelClick: React.PropTypes.func, // onCLick handler for value labels: function (value, event) {}
			optionComponent: React.PropTypes.func, // option component to render in dropdown
			optionRenderer: React.PropTypes.func, // optionRenderer: function (option) {}
			options: React.PropTypes.array, // array of options
			placeholder: React.PropTypes.string, // field placeholder, displayed when there's no value
			searchable: React.PropTypes.bool, // whether to enable searching feature or not
			searchingText: React.PropTypes.string, // message to display whilst options are loading via asyncOptions
			searchPromptText: React.PropTypes.string, // label to prompt for search input
			singleValueComponent: React.PropTypes.func, // single value component when multiple is set to false
			value: React.PropTypes.any, // initial field value
			valueComponent: React.PropTypes.func, // value component to render in multiple mode
			valueKey: React.PropTypes.string, // path of the label value in option objects
			valueRenderer: React.PropTypes.func // valueRenderer: function (option) {}
		},
	
		getDefaultProps: function getDefaultProps() {
			return {
				addLabelText: 'Add "{label}"?',
				allowCreate: false,
				asyncOptions: undefined,
				autoload: true,
				backspaceRemoves: true,
				cacheAsyncResults: true,
				className: undefined,
				clearAllText: 'Clear all',
				clearValueText: 'Clear value',
				clearable: true,
				delimiter: ',',
				disabled: false,
				ignoreCase: true,
				inputProps: {},
				isLoading: false,
				labelKey: 'label',
				matchPos: 'any',
				matchProp: 'any',
				name: undefined,
				newOptionCreator: undefined,
				noResultsText: 'No results found',
				onChange: undefined,
				onInputChange: undefined,
				onOptionLabelClick: undefined,
				optionComponent: Option,
				options: undefined,
				placeholder: 'Select...',
				searchable: true,
				searchingText: 'Searching...',
				searchPromptText: 'Type to search',
				singleValueComponent: SingleValue,
				value: undefined,
				valueComponent: Value,
				valueKey: 'value'
			};
		},
	
		getInitialState: function getInitialState() {
			return {
				/*
	    * set by getStateFromValue on componentWillMount:
	    * - value
	    * - values
	    * - filteredOptions
	    * - inputValue
	    * - placeholder
	    * - focusedOption
	   */
				isFocused: false,
				isLoading: false,
				isOpen: false,
				options: this.props.options
			};
		},
	
		componentWillMount: function componentWillMount() {
			var _this = this;
	
			this._optionsCache = {};
			this._optionsFilterString = '';
			this._closeMenuIfClickedOutside = function (event) {
				if (!_this.state.isOpen) {
					return;
				}
				var menuElem = ReactDOM.findDOMNode(_this.refs.selectMenuContainer);
				var controlElem = ReactDOM.findDOMNode(_this.refs.control);
	
				var eventOccuredOutsideMenu = _this.clickedOutsideElement(menuElem, event);
				var eventOccuredOutsideControl = _this.clickedOutsideElement(controlElem, event);
	
				// Hide dropdown menu if click occurred outside of menu
				if (eventOccuredOutsideMenu && eventOccuredOutsideControl) {
					_this.setState({
						isOpen: false
					}, _this._unbindCloseMenuIfClickedOutside);
				}
			};
			this._bindCloseMenuIfClickedOutside = function () {
				if (!document.addEventListener && document.attachEvent) {
					document.attachEvent('onclick', _this._closeMenuIfClickedOutside);
				} else {
					document.addEventListener('click', _this._closeMenuIfClickedOutside);
				}
			};
			this._unbindCloseMenuIfClickedOutside = function () {
				if (!document.removeEventListener && document.detachEvent) {
					document.detachEvent('onclick', _this._closeMenuIfClickedOutside);
				} else {
					document.removeEventListener('click', _this._closeMenuIfClickedOutside);
				}
			};
			this.setState(this.getStateFromValue(this.props.value));
		},
	
		componentDidMount: function componentDidMount() {
			if (this.props.asyncOptions && this.props.autoload) {
				this.autoloadAsyncOptions();
			}
		},
	
		componentWillUnmount: function componentWillUnmount() {
			clearTimeout(this._blurTimeout);
			clearTimeout(this._focusTimeout);
			if (this.state.isOpen) {
				this._unbindCloseMenuIfClickedOutside();
			}
		},
	
		componentWillReceiveProps: function componentWillReceiveProps(newProps) {
			var _this2 = this;
	
			var optionsChanged = false;
			if (JSON.stringify(newProps.options) !== JSON.stringify(this.props.options)) {
				optionsChanged = true;
				this.setState({
					options: newProps.options,
					filteredOptions: this.filterOptions(newProps.options)
				});
			}
			if (newProps.value !== this.state.value || newProps.placeholder !== this.props.placeholder || optionsChanged) {
				var setState = function setState(newState) {
					_this2.setState(_this2.getStateFromValue(newProps.value, newState && newState.options || newProps.options, newProps.placeholder));
				};
				if (this.props.asyncOptions) {
					this.loadAsyncOptions(newProps.value, {}, setState);
				} else {
					setState();
				}
			}
		},
	
		componentDidUpdate: function componentDidUpdate() {
			var _this3 = this;
	
			if (!this.props.disabled && this._focusAfterUpdate) {
				clearTimeout(this._blurTimeout);
				clearTimeout(this._focusTimeout);
				this._focusTimeout = setTimeout(function () {
					if (!_this3.isMounted()) return;
					_this3.getInputNode().focus();
					_this3._focusAfterUpdate = false;
				}, 50);
			}
			if (this._focusedOptionReveal) {
				if (this.refs.focused && this.refs.menu) {
					var focusedDOM = ReactDOM.findDOMNode(this.refs.focused);
					var menuDOM = ReactDOM.findDOMNode(this.refs.menu);
					var focusedRect = focusedDOM.getBoundingClientRect();
					var menuRect = menuDOM.getBoundingClientRect();
	
					if (focusedRect.bottom > menuRect.bottom || focusedRect.top < menuRect.top) {
						menuDOM.scrollTop = focusedDOM.offsetTop + focusedDOM.clientHeight - menuDOM.offsetHeight;
					}
				}
				this._focusedOptionReveal = false;
			}
		},
	
		focus: function focus() {
			this.getInputNode().focus();
		},
	
		clickedOutsideElement: function clickedOutsideElement(element, event) {
			var eventTarget = event.target ? event.target : event.srcElement;
			while (eventTarget != null) {
				if (eventTarget === element) return false;
				eventTarget = eventTarget.offsetParent;
			}
			return true;
		},
	
		getStateFromValue: function getStateFromValue(value, options, placeholder) {
			var _this4 = this;
	
			if (!options) {
				options = this.state.options;
			}
			if (!placeholder) {
				placeholder = this.props.placeholder;
			}
	
			// reset internal filter string
			this._optionsFilterString = '';
	
			var values = this.initValuesArray(value, options);
			var filteredOptions = this.filterOptions(options, values);
	
			var focusedOption;
			var valueForState = null;
			if (!this.props.multi && values.length) {
				focusedOption = values[0];
				valueForState = values[0][this.props.valueKey];
			} else {
				focusedOption = this.getFirstFocusableOption(filteredOptions);
				valueForState = values.map(function (v) {
					return v[_this4.props.valueKey];
				}).join(this.props.delimiter);
			}
	
			return {
				value: valueForState,
				values: values,
				inputValue: '',
				filteredOptions: filteredOptions,
				placeholder: !this.props.multi && values.length ? values[0][this.props.labelKey] : placeholder,
				focusedOption: focusedOption
			};
		},
	
		getFirstFocusableOption: function getFirstFocusableOption(options) {
			for (var optionIndex = 0; optionIndex < options.length; ++optionIndex) {
				if (!options[optionIndex].disabled) {
					return options[optionIndex];
				}
			}
		},
	
		initValuesArray: function initValuesArray(values, options) {
			var _this5 = this;
	
			if (!Array.isArray(values)) {
				if (typeof values === 'string') {
					values = values === '' ? [] : this.props.multi ? values.split(this.props.delimiter) : [values];
				} else {
					values = values !== undefined && values !== null ? [values] : [];
				}
			}
			return values.map(function (val) {
				if (typeof val === 'string' || typeof val === 'number') {
					var _ref;
	
					for (var key in options) {
						if (options.hasOwnProperty(key) && options[key] && (options[key][_this5.props.valueKey] === val || typeof options[key][_this5.props.valueKey] === 'number' && options[key][_this5.props.valueKey].toString() === val)) {
							return options[key];
						}
					}
					return _ref = {}, _defineProperty(_ref, _this5.props.valueKey, val), _defineProperty(_ref, _this5.props.labelKey, val), _ref;
				} else {
					return val;
				}
			});
		},
	
		setValue: function setValue(value, focusAfterUpdate) {
			if (focusAfterUpdate || focusAfterUpdate === undefined) {
				this._focusAfterUpdate = true;
			}
			var newState = this.getStateFromValue(value);
			newState.isOpen = false;
			this.fireChangeEvent(newState);
			this.setState(newState);
		},
	
		selectValue: function selectValue(value) {
			if (!this.props.multi) {
				this.setValue(value);
			} else if (value) {
				this.addValue(value);
			}
			this._unbindCloseMenuIfClickedOutside();
		},
	
		addValue: function addValue(value) {
			this.setValue(this.state.values.concat(value));
		},
	
		popValue: function popValue() {
			this.setValue(this.state.values.slice(0, this.state.values.length - 1));
		},
	
		removeValue: function removeValue(valueToRemove) {
			this.setValue(this.state.values.filter(function (value) {
				return value !== valueToRemove;
			}));
		},
	
		clearValue: function clearValue(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, ignore it.
			if (event && event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			event.stopPropagation();
			event.preventDefault();
			this.setValue(null);
		},
	
		resetValue: function resetValue() {
			this.setValue(this.state.value === '' ? null : this.state.value);
		},
	
		getInputNode: function getInputNode() {
			var input = this.refs.input;
			return this.props.searchable ? input : ReactDOM.findDOMNode(input);
		},
	
		fireChangeEvent: function fireChangeEvent(newState) {
			if (newState.value !== this.state.value && this.props.onChange) {
				this.props.onChange(newState.value, newState.values);
			}
		},
	
		handleMouseDown: function handleMouseDown(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, or if the component is disabled, ignore it.
			if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			event.stopPropagation();
			event.preventDefault();
	
			// for the non-searchable select, close the dropdown when button is clicked
			if (this.state.isOpen && !this.props.searchable) {
				this.setState({
					isOpen: false
				}, this._unbindCloseMenuIfClickedOutside);
				return;
			}
	
			if (this.state.isFocused) {
				this.setState({
					isOpen: true
				}, this._bindCloseMenuIfClickedOutside);
			} else {
				this._openAfterFocus = true;
				this.getInputNode().focus();
			}
		},
	
		handleMouseDownOnMenu: function handleMouseDownOnMenu(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, or if the component is disabled, ignore it.
			if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			event.stopPropagation();
			event.preventDefault();
		},
	
		handleMouseDownOnArrow: function handleMouseDownOnArrow(event) {
			// if the event was triggered by a mousedown and not the primary
			// button, or if the component is disabled, ignore it.
			if (this.props.disabled || event.type === 'mousedown' && event.button !== 0) {
				return;
			}
			// If not focused, handleMouseDown will handle it
			if (!this.state.isOpen) {
				return;
			}
			event.stopPropagation();
			event.preventDefault();
			this.setState({
				isOpen: false
			}, this._unbindCloseMenuIfClickedOutside);
		},
	
		handleInputFocus: function handleInputFocus(event) {
			var _this6 = this;
	
			var newIsOpen = this.state.isOpen || this._openAfterFocus;
			this.setState({
				isFocused: true,
				isOpen: newIsOpen
			}, function () {
				if (newIsOpen) {
					_this6._bindCloseMenuIfClickedOutside();
				} else {
					_this6._unbindCloseMenuIfClickedOutside();
				}
			});
			this._openAfterFocus = false;
			if (this.props.onFocus) {
				this.props.onFocus(event);
			}
		},
	
		handleInputBlur: function handleInputBlur(event) {
			var _this7 = this;
	
			var menuDOM = ReactDOM.findDOMNode(this.refs.menu);
			if (document.activeElement.isEqualNode(menuDOM)) {
				return;
			}
			this._blurTimeout = setTimeout(function () {
				if (_this7._focusAfterUpdate || !_this7.isMounted()) return;
				_this7.setState({
					inputValue: '',
					isFocused: false,
					isOpen: false
				});
			}, 50);
			if (this.props.onBlur) {
				this.props.onBlur(event);
			}
		},
	
		handleKeyDown: function handleKeyDown(event) {
			if (this.props.disabled) return;
			switch (event.keyCode) {
				case 8:
					// backspace
					if (!this.state.inputValue && this.props.backspaceRemoves) {
						event.preventDefault();
						this.popValue();
					}
					return;
				case 9:
					// tab
					if (event.shiftKey || !this.state.isOpen || !this.state.focusedOption) {
						return;
					}
					this.selectFocusedOption();
					break;
				case 13:
					// enter
					if (!this.state.isOpen) return;
					this.selectFocusedOption();
					break;
				case 27:
					// escape
					if (this.state.isOpen) {
						this.resetValue();
					} else if (this.props.clearable) {
						this.clearValue(event);
					}
					break;
				case 38:
					// up
					this.focusPreviousOption();
					break;
				case 40:
					// down
					this.focusNextOption();
					break;
				case 188:
					// ,
					if (this.props.allowCreate && this.props.multi) {
						event.preventDefault();
						event.stopPropagation();
						this.selectFocusedOption();
					} else {
						return;
					}
					break;
				default:
					return;
			}
			event.preventDefault();
		},
	
		// Ensures that the currently focused option is available in filteredOptions.
		// If not, returns the first available option.
		_getNewFocusedOption: function _getNewFocusedOption(filteredOptions) {
			for (var key in filteredOptions) {
				if (filteredOptions.hasOwnProperty(key) && filteredOptions[key] === this.state.focusedOption) {
					return filteredOptions[key];
				}
			}
			return this.getFirstFocusableOption(filteredOptions);
		},
	
		handleInputChange: function handleInputChange(event) {
			// assign an internal variable because we need to use
			// the latest value before setState() has completed.
			this._optionsFilterString = event.target.value;
			if (this.props.onInputChange) {
				this.props.onInputChange(event.target.value);
			}
			if (this.props.asyncOptions) {
				this.setState({
					isLoading: true,
					inputValue: event.target.value
				});
				this.loadAsyncOptions(event.target.value, {
					isLoading: false,
					isOpen: true
				}, this._bindCloseMenuIfClickedOutside);
			} else {
				var filteredOptions = this.filterOptions(this.state.options);
				this.setState({
					isOpen: true,
					inputValue: event.target.value,
					filteredOptions: filteredOptions,
					focusedOption: this._getNewFocusedOption(filteredOptions)
				}, this._bindCloseMenuIfClickedOutside);
			}
		},
	
		autoloadAsyncOptions: function autoloadAsyncOptions() {
			var _this8 = this;
	
			this.setState({
				isLoading: true
			});
			this.loadAsyncOptions('', { isLoading: false }, function () {
				// update with new options but don't focus
				_this8.setValue(_this8.props.value, false);
			});
		},
	
		loadAsyncOptions: function loadAsyncOptions(input, state, callback) {
			if (input === undefined) input = '';
	
			var _this9 = this;
	
			var thisRequestId = this._currentRequestId = requestId++;
			if (this.props.cacheAsyncResults) {
				for (var i = 0; i <= input.length; i++) {
					var cacheKey = input.slice(0, i);
					if (this._optionsCache[cacheKey] && (input === cacheKey || this._optionsCache[cacheKey].complete)) {
						var options = this._optionsCache[cacheKey].options;
						var filteredOptions = this.filterOptions(options);
						var newState = {
							options: options,
							filteredOptions: filteredOptions,
							focusedOption: this._getNewFocusedOption(filteredOptions)
						};
						for (var key in state) {
							if (state.hasOwnProperty(key)) {
								newState[key] = state[key];
							}
						}
						this.setState(newState);
						if (callback) callback.call(this, newState);
						return;
					}
				}
			}
	
			var optionsResponseHandler = function optionsResponseHandler(err, data) {
				if (err) throw err;
				if (_this9.props.cacheAsyncResults) {
					_this9._optionsCache[input] = data;
				}
				if (thisRequestId !== _this9._currentRequestId) {
					return;
				}
				var filteredOptions = _this9.filterOptions(data.options);
				var newState = {
					options: data.options,
					filteredOptions: filteredOptions,
					focusedOption: _this9._getNewFocusedOption(filteredOptions)
				};
				for (var key in state) {
					if (state.hasOwnProperty(key)) {
						newState[key] = state[key];
					}
				}
				_this9.setState(newState);
				if (callback) callback.call(_this9, newState);
			};
	
			var asyncOpts = this.props.asyncOptions(input, optionsResponseHandler);
	
			if (asyncOpts && typeof asyncOpts.then === 'function') {
				asyncOpts.then(function (data) {
					optionsResponseHandler(null, data);
				}, function (err) {
					optionsResponseHandler(err);
				});
			}
		},
	
		filterOptions: function filterOptions(options, values) {
			var _this10 = this;
	
			var filterValue = this._optionsFilterString;
			var exclude = (values || this.state.values).map(function (i) {
				return i[_this10.props.valueKey];
			});
			if (this.props.filterOptions) {
				return this.props.filterOptions.call(this, options, filterValue, exclude);
			} else {
				var filterOption = function filterOption(op) {
					if (this.props.multi && exclude.indexOf(op[this.props.valueKey]) > -1) return false;
					if (this.props.filterOption) return this.props.filterOption.call(this, op, filterValue);
					var valueTest = String(op[this.props.valueKey]);
					var labelTest = String(op[this.props.labelKey]);
					if (this.props.ignoreCase) {
						valueTest = valueTest.toLowerCase();
						labelTest = labelTest.toLowerCase();
						filterValue = filterValue.toLowerCase();
					}
					return !filterValue || this.props.matchPos === 'start' ? this.props.matchProp !== 'label' && valueTest.substr(0, filterValue.length) === filterValue || this.props.matchProp !== 'value' && labelTest.substr(0, filterValue.length) === filterValue : this.props.matchProp !== 'label' && valueTest.indexOf(filterValue) >= 0 || this.props.matchProp !== 'value' && labelTest.indexOf(filterValue) >= 0;
				};
				return (options || []).filter(filterOption, this);
			}
		},
	
		selectFocusedOption: function selectFocusedOption() {
			if (this.props.allowCreate && !this.state.focusedOption) {
				return this.selectValue(this.state.inputValue);
			}
	
			if (this.state.focusedOption) {
				return this.selectValue(this.state.focusedOption);
			}
		},
	
		focusOption: function focusOption(op) {
			this.setState({
				focusedOption: op
			});
		},
	
		focusNextOption: function focusNextOption() {
			this.focusAdjacentOption('next');
		},
	
		focusPreviousOption: function focusPreviousOption() {
			this.focusAdjacentOption('previous');
		},
	
		focusAdjacentOption: function focusAdjacentOption(dir) {
			this._focusedOptionReveal = true;
			var ops = this.state.filteredOptions.filter(function (op) {
				return !op.disabled;
			});
			if (!this.state.isOpen) {
				this.setState({
					isOpen: true,
					inputValue: '',
					focusedOption: this.state.focusedOption || ops[dir === 'next' ? 0 : ops.length - 1]
				}, this._bindCloseMenuIfClickedOutside);
				return;
			}
			if (!ops.length) {
				return;
			}
			var focusedIndex = -1;
			for (var i = 0; i < ops.length; i++) {
				if (this.state.focusedOption === ops[i]) {
					focusedIndex = i;
					break;
				}
			}
			var focusedOption = ops[0];
			if (dir === 'next' && focusedIndex > -1 && focusedIndex < ops.length - 1) {
				focusedOption = ops[focusedIndex + 1];
			} else if (dir === 'previous') {
				if (focusedIndex > 0) {
					focusedOption = ops[focusedIndex - 1];
				} else {
					focusedOption = ops[ops.length - 1];
				}
			}
			this.setState({
				focusedOption: focusedOption
			});
		},
	
		unfocusOption: function unfocusOption(op) {
			if (this.state.focusedOption === op) {
				this.setState({
					focusedOption: null
				});
			}
		},
	
		renderOptionLabel: function renderOptionLabel(op) {
			return op[this.props.labelKey];
		},
	
		buildMenu: function buildMenu() {
			var focusedValue = this.state.focusedOption ? this.state.focusedOption[this.props.valueKey] : null;
			var renderLabel = this.props.optionRenderer || this.renderOptionLabel;
			if (this.state.filteredOptions.length > 0) {
				focusedValue = focusedValue == null ? this.state.filteredOptions[0] : focusedValue;
			}
			// Add the current value to the filtered options in last resort
			var options = this.state.filteredOptions;
			if (this.props.allowCreate && this.state.inputValue.trim()) {
				var inputValue = this.state.inputValue;
				options = options.slice();
				var newOption = this.props.newOptionCreator ? this.props.newOptionCreator(inputValue) : {
					value: inputValue,
					label: inputValue,
					create: true
				};
				options.unshift(newOption);
			}
			var ops = Object.keys(options).map(function (key) {
				var op = options[key];
				var isSelected = this.state.value === op[this.props.valueKey];
				var isFocused = focusedValue === op[this.props.valueKey];
				var optionClass = classes({
					'Select-option': true,
					'is-selected': isSelected,
					'is-focused': isFocused,
					'is-disabled': op.disabled
				});
				var ref = isFocused ? 'focused' : null;
				var optionResult = React.createElement(this.props.optionComponent, {
					key: 'option-' + op[this.props.valueKey],
					className: optionClass,
					renderFunc: renderLabel,
					mouseDown: this.selectValue,
					mouseEnter: this.focusOption,
					mouseLeave: this.unfocusOption,
					addLabelText: this.props.addLabelText,
					option: op,
					ref: ref
				});
				return optionResult;
			}, this);
	
			if (ops.length) {
				return ops;
			} else {
				var noResultsText, promptClass;
				if (this.isLoading()) {
					promptClass = 'Select-searching';
					noResultsText = this.props.searchingText;
				} else if (this.state.inputValue || !this.props.asyncOptions) {
					promptClass = 'Select-noresults';
					noResultsText = this.props.noResultsText;
				} else {
					promptClass = 'Select-search-prompt';
					noResultsText = this.props.searchPromptText;
				}
	
				return React.createElement('div', { className: promptClass }, noResultsText);
			}
		},
	
		handleOptionLabelClick: function handleOptionLabelClick(value, event) {
			if (this.props.onOptionLabelClick) {
				this.props.onOptionLabelClick(value, event);
			}
		},
	
		isLoading: function isLoading() {
			return this.props.isLoading || this.state.isLoading;
		},
	
		render: function render() {
			var selectClass = classes('Select', this.props.className, {
				'Select--multi': this.props.multi,
				'is-searchable': this.props.searchable,
				'is-open': this.state.isOpen,
				'is-focused': this.state.isFocused,
				'is-loading': this.isLoading(),
				'is-disabled': this.props.disabled,
				'has-value': this.state.value
			});
			var value = [];
			if (this.props.multi) {
				this.state.values.forEach(function (val) {
					var renderLabel = this.props.valueRenderer || this.renderOptionLabel;
					var onOptionLabelClick = this.handleOptionLabelClick.bind(this, val);
					var onRemove = this.removeValue.bind(this, val);
					var valueComponent = React.createElement(this.props.valueComponent, {
						key: val[this.props.valueKey],
						option: val,
						renderer: renderLabel,
						optionLabelClick: !!this.props.onOptionLabelClick,
						onOptionLabelClick: onOptionLabelClick,
						onRemove: onRemove,
						disabled: this.props.disabled
					});
					value.push(valueComponent);
				}, this);
			}
	
			if (!this.state.inputValue && (!this.props.multi || !value.length)) {
				var val = this.state.values[0] || null;
				if (this.props.valueRenderer && !!this.state.values.length) {
					value.push(React.createElement(Value, {
						key: 0,
						option: val,
						renderer: this.props.valueRenderer,
						disabled: this.props.disabled }));
				} else {
					var singleValueComponent = React.createElement(this.props.singleValueComponent, {
						key: 'placeholder',
						value: val,
						placeholder: this.state.placeholder
					});
					value.push(singleValueComponent);
				}
			}
	
			// loading spinner
			var loading = this.isLoading() ? React.createElement('span', { className: 'Select-loading-zone', 'aria-hidden': 'true' }, React.createElement('span', { className: 'Select-loading' })) : null;
	
			// clear "x" button
			var clear = this.props.clearable && this.state.value && !this.props.disabled && !this.isLoading() ? React.createElement('span', { className: 'Select-clear-zone', title: this.props.multi ? this.props.clearAllText : this.props.clearValueText, 'aria-label': this.props.multi ? this.props.clearAllText : this.props.clearValueText, onMouseDown: this.clearValue, onTouchEnd: this.clearValue, onClick: this.clearValue }, React.createElement('span', { className: 'Select-clear', dangerouslySetInnerHTML: { __html: '&times;' } })) : null;
	
			// indicator arrow
			var arrow = React.createElement('span', { className: 'Select-arrow-zone', onMouseDown: this.handleMouseDownOnArrow }, React.createElement('span', { className: 'Select-arrow', onMouseDown: this.handleMouseDownOnArrow }));
	
			var menu;
			var menuProps;
			if (this.state.isOpen) {
				menuProps = {
					ref: 'menu',
					className: 'Select-menu',
					onMouseDown: this.handleMouseDownOnMenu
				};
				menu = React.createElement('div', { ref: 'selectMenuContainer', className: 'Select-menu-outer' }, React.createElement('div', menuProps, this.buildMenu()));
			}
	
			var input;
			var inputProps = {
				ref: 'input',
				className: 'Select-input ' + (this.props.inputProps.className || ''),
				tabIndex: this.props.tabIndex || 0,
				onFocus: this.handleInputFocus,
				onBlur: this.handleInputBlur
			};
			for (var key in this.props.inputProps) {
				if (this.props.inputProps.hasOwnProperty(key) && key !== 'className') {
					inputProps[key] = this.props.inputProps[key];
				}
			}
	
			if (!this.props.disabled) {
				if (this.props.searchable) {
					input = React.createElement(Input, _extends({ value: this.state.inputValue, onChange: this.handleInputChange, minWidth: '5' }, inputProps));
				} else {
					input = React.createElement('div', inputProps, ' ');
				}
			} else if (!this.props.multi || !this.state.values.length) {
				input = React.createElement('div', { className: 'Select-input' }, ' ');
			}
	
			return React.createElement('div', { ref: 'wrapper', className: selectClass }, React.createElement('input', { type: 'hidden', ref: 'value', name: this.props.name, value: this.state.value, disabled: this.props.disabled }), React.createElement('div', { className: 'Select-control', ref: 'control', onKeyDown: this.handleKeyDown, onMouseDown: this.handleMouseDown, onTouchEnd: this.handleMouseDown }, value, input, loading, clear, arrow), menu);
		}
	});
	
	module.exports = Select;

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = require("react-dom");

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) {
		for (var i = 1; i < arguments.length; i++) {
			var source = arguments[i];for (var key in source) {
				if (Object.prototype.hasOwnProperty.call(source, key)) {
					target[key] = source[key];
				}
			}
		}return target;
	};
	
	var React = __webpack_require__(7);
	
	var sizerStyle = { position: 'absolute', visibility: 'hidden', height: 0, width: 0, overflow: 'scroll', whiteSpace: 'pre' };
	
	var nextFrame = typeof window !== 'undefined' ? function () {
		return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {
			window.setTimeout(callback, 1000 / 60);
		};
	}().bind(window) : undefined; // If window is undefined, then we can't define a nextFrame function
	
	var AutosizeInput = React.createClass({
		displayName: 'AutosizeInput',
	
		propTypes: {
			value: React.PropTypes.any, // field value
			defaultValue: React.PropTypes.any, // default field value
			onChange: React.PropTypes.func, // onChange handler: function(newValue) {}
			style: React.PropTypes.object, // css styles for the outer element
			className: React.PropTypes.string, // className for the outer element
			minWidth: React.PropTypes.oneOfType([// minimum width for input element
			React.PropTypes.number, React.PropTypes.string]),
			inputStyle: React.PropTypes.object, // css styles for the input element
			inputClassName: React.PropTypes.string // className for the input element
		},
		getDefaultProps: function getDefaultProps() {
			return {
				minWidth: 1
			};
		},
		getInitialState: function getInitialState() {
			return {
				inputWidth: this.props.minWidth
			};
		},
		componentDidMount: function componentDidMount() {
			this.copyInputStyles();
			this.updateInputWidth();
		},
		componentDidUpdate: function componentDidUpdate() {
			this.updateInputWidth();
		},
		copyInputStyles: function copyInputStyles() {
			if (!this.isMounted() || !window.getComputedStyle) {
				return;
			}
			var inputStyle = window.getComputedStyle(this.refs.input);
			if (!inputStyle) {
				return;
			}
			var widthNode = this.refs.sizer;
			widthNode.style.fontSize = inputStyle.fontSize;
			widthNode.style.fontFamily = inputStyle.fontFamily;
			widthNode.style.fontWeight = inputStyle.fontWeight;
			widthNode.style.fontStyle = inputStyle.fontStyle;
			widthNode.style.letterSpacing = inputStyle.letterSpacing;
			if (this.props.placeholder) {
				var placeholderNode = this.refs.placeholderSizer;
				placeholderNode.style.fontSize = inputStyle.fontSize;
				placeholderNode.style.fontFamily = inputStyle.fontFamily;
				placeholderNode.style.fontWeight = inputStyle.fontWeight;
				placeholderNode.style.fontStyle = inputStyle.fontStyle;
				placeholderNode.style.letterSpacing = inputStyle.letterSpacing;
			}
		},
		updateInputWidth: function updateInputWidth() {
			if (!this.isMounted() || typeof this.refs.sizer.scrollWidth === 'undefined') {
				return;
			}
			var newInputWidth = undefined;
			if (this.props.placeholder) {
				newInputWidth = Math.max(this.refs.sizer.scrollWidth, this.refs.placeholderSizer.scrollWidth) + 2;
			} else {
				newInputWidth = this.refs.sizer.scrollWidth + 2;
			}
			if (newInputWidth < this.props.minWidth) {
				newInputWidth = this.props.minWidth;
			}
			if (newInputWidth !== this.state.inputWidth) {
				this.setState({
					inputWidth: newInputWidth
				});
			}
		},
		getInput: function getInput() {
			return this.refs.input;
		},
		focus: function focus() {
			this.refs.input.focus();
		},
		blur: function blur() {
			this.refs.input.blur();
		},
		select: function select() {
			this.refs.input.select();
		},
		render: function render() {
			var sizerValue = this.props.defaultValue || this.props.value || '';
			var wrapperStyle = this.props.style || {};
			if (!wrapperStyle.display) wrapperStyle.display = 'inline-block';
			var inputStyle = _extends({}, this.props.inputStyle);
			inputStyle.width = this.state.inputWidth + 'px';
			inputStyle.boxSizing = 'content-box';
			var placeholder = this.props.placeholder ? React.createElement('div', { ref: 'placeholderSizer', style: sizerStyle }, this.props.placeholder) : null;
			return React.createElement('div', { className: this.props.className, style: wrapperStyle }, React.createElement('input', _extends({}, this.props, { ref: 'input', className: this.props.inputClassName, style: inputStyle })), React.createElement('div', { ref: 'sizer', style: sizerStyle }, sizerValue), placeholder);
		}
	});
	
	module.exports = AutosizeInput;

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var React = __webpack_require__(7);
	var classes = __webpack_require__(9);
	
	var Value = React.createClass({
	
		displayName: 'Value',
	
		propTypes: {
			disabled: React.PropTypes.bool, // disabled prop passed to ReactSelect
			onOptionLabelClick: React.PropTypes.func, // method to handle click on value label
			onRemove: React.PropTypes.func, // method to handle remove of that value
			option: React.PropTypes.object.isRequired, // option passed to component
			optionLabelClick: React.PropTypes.bool, // indicates if onOptionLabelClick should be handled
			renderer: React.PropTypes.func // method to render option label passed to ReactSelect
		},
	
		blockEvent: function blockEvent(event) {
			event.stopPropagation();
		},
	
		handleOnRemove: function handleOnRemove(event) {
			if (!this.props.disabled) {
				this.props.onRemove(event);
			}
		},
	
		render: function render() {
			var label = this.props.option.label;
			if (this.props.renderer) {
				label = this.props.renderer(this.props.option);
			}
	
			if (!this.props.onRemove && !this.props.optionLabelClick) {
				return React.createElement('div', {
					className: classes('Select-value', this.props.option.className),
					style: this.props.option.style,
					title: this.props.option.title
				}, label);
			}
	
			if (this.props.optionLabelClick) {
				label = React.createElement('a', { className: classes('Select-item-label__a', this.props.option.className),
					onMouseDown: this.blockEvent,
					onTouchEnd: this.props.onOptionLabelClick,
					onClick: this.props.onOptionLabelClick,
					style: this.props.option.style,
					title: this.props.option.title }, label);
			}
	
			return React.createElement('div', { className: classes('Select-item', this.props.option.className),
				style: this.props.option.style,
				title: this.props.option.title }, React.createElement('span', { className: 'Select-item-icon',
				onMouseDown: this.blockEvent,
				onClick: this.handleOnRemove,
				onTouchEnd: this.handleOnRemove }, '×'), React.createElement('span', { className: 'Select-item-label' }, label));
		}
	
	});
	
	module.exports = Value;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var React = __webpack_require__(7);
	var classes = __webpack_require__(9);
	
	var SingleValue = React.createClass({
		displayName: 'SingleValue',
	
		propTypes: {
			placeholder: React.PropTypes.string, // this is default value provided by React-Select based component
			value: React.PropTypes.object // selected option
		},
		render: function render() {
			var classNames = classes('Select-placeholder', this.props.value && this.props.value.className);
			return React.createElement('div', {
				className: classNames,
				style: this.props.value && this.props.value.style,
				title: this.props.value && this.props.value.title
			}, this.props.placeholder);
		}
	});
	
	module.exports = SingleValue;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var React = __webpack_require__(7);
	var classes = __webpack_require__(9);
	
	var Option = React.createClass({
		displayName: 'Option',
	
		propTypes: {
			addLabelText: React.PropTypes.string, // string rendered in case of allowCreate option passed to ReactSelect
			className: React.PropTypes.string, // className (based on mouse position)
			mouseDown: React.PropTypes.func, // method to handle click on option element
			mouseEnter: React.PropTypes.func, // method to handle mouseEnter on option element
			mouseLeave: React.PropTypes.func, // method to handle mouseLeave on option element
			option: React.PropTypes.object.isRequired, // object that is base for that option
			renderFunc: React.PropTypes.func // method passed to ReactSelect component to render label text
		},
		blockEvent: function blockEvent(event) {
			event.preventDefault();
			if (event.target.tagName !== 'A' || !('href' in event.target)) {
				return;
			}
	
			if (event.target.target) {
				window.open(event.target.href);
			} else {
				window.location.href = event.target.href;
			}
		},
		handleMouseDown: function handleMouseDown(e) {
			this.props.mouseDown(this.props.option, e);
		},
		handleMouseEnter: function handleMouseEnter(e) {
			this.props.mouseEnter(this.props.option, e);
		},
		handleMouseLeave: function handleMouseLeave(e) {
			this.props.mouseLeave(this.props.option, e);
		},
		render: function render() {
			var option = this.props.option;
			var label = option.create ? this.props.addLabelText.replace('{label}', option.label) : this.props.renderFunc(option);
			var optionClasses = classes(this.props.className, option.className);
	
			return option.disabled ? React.createElement('div', { className: optionClasses,
				onMouseDown: this.blockEvent,
				onClick: this.blockEvent }, label) : React.createElement('div', { className: optionClasses,
				style: option.style,
				onMouseDown: this.handleMouseDown,
				onMouseEnter: this.handleMouseEnter,
				onMouseLeave: this.handleMouseLeave,
				onClick: this.handleMouseDown,
				title: option.title }, label);
		}
	});
	
	module.exports = Option;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React, cn) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	exports.default = UiIcon;
	
	var _icons = __webpack_require__(19);
	
	var _icons2 = _interopRequireDefault(_icons);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var docs = {
	  title: "UiIcon",
	  propDetails: [{ title: "icon",
	    required: true,
	    type: "string",
	    description: "The name of the icon." }, { title: "color",
	    required: true,
	    type: "string",
	    description: "One of the color names supported by Kodos." }, { title: "classes",
	    required: false,
	    type: "string",
	    description: "array of class names or space delimited classes to apply (passed into cn())" }, { title: "dimensions",
	    required: false,
	    type: "array",
	    description: "The [width, height] of the SVG in pixels (eg. [40, 40]). If not provided, the UiIcon will fill the parent container automatically." }, { title: "onClick",
	    required: false,
	    type: "function",
	    description: "A function to be called on click. If specified, the icon has additional hover/click style elements." }]
	};
	
	var iconsToSVG = {};
	_icons2.default.forEach(function (icon) {
	  var iconName = icon.replace('lr-', '').replace('.svg', '');
	  iconsToSVG[iconName] = __webpack_require__(20)("./" + icon);
	});
	
	function UiIcon(props) {
	  // User must pass in:
	  // - icon    : string : the icon name
	  // - color   : string : one of the color names supported by ui_toolkit
	  // - classes : string : array of class names or space delimited classes to apply (passed into cn())
	  // User may pass in:
	  // - dimensions : array    : the [width, height] of the SVG in pixels (eg. [40, 40])
	  //    + if not provided, the UiIcon will fill the parent container automatically
	  // - onClick    : function : handler that is fired when clicking on the icon
	  //    + if specified, the icon has additional hover/click style elements
	
	  var icon = props.icon,
	      classes = props.classes,
	      dimensions = props.dimensions,
	      onClick = props.onClick,
	      color = props.color;
	
	  return React.createElement("div", {
	    onClick: onClick,
	    className: cn('lr-ui-icon', classes, color, { clickable: onClick }),
	    style: dimensions ? { display: 'inline-block', width: dimensions[0] + 'px', height: dimensions[1] + 'px' } : null,
	    dangerouslySetInnerHTML: { __html: iconsToSVG[icon] }
	  });
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(9)))

/***/ },
/* 19 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var Icons = ["lr-add-company.svg", "lr-admin.svg", "lr-advanced-search.svg", "lr-alert-yellow.svg", "lr-android-large.svg", "lr-android.svg", "lr-apple-large.svg", "lr-apple.svg", "lr-arrow-left.svg", "lr-arrow-right.svg", "lr-audience.svg", "lr-blacklist-green.svg", "lr-blacklist-grey.svg", "lr-blacklist-white.svg", "lr-cancel.svg", "lr-caret-down.svg", "lr-caret-left.svg", "lr-caret-right.svg", "lr-caret-up.svg", "lr-cart.svg", "lr-check.svg", "lr-clear.svg", "lr-connect-source.svg", "lr-copy.svg", "lr-dashed-ring.svg", "lr-desktop.svg", "lr-destination.svg", "lr-distribute.svg", "lr-download.svg", "lr-edit.svg", "lr-ellipses.svg", "lr-email.svg", "lr-error.svg", "lr-exclamation.svg", "lr-fast-forward.svg", "lr-fast-lane-pill-black.svg", "lr-fast-lane-pill-green.svg", "lr-fast-lane-pill-white.svg", "lr-file-status.svg", "lr-gold.svg", "lr-hashed-pii.svg", "lr-household.svg", "lr-identity-link.svg", "lr-individual.svg", "lr-information-green.svg", "lr-information-white.svg", "lr-logo.svg", "lr-manage-segments.svg", "lr-mobile.svg", "lr-notification.svg", "lr-pearl.svg", "lr-pel.svg", "lr-phone-large.svg", "lr-phone.svg", "lr-platinum.svg", "lr-plus.svg", "lr-postal.svg", "lr-price-green.svg", "lr-price-white.svg", "lr-reports.svg", "lr-restricted-use-green.svg", "lr-restricted-use-grey.svg", "lr-restricted-use-white.svg", "lr-search.svg", "lr-segment-active.svg", "lr-segment-distributing.svg", "lr-segment-not-distributing.svg", "lr-segment-purchased.svg", "lr-segment-requested.svg", "lr-segment-stopped.svg", "lr-segment-under-review-change.svg", "lr-segment-under-review.svg", "lr-sftp.svg", "lr-silver.svg", "lr-small-dashed-ring.svg", "lr-source.svg", "lr-statistics-green.svg", "lr-statistics-white.svg", "lr-status-active.svg", "lr-status-cancelled.svg", "lr-status-error.svg", "lr-status-inactive.svg", "lr-status-inprogress.svg", "lr-status-pending.svg", "lr-status-stopped.svg", "lr-status-success.svg", "lr-status-waiting-approval.svg", "lr-success.svg", "lr-test.svg", "lr-trash.svg", "lr-unidentified-pel.svg", "lr-upload-box.svg", "lr-upload.svg", "lr-user-large.svg", "lr-user.svg", "lr-whitelist-green.svg", "lr-whitelist-grey.svg", "lr-whitelist-white.svg"];exports.default = Icons;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./lr-add-company.svg": 21,
		"./lr-admin.svg": 22,
		"./lr-advanced-search.svg": 23,
		"./lr-alert-yellow.svg": 24,
		"./lr-android-large.svg": 25,
		"./lr-android.svg": 26,
		"./lr-apple-large.svg": 27,
		"./lr-apple.svg": 28,
		"./lr-arrow-left.svg": 29,
		"./lr-arrow-right.svg": 30,
		"./lr-audience.svg": 31,
		"./lr-blacklist-green.svg": 32,
		"./lr-blacklist-grey.svg": 33,
		"./lr-blacklist-white.svg": 34,
		"./lr-cancel.svg": 35,
		"./lr-caret-down.svg": 36,
		"./lr-caret-left.svg": 37,
		"./lr-caret-right.svg": 38,
		"./lr-caret-up.svg": 39,
		"./lr-cart.svg": 40,
		"./lr-check.svg": 41,
		"./lr-clear.svg": 42,
		"./lr-connect-source.svg": 43,
		"./lr-copy.svg": 44,
		"./lr-dashed-ring.svg": 45,
		"./lr-desktop.svg": 46,
		"./lr-destination.svg": 47,
		"./lr-distribute.svg": 48,
		"./lr-download.svg": 49,
		"./lr-edit.svg": 50,
		"./lr-ellipses.svg": 51,
		"./lr-email.svg": 52,
		"./lr-error.svg": 53,
		"./lr-exclamation.svg": 54,
		"./lr-fast-forward.svg": 55,
		"./lr-fast-lane-pill-black.svg": 56,
		"./lr-fast-lane-pill-green.svg": 57,
		"./lr-fast-lane-pill-white.svg": 58,
		"./lr-file-status.svg": 59,
		"./lr-gold.svg": 60,
		"./lr-hashed-pii.svg": 61,
		"./lr-household.svg": 62,
		"./lr-identity-link.svg": 63,
		"./lr-individual.svg": 64,
		"./lr-information-green.svg": 65,
		"./lr-information-white.svg": 66,
		"./lr-logo.svg": 67,
		"./lr-manage-segments.svg": 68,
		"./lr-mobile.svg": 69,
		"./lr-notification.svg": 70,
		"./lr-pearl.svg": 71,
		"./lr-pel.svg": 72,
		"./lr-phone-large.svg": 73,
		"./lr-phone.svg": 74,
		"./lr-platinum.svg": 75,
		"./lr-plus.svg": 76,
		"./lr-postal.svg": 77,
		"./lr-price-green.svg": 78,
		"./lr-price-white.svg": 79,
		"./lr-reports.svg": 80,
		"./lr-restricted-use-green.svg": 81,
		"./lr-restricted-use-grey.svg": 82,
		"./lr-restricted-use-white.svg": 83,
		"./lr-search.svg": 84,
		"./lr-segment-active.svg": 85,
		"./lr-segment-distributing.svg": 86,
		"./lr-segment-not-distributing.svg": 87,
		"./lr-segment-purchased.svg": 88,
		"./lr-segment-requested.svg": 89,
		"./lr-segment-stopped.svg": 90,
		"./lr-segment-under-review-change.svg": 91,
		"./lr-segment-under-review.svg": 92,
		"./lr-sftp.svg": 93,
		"./lr-silver.svg": 94,
		"./lr-small-dashed-ring.svg": 95,
		"./lr-source.svg": 96,
		"./lr-statistics-green.svg": 97,
		"./lr-statistics-white.svg": 98,
		"./lr-status-active.svg": 99,
		"./lr-status-cancelled.svg": 100,
		"./lr-status-error.svg": 101,
		"./lr-status-inactive.svg": 102,
		"./lr-status-inprogress.svg": 103,
		"./lr-status-pending.svg": 104,
		"./lr-status-stopped.svg": 105,
		"./lr-status-success.svg": 106,
		"./lr-status-waiting-approval.svg": 107,
		"./lr-success.svg": 108,
		"./lr-test.svg": 109,
		"./lr-trash.svg": 110,
		"./lr-unidentified-pel.svg": 111,
		"./lr-upload-box.svg": 112,
		"./lr-upload.svg": 113,
		"./lr-user-large.svg": 114,
		"./lr-user.svg": 115,
		"./lr-whitelist-green.svg": 116,
		"./lr-whitelist-grey.svg": 117,
		"./lr-whitelist-white.svg": 118
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 20;


/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 112 112\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-add-company</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-add-company-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-add-company-lr-add-company\"><g id=\"lr-add-company-Add-Company-Account-Icon-(Large)\" transform=\"translate(16.000000, 8.000000)\"><g id=\"lr-add-company-Company-Icon-+-Mask\" transform=\"translate(0.000000, 16.000000)\"><g id=\"lr-add-company-Company-Icon\"><path d=\"M6,6 L8,4 L8,73 L6,71 L61,71 L59,73 L59,23.5756683 L61,25.3727053 L61,25.5818031 C59.555366,25.6635954 57.7643827,25.5187753 55.701381,24.980843 C52.6141632,24.1758442 49.5712137,22.6338029 46.7444782,20.1928182 C46.5822159,20.052699 46.4209657,19.909821 46.2607503,19.7641657 C44.7648513,18.404211 43.5480803,16.8771709 42.5910362,15.2160448 C40.3955707,11.4054106 39.7722244,7.47179499 39.9930131,4.19745031 C39.997902,4.12494742 40.2514074,4 40.2514074,4 L41.9737338,5.95039314 C41.9744035,5.96684325 6,6 6,6 Z M42.01754,4 C42.01754,4 40.9868927,12.2666225 47.6061211,18.2843084 C54.2253494,24.3019943 61,23.5756683 61,23.5756683 L61,73 L6,73 L6,4 L42.01754,4 Z\" id=\"lr-add-company-Rectangle-4\"></path><path d=\"M0,73 L2,71 L2,80 L0,78 L67,78 L65,80 L65,71 L67,73 L0,73 Z M67,71 L67,80 L0,80 L0,71 L67,71 Z\" id=\"lr-add-company-Rectangle-4-Copy-4\"></path><path d=\"M3,3 L5,1 L5,6 L3,4 L42,4 L42,5.50613991 C42.0042059,4.99109455 42.0225678,4.14119049 42.0908203,3.28803706 C42.0986871,3.18970321 42.1070324,3.0936284 42.115746,3 L3,3 Z M40.4450598,0.577859326 C40.4211158,0.688744502 40.3934149,0.830349966 40.3636375,1 L42.4000015,1 L40.4450598,0.577859326 Z M40.000177,6.02661143 L42,6 L39.9998842,6 C40.0000008,6.01301364 40.0000522,6.01698397 40.000177,6.02661143 Z M42.4000015,1 C42.4000015,1 42.1996296,1.92792642 42.0908203,3.28803706 C41.982011,4.6481477 42,6 42,6 L3,6 L3,1 L42.4000015,1 Z\" id=\"lr-add-company-Rectangle-4-Copy-11\"></path><path d=\"M14,16 L16,14 L16,25 L14,23 L23,23 L21,25 L21,14 L23,16 L14,16 Z M23,14 L23,25 L14,25 L14,14 L23,14 Z\" id=\"lr-add-company-Rectangle-4-Copy\"></path><path d=\"M29,16 L31,14 L31,25 L29,23 L38,23 L36,25 L36,14 L38,16 L29,16 Z M38,14 L38,25 L29,25 L29,14 L38,14 Z\" id=\"lr-add-company-Rectangle-4-Copy-2\"></path><path d=\"M46,25 L44,23 L53,23 L51,25 L51,21.9000015 L52.1748461,23.721847 C51.8855813,23.5908326 51.4108562,23.3566277 50.8104289,23.0280435 C49.8151869,22.4833967 48.81929,21.8632383 47.8803722,21.1722814 C47.4751283,20.8740593 47.0882456,20.5679282 46.7222803,20.2536911 C46.1344191,19.7489226 45.5744952,19.1771838 45.0407356,18.5508962 C43.8838233,17.1934312 43.0446327,15.8505969 42.5639599,14.9104605 L44.3447074,14 L44.3447074,16 L44,16 L44,15 L44,14 L44.3447074,14 C44.3447074,14 44.9544333,15.1925481 46,16.5565954 L46,25 Z M44.3447074,14 C44.3447074,14 45.7811155,16.8094358 48.0251832,18.7363105 C50.2692509,20.6631851 53,21.9000015 53,21.9000015 L53,25 L44,25 L44,14 L44.3447074,14 Z\" id=\"lr-add-company-Rectangle-4-Copy-3\"></path><path d=\"M14,35 L16,33 L16,44 L14,42 L23,42 L21,44 L21,33 L23,35 L14,35 Z M23,33 L23,44 L14,44 L14,33 L23,33 Z\" id=\"lr-add-company-Rectangle-4-Copy-6\"></path><path d=\"M29,35 L31,33 L31,44 L29,42 L38,42 L36,44 L36,33 L38,35 L29,35 Z M38,33 L38,44 L29,44 L29,33 L38,33 Z\" id=\"lr-add-company-Rectangle-4-Copy-5\"></path><path d=\"M14,54 L16,52 L16,63 L14,61 L23,61 L21,63 L21,52 L23,54 L14,54 Z M23,52 L23,63 L14,63 L14,52 L23,52 Z\" id=\"lr-add-company-Rectangle-4-Copy-9\"></path><path d=\"M29,54 L31,52 L31,63 L29,61 L38,61 L36,63 L36,52 L38,54 L29,54 Z M38,52 L38,63 L29,63 L29,52 L38,52 Z\" id=\"lr-add-company-Rectangle-4-Copy-8\"></path><path d=\"M44,55 L46,53 L46,73 L44,71 L53,71 L51,73 L51,53 L53,55 L44,55 Z M53,53 L53,73 L44,73 L44,53 L53,53 Z\" id=\"lr-add-company-Rectangle-4-Copy-10\"></path><path d=\"M44,35 L46,33 L46,44 L44,42 L53,42 L51,44 L51,33 L53,35 L44,35 Z M53,33 L53,44 L44,44 L44,33 L53,33 Z\" id=\"lr-add-company-Rectangle-4-Copy-7\"></path></g></g><g id=\"lr-add-company-Symbol\" transform=\"translate(40.000000, 0.500000)\"><path d=\"M41,20.5 C41,9.17816263 31.8218374,0 20.5,0 C9.17816263,0 0,9.17816263 0,20.5 C0,31.8218374 9.17816263,41 20.5,41 C31.8218374,41 41,31.8218374 41,20.5 Z M2,20.5 C2,10.2827321 10.2827321,2 20.5,2 C30.7172679,2 39,10.2827321 39,20.5 C39,30.7172679 30.7172679,39 20.5,39 C10.2827321,39 2,30.7172679 2,20.5 Z\" id=\"lr-add-company-Oval-2\"></path><path d=\"M19,32.5 C19,33.0522847 19.4477153,33.5 20,33.5 C20.5522847,33.5 21,33.0522847 21,32.5 L21,9.5 C21,8.94771525 20.5522847,8.5 20,8.5 C19.4477153,8.5 19,8.94771525 19,9.5 L19,32.5 Z\" id=\"lr-add-company-Line\"></path><path d=\"M32,22 C32.5522847,22 33,21.5522847 33,21 C33,20.4477153 32.5522847,20 32,20 L9,20 C8.44771525,20 8,20.4477153 8,21 C8,21.5522847 8.44771525,22 9,22 L32,22 Z\" id=\"lr-add-company-Line-Copy\"></path></g></g></g></g></svg>"

/***/ },
/* 22 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 112 112\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-admin</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-admin-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-admin-lr-admin\"><g id=\"lr-admin-admin\" transform=\"translate(7.000000, 7.000000)\"><path d=\"M67.2709172,48.9512966 C67.2709172,38.8336494 59.0689437,30.6316759 48.9512966,30.6316759 C38.8336494,30.6316759 30.6316759,38.8336494 30.6316759,48.9512966 C30.6316759,59.0689437 38.8336494,67.2709172 48.9512966,67.2709172 C59.0689437,67.2709172 67.2709172,59.0689437 67.2709172,48.9512966 Z M25.6316759,48.9512966 C25.6316759,36.0722257 36.0722257,25.6316759 48.9512966,25.6316759 C61.8303674,25.6316759 72.2709172,36.0722257 72.2709172,48.9512966 C72.2709172,61.8303674 61.8303674,72.2709172 48.9512966,72.2709172 C36.0722257,72.2709172 25.6316759,61.8303674 25.6316759,48.9512966 Z\" id=\"lr-admin-Oval-Copy\"></path><path d=\"M79.7734729,54.848364 C79.9401023,54.8739353 80.1107743,54.8872 80.2845365,54.8872 L88.848898,54.8872 C90.6932726,54.8872 92.1985931,53.3853927 92.1985931,51.5328196 L92.1985931,46.3697735 C92.1985931,44.5189657 90.6988835,43.0153931 88.848898,43.0153931 L80.2845365,43.0153931 C80.1108606,43.0153931 79.9401912,43.0287097 79.773502,43.054382 C79.0192411,39.0880606 77.5183469,35.3862756 75.4225854,32.100793 C75.7090576,31.9650145 75.9808496,31.7859178 76.2284517,31.562976 L82.5930126,25.8322995 C83.9636501,24.598172 84.077416,22.4748557 82.8378026,21.0981256 L79.3830504,17.2612346 C78.1446183,15.8858163 76.0240305,15.7719457 74.6492233,17.0098277 L68.2846623,22.7405041 C67.9781625,23.0164778 67.7345128,23.3369155 67.5547924,23.683526 C63.8561368,20.955822 59.5370895,19.0207822 54.848364,18.1291202 C54.8739353,17.9624908 54.8872,17.7918188 54.8872,17.6180566 L54.8872,9.05369509 C54.8872,7.20932051 53.3853927,5.704 51.5328196,5.704 L46.3697735,5.704 C44.5189657,5.704 43.0153931,7.20370958 43.0153931,9.05369509 L43.0153931,17.6180566 C43.0153931,17.7917325 43.0287097,17.9624019 43.054382,18.1290912 C39.064785,18.8877782 35.3428382,20.4018874 32.0429952,22.516965 C31.930007,22.3351901 31.7978359,22.1616824 31.6463751,21.9992606 L25.8054946,15.7356831 C24.5476342,14.3867929 22.4226558,14.3101013 21.0677695,15.5735531 L17.2917566,19.0947421 C15.9381615,20.35699 15.8613176,22.4792422 17.1230047,23.832236 L22.9638852,30.0958135 C23.1342177,30.2784727 23.3204506,30.4378036 23.5185186,30.5736373 C20.8777498,34.2218253 19.0026955,38.4606107 18.1291202,43.0542291 C17.9624908,43.0286578 17.7918188,43.0153931 17.6180566,43.0153931 L9.05369509,43.0153931 C7.20932051,43.0153931 5.704,44.5172004 5.704,46.3697735 L5.704,51.5328196 C5.704,53.3836275 7.20370958,54.8872 9.05369509,54.8872 L17.6180566,54.8872 C17.7917325,54.8872 17.9624019,54.8738834 18.1290912,54.8482111 C18.8649762,58.7179024 20.3115578,62.3357899 22.3278943,65.5609319 C21.8537599,65.7202187 21.4083557,65.9885501 21.0308623,66.3660436 L14.9749442,72.4219617 C13.6707744,73.7261315 13.6682901,75.8524919 14.9782572,77.1624589 L18.6290821,80.8132838 C19.9378009,82.1220026 22.061442,82.1247342 23.3695793,80.8165968 L29.4254975,74.7606787 C29.6652,74.5209761 29.8609299,74.2534988 30.0126202,73.9684206 C33.7845214,76.8283033 38.2231414,78.8547377 43.0542291,79.7734729 C43.0286578,79.9401023 43.0153931,80.1107743 43.0153931,80.2845365 L43.0153931,88.848898 C43.0153931,90.6932726 44.5172004,92.1985931 46.3697735,92.1985931 L51.5328196,92.1985931 C53.3836275,92.1985931 54.8872,90.6988835 54.8872,88.848898 L54.8872,80.2845365 C54.8872,80.1108606 54.8738834,79.9401912 54.8482111,79.773502 C59.3578083,78.9159284 63.5254378,77.0931774 67.1280383,74.5283105 L72.6884602,80.9248442 C73.8984788,82.3168114 76.0194862,82.467617 77.4176409,81.2522197 L81.3142413,77.8649566 C82.7110637,76.6507174 82.8619263,74.5324399 81.6482266,73.1362381 L76.0294999,66.6726324 C75.8060264,66.4155555 75.55148,66.2008134 75.2761531,66.0291936 C77.4484628,62.6875258 79.0017496,58.9064024 79.7734729,54.848364 Z M75.2761531,66.0291936 L77.9210534,61.7860223 C78.6213854,62.222561 79.2555963,62.7625663 79.8030478,63.3923373 L85.4217745,69.855943 C88.4480264,73.3372476 88.0744056,78.6135004 84.5945364,81.6385045 L80.6979361,85.0257676 C77.2173752,88.051373 71.9380365,87.6828459 68.9149123,84.2051394 L63.3544904,77.8086057 L67.1280383,74.5283105 L70.0279227,78.6014752 C65.7853444,81.6219735 60.9379236,83.7050488 55.782303,84.6854743 L54.8482111,79.773502 L59.7899461,79.0124135 C59.8545821,79.4320942 59.8872,79.8572068 59.8872,80.2845365 L59.8872,88.848898 C59.8872,93.4616719 56.1436915,97.1985931 51.5328196,97.1985931 L46.3697735,97.1985931 C41.7579851,97.1985931 38.0153931,93.4569044 38.0153931,88.848898 L38.0153931,80.2845365 C38.0153931,79.858078 38.0478139,79.433854 38.1120856,79.0150416 L43.0542291,79.7734729 L42.1201128,84.6854406 C36.5996759,83.6356108 31.4354759,81.3219475 26.9917336,77.9526701 L30.0126202,73.9684206 L33.6153503,77.1468864 C33.2295324,77.8719706 33.5482643,77.7089797 32.9610314,78.2962126 L26.9051132,84.3521308 C23.6433896,87.6138544 18.353927,87.6091965 15.0935482,84.3488178 L11.4427233,80.6979928 C8.1816964,77.436966 8.18105769,72.1447804 11.4394103,68.8864278 L17.4953284,62.8305097 C18.414177,61.9116611 18.0943027,62.193472 19.307117,61.7860236 L22.3278943,65.5609319 L18.0882707,68.2115152 C15.7162258,64.4174155 14.0594507,60.2117508 13.2171188,55.782303 L18.1290912,54.8482111 L18.8901796,59.7899461 C18.4704989,59.8545821 18.0453863,59.8872 17.6180566,59.8872 L9.05369509,59.8872 C4.44092124,59.8872 0.704,56.1436915 0.704,51.5328196 L0.704,46.3697735 C0.704,41.7579851 4.4456887,38.0153931 9.05369509,38.0153931 L17.6180566,38.0153931 C18.0445151,38.0153931 18.4687391,38.0478139 18.8875515,38.1120856 L18.1291202,43.0542291 L13.2171525,42.1201128 C14.2157354,36.869153 16.358034,31.9385821 19.4682688,27.641833 L23.5185186,30.5736373 L20.6906546,34.6971291 C20.1892418,34.3532635 19.7253733,33.9543306 19.3071167,33.5058053 L13.4662362,27.2422278 C10.320332,23.8686585 10.5095866,18.5825807 13.8817648,15.4379736 L17.6577777,11.9167846 C21.0306263,8.77155249 26.3196103,8.95560879 29.4622631,12.3256913 L35.3031437,18.5892688 C35.6744267,18.9874212 36.0043822,19.4187241 36.2894946,19.8774114 L32.0429952,22.516965 L29.3448512,18.3074497 C33.2276875,15.8186949 37.5547439,14.085332 42.1202902,13.2171188 L43.054382,18.1290912 L38.112647,18.8901796 C38.048011,18.4704989 38.0153931,18.0453863 38.0153931,17.6180566 L38.0153931,9.05369509 C38.0153931,4.44092124 41.7589016,0.704 46.3697735,0.704 L51.5328196,0.704 C56.144608,0.704 59.8872,4.4456887 59.8872,9.05369509 L59.8872,17.6180566 C59.8872,18.0445151 59.8547793,18.4687391 59.7905075,18.8875515 L54.848364,18.1291202 L55.7824803,13.2171525 C61.1413612,14.2362589 66.1657477,16.4464685 70.5224647,19.6594832 L67.5547924,23.683526 L63.982141,20.4253116 C64.4404937,19.5413283 64.1894962,19.6996446 64.9390093,19.02478 L71.3035703,13.2941035 C74.7315293,10.2075554 80.0134991,10.4890359 83.0987746,13.9155815 L86.5535268,17.7524726 C89.6394155,21.1796993 89.3630818,26.4646655 85.9386657,29.5480237 L79.5741047,35.2787001 C78.9687829,35.8237343 79.0757279,35.7848123 78.3478065,36.1298232 L75.4225854,32.100793 L79.6379847,29.4118511 C82.1039074,33.2776277 83.8222848,37.5811612 84.6854743,42.1202902 L79.773502,43.054382 L79.0124135,38.112647 C79.4320942,38.048011 79.8572068,38.0153931 80.2845365,38.0153931 L88.848898,38.0153931 C93.4616719,38.0153931 97.1985931,41.7589016 97.1985931,46.3697735 L97.1985931,51.5328196 C97.1985931,56.144608 93.4569044,59.8872 88.848898,59.8872 L80.2845365,59.8872 C79.858078,59.8872 79.433854,59.8547793 79.0150416,59.7905075 L79.7734729,54.848364 L84.6854406,55.7824803 C83.802432,60.4257028 82.0246486,64.8218094 79.4682418,68.7543343 L75.2761531,66.0291936 Z\" id=\"lr-admin-Combined-Shape\"></path></g></g></g></svg>"

/***/ },
/* 23 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>advanced_search</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-advanced-search-Permissioning\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-advanced-search-advanced_search\"><g id=\"lr-advanced-search-search\" transform=\"translate(1.000000, 1.000000)\"><path d=\"M13.5,7.5 C14.0522847,7.5 14.5,7.05228475 14.5,6.5 C14.5,5.94771525 14.0522847,5.5 13.5,5.5 L6.5,5.5 C5.94771525,5.5 5.5,5.94771525 5.5,6.5 C5.5,7.05228475 5.94771525,7.5 6.5,7.5 L13.5,7.5 Z\" id=\"lr-advanced-search-Path-4\"></path><path d=\"M13.5,11 C14.0522847,11 14.5,10.5522847 14.5,10 C14.5,9.44771525 14.0522847,9 13.5,9 L6.5,9 C5.94771525,9 5.5,9.44771525 5.5,10 C5.5,10.5522847 5.94771525,11 6.5,11 L13.5,11 Z\" id=\"lr-advanced-search-Path-4\"></path><path d=\"M13.5,14.5 C14.0522847,14.5 14.5,14.0522847 14.5,13.5 C14.5,12.9477153 14.0522847,12.5 13.5,12.5 L6.5,12.5 C5.94771525,12.5 5.5,12.9477153 5.5,13.5 C5.5,14.0522847 5.94771525,14.5 6.5,14.5 L13.5,14.5 Z\" id=\"lr-advanced-search-Path-4\"></path><path d=\"M19.7928932,21.2071068 C20.1834175,21.5976311 20.8165825,21.5976311 21.2071068,21.2071068 C21.5976311,20.8165825 21.5976311,20.1834175 21.2071068,19.7928932 L17.2071068,15.7928932 C16.8165825,15.4023689 16.1834175,15.4023689 15.7928932,15.7928932 C15.4023689,16.1834175 15.4023689,16.8165825 15.7928932,17.2071068 L19.7928932,21.2071068 Z\" id=\"lr-advanced-search-Path-5\"></path><path d=\"M20,10 C20,4.4771525 15.5228475,0 10,0 C4.4771525,0 0,4.4771525 0,10 C0,15.5228475 4.4771525,20 10,20 C15.5228475,20 20,15.5228475 20,10 Z M2,10 C2,5.581722 5.581722,2 10,2 C14.418278,2 18,5.581722 18,10 C18,14.418278 14.418278,18 10,18 C5.581722,18 2,14.418278 2,10 Z\" id=\"lr-advanced-search-Oval-3\"></path></g></g></g></svg>"

/***/ },
/* 24 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Yellow Alert Pill</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-alert-yellow-path-1\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-alert-yellow-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-alert-yellow-path-1\"></use></mask><rect id=\"lr-alert-yellow-path-3\" x=\"0.856826964\" y=\"0.863273639\" width=\"3.29624897\" height=\"9.86999989\" rx=\"1\"></rect><mask id=\"lr-alert-yellow-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"3.29624897\" height=\"9.86999989\" fill=\"white\"><use xlink:href=\"#lr-alert-yellow-path-3\"></use></mask><rect id=\"lr-alert-yellow-path-5\" x=\"0.856826964\" y=\"12.0634765\" width=\"3.29624897\" height=\"3.53152866\" rx=\"1.64812448\"></rect><mask id=\"lr-alert-yellow-mask-6\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"3.29624897\" height=\"3.53152866\" fill=\"white\"><use xlink:href=\"#lr-alert-yellow-path-5\"></use></mask></defs><g id=\"lr-alert-yellow-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-1283.000000, -644.000000)\" id=\"lr-alert-yellow-Yellow-Alert-Pill\"><g transform=\"translate(1283.344451, 644.094400)\"><use id=\"lr-alert-yellow-Rectangle-223\" stroke=\"#F9E900\" mask=\"url(#lr-alert-yellow-mask-2)\" stroke-width=\"4\" fill=\"#F9E900\" xlink:href=\"#lr-alert-yellow-path-1\"></use><g id=\"lr-alert-yellow-Exclamation-Point\" transform=\"translate(12.000000, 2.000000)\" stroke=\"#000000\" stroke-width=\"2\" fill=\"#000000\"><use id=\"lr-alert-yellow-Rectangle-16\" mask=\"url(#lr-alert-yellow-mask-4)\" xlink:href=\"#lr-alert-yellow-path-3\"></use><use id=\"lr-alert-yellow-Rectangle-16-Copy\" mask=\"url(#lr-alert-yellow-mask-6)\" xlink:href=\"#lr-alert-yellow-path-5\"></use></g></g></g></g></svg>"

/***/ },
/* 25 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-android</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-android-large-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-android-large-lr-android\"><g id=\"lr-android-large-Android-Icon\" transform=\"translate(5.000000, 1.000000)\"><path d=\"M2.44995117,23.1631265 C2.44995117,23.5591055 2.7604107,23.8685739 3.15457911,23.8685739 L3.2068617,23.8685739 C3.5941808,23.8685739 3.91148963,23.5514565 3.91148963,23.1631265 L3.91148963,15.3954499 C3.91148963,14.9994709 3.60103011,14.6900024 3.2068617,14.6900024 L3.15457911,14.6900024 C2.76726,14.6900024 2.44995117,15.0071198 2.44995117,15.3954499 L2.44995117,23.1631265 Z M3.15457911,13.1900024 L3.2068617,13.1900024 C4.42444409,13.1900024 5.41148963,14.1660394 5.41148963,15.3954499 L5.41148963,23.1631265 C5.41148963,24.3811614 4.42132965,25.3685739 3.2068617,25.3685739 L3.15457911,25.3685739 C1.93699672,25.3685739 0.949951172,24.3925369 0.949951172,23.1631265 L0.949951172,15.3954499 C0.949951172,14.1774149 1.94011116,13.1900024 3.15457911,13.1900024 Z\" id=\"lr-android-large-Rectangle-303\"></path><path d=\"M27.1999512,23.1623962 C27.1999512,23.5583752 27.5104107,23.8678436 27.9045791,23.8678436 L27.9568617,23.8678436 C28.3441808,23.8678436 28.6614896,23.5507263 28.6614896,23.1623962 L28.6614896,15.3947196 C28.6614896,14.9987406 28.3510301,14.6892722 27.9568617,14.6892722 L27.9045791,14.6892722 C27.51726,14.6892722 27.1999512,15.0063895 27.1999512,15.3947196 L27.1999512,23.1623962 Z M27.9045791,13.1892722 L27.9568617,13.1892722 C29.1744441,13.1892722 30.1614896,14.1653091 30.1614896,15.3947196 L30.1614896,23.1623962 C30.1614896,24.3804312 29.1713296,25.3678436 27.9568617,25.3678436 L27.9045791,25.3678436 C26.6869967,25.3678436 25.6999512,24.3918067 25.6999512,23.1623962 L25.6999512,15.3947196 C25.6999512,14.1766846 26.6901112,13.1892722 27.9045791,13.1892722 Z\" id=\"lr-android-large-Rectangle-303-Copy\"></path><g id=\"lr-android-large-Group-3\" transform=\"translate(6.000000, 2.500000)\"><path d=\"M9.5,0.25 C4.46695215,0.25 0.384615385,4.30217172 0.384615385,9.30357143 L0.384615385,10.0535714 L1.13461538,10.0535714 C8.91169614,10.0535714 8.91169614,10.0535714 17.8653846,10.0535714 L18.6153846,10.0535714 L18.6153846,9.30357143 C18.6153846,4.30217172 14.5330478,0.25 9.5,0.25 Z M17.8653846,8.55357143 C8.91169614,8.55357143 8.91169614,8.55357143 1.13461538,8.55357143 L1.88461538,9.30357143 C1.88461538,5.1330994 5.29289915,1.75 9.5,1.75 C13.7071009,1.75 17.1153846,5.1330994 17.1153846,9.30357143 L17.8653846,8.55357143 Z\" id=\"lr-android-large-Oval-46\"></path><path d=\"M6.65384615,5.70535714 C6.65384615,4.96978766 6.05463079,4.375 5.31730769,4.375 C4.57998459,4.375 3.98076923,4.96978766 3.98076923,5.70535714 C3.98076923,6.44092662 4.57998459,7.03571429 5.31730769,7.03571429 C6.05463079,7.03571429 6.65384615,6.44092662 6.65384615,5.70535714 Z M4.98076923,5.70535714 C4.98076923,5.52373945 5.13061592,5.375 5.31730769,5.375 C5.50399946,5.375 5.65384615,5.52373945 5.65384615,5.70535714 C5.65384615,5.88697484 5.50399946,6.03571429 5.31730769,6.03571429 C5.13061592,6.03571429 4.98076923,5.88697484 4.98076923,5.70535714 Z\" id=\"lr-android-large-Oval-47\"></path><path d=\"M14.9076855,5.70535714 C14.9076855,4.96978766 14.3084701,4.375 13.571147,4.375 C12.8338239,4.375 12.2346086,4.96978766 12.2346086,5.70535714 C12.2346086,6.44092662 12.8338239,7.03571429 13.571147,7.03571429 C14.3084701,7.03571429 14.9076855,6.44092662 14.9076855,5.70535714 Z M13.2346086,5.70535714 C13.2346086,5.52373945 13.3844553,5.375 13.571147,5.375 C13.7578388,5.375 13.9076855,5.52373945 13.9076855,5.70535714 C13.9076855,5.88697484 13.7578388,6.03571429 13.571147,6.03571429 C13.3844553,6.03571429 13.2346086,5.88697484 13.2346086,5.70535714 Z\" id=\"lr-android-large-Oval-47-Copy\"></path></g><path d=\"M22.1240377,1.91602515 C22.3538021,1.57137863 22.2606717,1.10572662 21.9160251,0.875962279 C21.5713786,0.646197935 21.1057266,0.739328336 20.8759623,1.08397485 L18.8759623,4.08397485 C18.6461979,4.42862137 18.7393283,4.89427338 19.0839749,5.12403772 C19.4286214,5.35380207 19.8942734,5.26067166 20.1240377,4.91602515 L22.1240377,1.91602515 Z\" id=\"lr-android-large-Line\"></path><path d=\"M10.1240377,1.08397485 C9.89427338,0.739328336 9.42862137,0.646197935 9.08397485,0.875962279 C8.73932834,1.10572662 8.64619793,1.57137863 8.87596228,1.91602515 L10.8759623,4.91602515 C11.1057266,5.26067166 11.5713786,5.35380207 11.9160251,5.12403772 C12.2606717,4.89427338 12.3538021,4.42862137 12.1240377,4.08397485 L10.1240377,1.08397485 Z\" id=\"lr-android-large-Line-Copy-2\"></path><path d=\"M24.25,15.25 L23.5,14.5 L23.5,27.6512094 C23.5,27.8949325 23.2930571,28.1000004 23.0454985,28.1000004 L20.75,28.1000004 L20,28.1000004 L20,28.8500004 L20,33.9982088 C20,34.2267366 19.7937635,34.5067311 19.5883866,34.5640938 L19.4055955,34.6425349 C19.3704099,34.6363023 19.2569908,34.6500015 19.1000004,34.6500015 C18.9430099,34.6500015 18.8295909,34.6363023 18.7547897,34.617004 C18.7411338,34.6134809 18.6243309,34.567767 18.6243309,34.567767 C18.409451,34.503641 18.2000008,34.2234728 18.2000008,33.9982088 L18.2000008,28.8500004 L18.2000008,28.1000004 L17.4500008,28.1000004 L13.5499992,28.1000004 L12.7999992,28.1000004 L12.7999992,28.8500004 L12.7999992,33.9982088 C12.7999992,34.2267366 12.5937628,34.5067311 12.3883859,34.5640938 L12.2055947,34.6425349 C12.1704091,34.6363023 12.0569901,34.6500015 11.8999996,34.6500015 C11.7430092,34.6500015 11.6295901,34.6363023 11.5547889,34.617004 C11.541133,34.6134809 11.4243301,34.567767 11.4243301,34.567767 C11.2094503,34.503641 11,34.2234728 11,33.9982088 L11,28.8500004 L11,28.1000004 L10.25,28.1000004 L7.96311406,28.1000004 C7.71781714,28.1000004 7.51225717,27.8938521 7.5120345,27.650523 L7.49999969,14.4993137 L6.75,15.25 L24.25,15.25 Z M5.99931335,13.75 L6.00000031,14.5006863 L6.01203513,27.6518957 C6.01301426,28.7218516 6.88865681,29.6000004 7.96311406,29.6000004 L10.25,29.6000004 L9.5,28.8500004 L9.5,33.9982088 C9.5,34.8876421 10.1458974,35.7516178 10.9953831,36.0051272 L11.2098566,35.2864471 L10.8253087,35.9303593 C10.9109495,35.9815044 11.0286696,36.0303848 11.1800673,36.0694446 C11.3803555,36.1211178 11.6194901,36.1500015 11.8999996,36.1500015 C12.1805092,36.1500015 12.4196437,36.1211178 12.6199319,36.0694446 C12.7713297,36.0303848 12.8890497,35.9815044 12.9746905,35.9303593 L12.5901426,35.2864471 L12.7918994,36.0088003 C13.6541391,35.7679726 14.2999992,34.8911284 14.2999992,33.9982088 L14.2999992,28.8500004 L13.5499992,29.6000004 L17.4500008,29.6000004 L16.7000008,28.8500004 L16.7000008,33.9982088 C16.7000008,34.8876421 17.3458981,35.7516178 18.1953839,36.0051272 L18.4098574,35.2864471 L18.0253095,35.9303593 C18.1109503,35.9815044 18.2286703,36.0303848 18.3800681,36.0694446 C18.5803563,36.1211178 18.8194908,36.1500015 19.1000004,36.1500015 C19.3805099,36.1500015 19.6196445,36.1211178 19.8199327,36.0694446 C19.9713304,36.0303848 20.0890505,35.9815044 20.1746913,35.9303593 L19.7901434,35.2864471 L19.9919001,36.0088003 C20.8541399,35.7679726 21.5,34.8911284 21.5,33.9982088 L21.5,28.8500004 L20.75,29.6000004 L23.0454985,29.6000004 C24.1184434,29.6000004 25,28.7264312 25,27.6512094 L25,14.5 L25,13.75 L24.25,13.75 L6.75,13.75 L5.99931335,13.75 Z\" id=\"lr-android-large-Path-24\"></path></g></g></g></svg>"

/***/ },
/* 26 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-android</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-android-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-android-lr-android\"><g id=\"lr-android-Android-Icon\" transform=\"translate(5.000000, 1.000000)\"><path d=\"M2.44995117,23.1631265 C2.44995117,23.5591055 2.7604107,23.8685739 3.15457911,23.8685739 L3.2068617,23.8685739 C3.5941808,23.8685739 3.91148963,23.5514565 3.91148963,23.1631265 L3.91148963,15.3954499 C3.91148963,14.9994709 3.60103011,14.6900024 3.2068617,14.6900024 L3.15457911,14.6900024 C2.76726,14.6900024 2.44995117,15.0071198 2.44995117,15.3954499 L2.44995117,23.1631265 Z M3.15457911,13.1900024 L3.2068617,13.1900024 C4.42444409,13.1900024 5.41148963,14.1660394 5.41148963,15.3954499 L5.41148963,23.1631265 C5.41148963,24.3811614 4.42132965,25.3685739 3.2068617,25.3685739 L3.15457911,25.3685739 C1.93699672,25.3685739 0.949951172,24.3925369 0.949951172,23.1631265 L0.949951172,15.3954499 C0.949951172,14.1774149 1.94011116,13.1900024 3.15457911,13.1900024 Z\" id=\"lr-android-Rectangle-303\"></path><path d=\"M27.1999512,23.1623962 C27.1999512,23.5583752 27.5104107,23.8678436 27.9045791,23.8678436 L27.9568617,23.8678436 C28.3441808,23.8678436 28.6614896,23.5507263 28.6614896,23.1623962 L28.6614896,15.3947196 C28.6614896,14.9987406 28.3510301,14.6892722 27.9568617,14.6892722 L27.9045791,14.6892722 C27.51726,14.6892722 27.1999512,15.0063895 27.1999512,15.3947196 L27.1999512,23.1623962 Z M27.9045791,13.1892722 L27.9568617,13.1892722 C29.1744441,13.1892722 30.1614896,14.1653091 30.1614896,15.3947196 L30.1614896,23.1623962 C30.1614896,24.3804312 29.1713296,25.3678436 27.9568617,25.3678436 L27.9045791,25.3678436 C26.6869967,25.3678436 25.6999512,24.3918067 25.6999512,23.1623962 L25.6999512,15.3947196 C25.6999512,14.1766846 26.6901112,13.1892722 27.9045791,13.1892722 Z\" id=\"lr-android-Rectangle-303-Copy\"></path><g id=\"lr-android-Group-3\" transform=\"translate(6.000000, 2.500000)\"><path d=\"M9.5,0.25 C4.46695215,0.25 0.384615385,4.30217172 0.384615385,9.30357143 L0.384615385,10.0535714 L1.13461538,10.0535714 C8.91169614,10.0535714 8.91169614,10.0535714 17.8653846,10.0535714 L18.6153846,10.0535714 L18.6153846,9.30357143 C18.6153846,4.30217172 14.5330478,0.25 9.5,0.25 Z M17.8653846,8.55357143 C8.91169614,8.55357143 8.91169614,8.55357143 1.13461538,8.55357143 L1.88461538,9.30357143 C1.88461538,5.1330994 5.29289915,1.75 9.5,1.75 C13.7071009,1.75 17.1153846,5.1330994 17.1153846,9.30357143 L17.8653846,8.55357143 Z\" id=\"lr-android-Oval-46\"></path><path d=\"M6.65384615,5.70535714 C6.65384615,4.96978766 6.05463079,4.375 5.31730769,4.375 C4.57998459,4.375 3.98076923,4.96978766 3.98076923,5.70535714 C3.98076923,6.44092662 4.57998459,7.03571429 5.31730769,7.03571429 C6.05463079,7.03571429 6.65384615,6.44092662 6.65384615,5.70535714 Z M4.98076923,5.70535714 C4.98076923,5.52373945 5.13061592,5.375 5.31730769,5.375 C5.50399946,5.375 5.65384615,5.52373945 5.65384615,5.70535714 C5.65384615,5.88697484 5.50399946,6.03571429 5.31730769,6.03571429 C5.13061592,6.03571429 4.98076923,5.88697484 4.98076923,5.70535714 Z\" id=\"lr-android-Oval-47\"></path><path d=\"M14.9076855,5.70535714 C14.9076855,4.96978766 14.3084701,4.375 13.571147,4.375 C12.8338239,4.375 12.2346086,4.96978766 12.2346086,5.70535714 C12.2346086,6.44092662 12.8338239,7.03571429 13.571147,7.03571429 C14.3084701,7.03571429 14.9076855,6.44092662 14.9076855,5.70535714 Z M13.2346086,5.70535714 C13.2346086,5.52373945 13.3844553,5.375 13.571147,5.375 C13.7578388,5.375 13.9076855,5.52373945 13.9076855,5.70535714 C13.9076855,5.88697484 13.7578388,6.03571429 13.571147,6.03571429 C13.3844553,6.03571429 13.2346086,5.88697484 13.2346086,5.70535714 Z\" id=\"lr-android-Oval-47-Copy\"></path></g><path d=\"M22.1240377,1.91602515 C22.3538021,1.57137863 22.2606717,1.10572662 21.9160251,0.875962279 C21.5713786,0.646197935 21.1057266,0.739328336 20.8759623,1.08397485 L18.8759623,4.08397485 C18.6461979,4.42862137 18.7393283,4.89427338 19.0839749,5.12403772 C19.4286214,5.35380207 19.8942734,5.26067166 20.1240377,4.91602515 L22.1240377,1.91602515 Z\" id=\"lr-android-Line\"></path><path d=\"M10.1240377,1.08397485 C9.89427338,0.739328336 9.42862137,0.646197935 9.08397485,0.875962279 C8.73932834,1.10572662 8.64619793,1.57137863 8.87596228,1.91602515 L10.8759623,4.91602515 C11.1057266,5.26067166 11.5713786,5.35380207 11.9160251,5.12403772 C12.2606717,4.89427338 12.3538021,4.42862137 12.1240377,4.08397485 L10.1240377,1.08397485 Z\" id=\"lr-android-Line-Copy-2\"></path><path d=\"M24.25,15.25 L23.5,14.5 L23.5,27.6512094 C23.5,27.8949325 23.2930571,28.1000004 23.0454985,28.1000004 L20.75,28.1000004 L20,28.1000004 L20,28.8500004 L20,33.9982088 C20,34.2267366 19.7937635,34.5067311 19.5883866,34.5640938 L19.4055955,34.6425349 C19.3704099,34.6363023 19.2569908,34.6500015 19.1000004,34.6500015 C18.9430099,34.6500015 18.8295909,34.6363023 18.7547897,34.617004 C18.7411338,34.6134809 18.6243309,34.567767 18.6243309,34.567767 C18.409451,34.503641 18.2000008,34.2234728 18.2000008,33.9982088 L18.2000008,28.8500004 L18.2000008,28.1000004 L17.4500008,28.1000004 L13.5499992,28.1000004 L12.7999992,28.1000004 L12.7999992,28.8500004 L12.7999992,33.9982088 C12.7999992,34.2267366 12.5937628,34.5067311 12.3883859,34.5640938 L12.2055947,34.6425349 C12.1704091,34.6363023 12.0569901,34.6500015 11.8999996,34.6500015 C11.7430092,34.6500015 11.6295901,34.6363023 11.5547889,34.617004 C11.541133,34.6134809 11.4243301,34.567767 11.4243301,34.567767 C11.2094503,34.503641 11,34.2234728 11,33.9982088 L11,28.8500004 L11,28.1000004 L10.25,28.1000004 L7.96311406,28.1000004 C7.71781714,28.1000004 7.51225717,27.8938521 7.5120345,27.650523 L7.49999969,14.4993137 L6.75,15.25 L24.25,15.25 Z M5.99931335,13.75 L6.00000031,14.5006863 L6.01203513,27.6518957 C6.01301426,28.7218516 6.88865681,29.6000004 7.96311406,29.6000004 L10.25,29.6000004 L9.5,28.8500004 L9.5,33.9982088 C9.5,34.8876421 10.1458974,35.7516178 10.9953831,36.0051272 L11.2098566,35.2864471 L10.8253087,35.9303593 C10.9109495,35.9815044 11.0286696,36.0303848 11.1800673,36.0694446 C11.3803555,36.1211178 11.6194901,36.1500015 11.8999996,36.1500015 C12.1805092,36.1500015 12.4196437,36.1211178 12.6199319,36.0694446 C12.7713297,36.0303848 12.8890497,35.9815044 12.9746905,35.9303593 L12.5901426,35.2864471 L12.7918994,36.0088003 C13.6541391,35.7679726 14.2999992,34.8911284 14.2999992,33.9982088 L14.2999992,28.8500004 L13.5499992,29.6000004 L17.4500008,29.6000004 L16.7000008,28.8500004 L16.7000008,33.9982088 C16.7000008,34.8876421 17.3458981,35.7516178 18.1953839,36.0051272 L18.4098574,35.2864471 L18.0253095,35.9303593 C18.1109503,35.9815044 18.2286703,36.0303848 18.3800681,36.0694446 C18.5803563,36.1211178 18.8194908,36.1500015 19.1000004,36.1500015 C19.3805099,36.1500015 19.6196445,36.1211178 19.8199327,36.0694446 C19.9713304,36.0303848 20.0890505,35.9815044 20.1746913,35.9303593 L19.7901434,35.2864471 L19.9919001,36.0088003 C20.8541399,35.7679726 21.5,34.8911284 21.5,33.9982088 L21.5,28.8500004 L20.75,29.6000004 L23.0454985,29.6000004 C24.1184434,29.6000004 25,28.7264312 25,27.6512094 L25,14.5 L25,13.75 L24.25,13.75 L6.75,13.75 L5.99931335,13.75 Z\" id=\"lr-android-Path-24\"></path></g></g></g></svg>"

/***/ },
/* 27 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-apple</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-apple-large-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-apple-large-lr-apple\"><g id=\"lr-apple-large-apple\" transform=\"translate(6.000000, 2.000000)\"><path d=\"M11.9898239,35.016516 C12.8409605,34.5380554 14.245335,34.1375962 15.0135346,34.1375971 C16.0995108,34.1375982 17.0049554,34.2932854 17.7582279,34.6892899 C18.9723828,35.3275858 19.5323363,35.5364133 20.2126316,35.5364133 C20.5284244,35.5364133 20.6724161,35.5335395 20.862492,35.5183341 C21.4432752,35.4718734 21.9382208,35.3147896 22.4213897,34.97803 C23.4280528,34.2764048 24.2842589,33.3881958 25.511977,31.5575686 C25.647959,31.3548085 25.7817273,31.1458323 25.9132685,30.9311558 C26.4508113,30.0538805 26.9304738,29.1183572 27.3475639,28.1832635 C27.4934807,27.8561257 27.6213487,27.5519639 27.7304076,27.27823 C27.7966499,27.1119643 27.8424333,26.9912786 27.8669566,26.9236639 L28.1046716,26.2682431 L27.4683169,25.9833966 C27.3770351,25.9425369 27.1881197,25.8390713 26.934114,25.6660691 C26.4975304,25.3687139 26.0583255,24.9875391 25.6474989,24.5158925 C24.6742096,23.3985147 24.0151082,21.9601715 23.8146538,20.1456746 C23.5887652,18.1009488 24.1434825,16.3382728 25.2129557,14.8538918 C25.5312974,14.4120478 25.8722348,14.0297174 26.2114882,13.7095599 C26.4098585,13.5223554 26.5583611,13.4010607 26.6320912,13.3478577 L27.2441739,12.9061846 L26.7986064,12.296931 C26.5262422,11.9245095 26.0435665,11.3933719 25.3732651,10.8629059 C24.6733662,10.309017 23.9093536,9.88272667 23.0850629,9.63767357 C21.6569876,9.21312159 20.4860053,9.2216462 19.4090834,9.49803211 C19.3126723,9.52277549 19.222063,9.54826276 19.1209474,9.57841948 C19.0061283,9.61313394 18.9558361,9.62841404 18.9278829,9.63656534 C18.7640702,9.68433388 17.6137127,10.161196 17.3102603,10.2770158 C16.9616819,10.4100591 16.6407138,10.5217821 16.3397313,10.6125393 C15.7971858,10.7761364 15.3451565,10.8628357 15.0135359,10.8628357 C14.5051165,10.8628357 13.9644222,10.7025574 12.8092674,10.2523202 C11.8612697,9.88259973 11.4766621,9.74611851 10.9870152,9.62762027 C9.45942215,9.25793125 8.26344592,9.25271797 7.12377156,9.64798478 C5.07659979,10.3579938 2.98570906,12.1314382 1.81916519,15.0415343 C1.69051395,15.3624717 1.57761094,15.6926817 1.47977545,16.0313477 C0.935456236,17.9155555 0.879542916,19.8959173 1.10729939,21.7196521 C1.15331101,22.0880851 1.20014817,22.3599782 1.23323439,22.5156129 C1.23048147,22.5271406 1.25119608,22.6820648 1.28630166,22.8970618 C1.34365351,23.2483016 1.42151754,23.6450801 1.52299216,24.0802347 C1.81176118,25.3185656 2.23222316,26.6227787 2.80997074,27.9354554 C3.92876183,30.4774151 4.99036467,32.2090041 6.21424256,33.7245825 C7.11621818,34.8415361 8.16984218,35.4337451 9.20093016,35.5329648 C10.3642576,35.6449095 11.0133606,35.5654282 11.9898239,35.016516 Z M7.38124585,32.7821901 C6.23970689,31.3685754 5.24764871,29.7504213 4.18287781,27.3311987 C3.64474049,26.1085188 3.25249027,24.8918146 2.98379961,23.7395859 C2.89016333,23.3380446 2.81875953,22.974186 2.76669657,22.655337 C2.73615327,22.4682807 2.71909198,22.3406796 2.712582,22.2798488 C2.6758714,22.0881025 2.63621713,21.8579066 2.59573733,21.5337691 C2.39103905,19.8946702 2.44151457,18.1069067 2.92084825,16.4476519 C3.00504031,16.1562138 3.10177102,15.8733033 3.21146651,15.5996535 C4.20311013,13.1258689 5.95292483,11.6417172 7.61528587,11.0651699 C8.45342563,10.7744826 9.36531593,10.7784576 10.634189,11.0855344 C11.0345699,11.1824296 11.3818362,11.30566 12.2020912,11.6255655 C13.6029898,12.1715942 14.2481376,12.3628357 15.0135359,12.3628357 C15.5185501,12.3628357 16.1020335,12.2509235 16.7727768,12.04867 C17.1115314,11.9465232 17.4653403,11.8233689 17.8451359,11.6784109 C18.2208641,11.5350053 19.2767241,11.0973156 19.3478005,11.0765894 C19.3854651,11.0656062 19.4461023,11.047183 19.5496478,11.0158533 C19.6336049,10.9908139 19.7063204,10.97036 19.7819656,10.950946 C20.607433,10.7390945 21.5041479,10.7325665 22.6576176,11.0754811 C23.2825491,11.2612668 23.8824501,11.5959889 24.4424149,12.0391363 C24.7644747,12.2940094 25.0524937,12.5681308 25.3008003,12.841368 C25.4466466,13.0018577 25.5439191,13.1223379 25.5878452,13.182401 L25.7543604,12.1314742 C25.2965623,12.4618171 24.6438011,13.0778356 23.9959338,13.9770465 C22.7221741,15.7449681 22.0539431,17.8683464 22.3237242,20.3103832 C22.5587261,22.4376012 23.3477101,24.1593845 24.5164212,25.501115 C25.3755116,26.4873876 26.2434514,27.0785377 26.8554783,27.3524945 L26.4568386,26.4122272 C26.4374835,26.4655926 26.3972136,26.5717447 26.336931,26.7230518 C26.2351151,26.9786059 26.1150435,27.2642223 25.9776594,27.5722301 C25.5853182,28.4518383 25.1345448,29.3310168 24.6342744,30.1474633 C24.5132367,30.344998 24.3905088,30.5367265 24.2661991,30.7220822 C23.1396794,32.4018145 22.4134941,33.1551428 21.5636913,33.7474394 C21.3163188,33.9198533 21.0745781,33.9965759 20.7428791,34.0231107 C20.6058687,34.0340711 20.4885143,34.0364133 20.2126339,34.0364133 C19.8538025,34.0364133 19.4617539,33.8902038 18.4562199,33.3615824 C17.4475857,32.8313312 16.3208759,32.6375984 15.0135362,32.6375971 C13.9757861,32.6375959 12.3214638,33.109328 11.2547865,33.7089534 C10.5933714,34.0807633 10.2308969,34.1251476 9.3446086,34.0398618 C8.72506476,33.9802443 8.03591621,33.5928954 7.38124585,32.7821901 Z\" id=\"lr-apple-large-Path-198\"></path><path d=\"M17.8649771,5.92478269 C17.1370832,6.7313568 16.370478,7.24368812 15.6131666,7.527774 C15.1798617,7.69031719 14.8611499,7.74312922 14.7132048,7.74440746 L15.4632244,8.39615346 C15.4627261,8.39238148 15.4605783,8.37136352 15.4579697,8.33427338 C15.4311444,7.95286299 15.4604793,7.43989161 15.592768,6.84220379 C15.7909599,5.94676229 16.184474,5.05351328 16.8216379,4.20180003 C17.1143186,3.81056627 17.4334646,3.46475942 17.7750152,3.16119095 C18.3843623,2.6196063 19.0355927,2.23519441 19.6840627,1.98146164 C20.0632484,1.83309417 20.3470867,1.76238104 20.486603,1.742497 L19.6337805,1.06700375 C19.6338037,1.06618678 19.6338037,1.06618678 19.636719,1.11748258 C19.6532,1.46367285 19.630251,1.93251785 19.5349365,2.47685782 C19.3921833,3.29211965 19.1136665,4.0949307 18.6691207,4.84242965 C18.5046043,5.11906217 18.3189697,5.38480045 18.1110846,5.6384846 C18.0300009,5.73743176 17.9479489,5.83284218 17.8649771,5.92478269 Z M19.9583586,5.60915356 C20.5019957,4.69503366 20.8399007,3.72103902 21.0124569,2.73557322 C21.1281907,2.07461874 21.1564748,1.4967771 21.1350221,1.04615341 C21.1303038,0.962181589 21.1303038,0.962181589 21.1277825,0.932996245 L21.0571929,0.146018213 L20.2749599,0.257502999 C19.364896,0.387206394 18.0665806,0.895210146 16.7785282,2.04002473 C16.3622152,2.41004171 15.9743916,2.83026331 15.6205415,3.30326375 C14.8508421,4.33214071 14.370899,5.42157719 14.1282126,6.51804752 C13.9627377,7.26567198 13.9252333,7.92150135 13.9616659,8.43951126 C13.9664573,8.5076363 13.9717095,8.55903376 13.9761445,8.59260548 L14.0630009,9.25008116 L14.7261642,9.24435148 C15.8472836,9.23466508 17.4364611,8.63852601 18.97856,6.92973702 C19.0775241,6.82007549 19.1751203,6.7065902 19.2712908,6.58923242 C19.5272966,6.27682621 19.7559319,5.94953194 19.9583586,5.60915356 Z\" id=\"lr-apple-large-Path-199\"></path></g></g></g></svg>"

/***/ },
/* 28 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-apple</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-apple-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-apple-lr-apple\"><g id=\"lr-apple-apple\" transform=\"translate(5.000000, 1.000000)\"><path d=\"M11.9898239,35.016516 C12.8409605,34.5380554 14.245335,34.1375962 15.0135346,34.1375971 C16.0995108,34.1375982 17.0049554,34.2932854 17.7582279,34.6892899 C18.9723828,35.3275858 19.5323363,35.5364133 20.2126316,35.5364133 C20.5284244,35.5364133 20.6724161,35.5335395 20.862492,35.5183341 C21.4432752,35.4718734 21.9382208,35.3147896 22.4213897,34.97803 C23.4280528,34.2764048 24.2842589,33.3881958 25.511977,31.5575686 C25.647959,31.3548085 25.7817273,31.1458323 25.9132685,30.9311558 C26.4508113,30.0538805 26.9304738,29.1183572 27.3475639,28.1832635 C27.4934807,27.8561257 27.6213487,27.5519639 27.7304076,27.27823 C27.7966499,27.1119643 27.8424333,26.9912786 27.8669566,26.9236639 L28.1046716,26.2682431 L27.4683169,25.9833966 C27.3770351,25.9425369 27.1881197,25.8390713 26.934114,25.6660691 C26.4975304,25.3687139 26.0583255,24.9875391 25.6474989,24.5158925 C24.6742096,23.3985147 24.0151082,21.9601715 23.8146538,20.1456746 C23.5887652,18.1009488 24.1434825,16.3382728 25.2129557,14.8538918 C25.5312974,14.4120478 25.8722348,14.0297174 26.2114882,13.7095599 C26.4098585,13.5223554 26.5583611,13.4010607 26.6320912,13.3478577 L27.2441739,12.9061846 L26.7986064,12.296931 C26.5262422,11.9245095 26.0435665,11.3933719 25.3732651,10.8629059 C24.6733662,10.309017 23.9093536,9.88272667 23.0850629,9.63767357 C21.6569876,9.21312159 20.4860053,9.2216462 19.4090834,9.49803211 C19.3126723,9.52277549 19.222063,9.54826276 19.1209474,9.57841948 C19.0061283,9.61313394 18.9558361,9.62841404 18.9278829,9.63656534 C18.7640702,9.68433388 17.6137127,10.161196 17.3102603,10.2770158 C16.9616819,10.4100591 16.6407138,10.5217821 16.3397313,10.6125393 C15.7971858,10.7761364 15.3451565,10.8628357 15.0135359,10.8628357 C14.5051165,10.8628357 13.9644222,10.7025574 12.8092674,10.2523202 C11.8612697,9.88259973 11.4766621,9.74611851 10.9870152,9.62762027 C9.45942215,9.25793125 8.26344592,9.25271797 7.12377156,9.64798478 C5.07659979,10.3579938 2.98570906,12.1314382 1.81916519,15.0415343 C1.69051395,15.3624717 1.57761094,15.6926817 1.47977545,16.0313477 C0.935456236,17.9155555 0.879542916,19.8959173 1.10729939,21.7196521 C1.15331101,22.0880851 1.20014817,22.3599782 1.23323439,22.5156129 C1.23048147,22.5271406 1.25119608,22.6820648 1.28630166,22.8970618 C1.34365351,23.2483016 1.42151754,23.6450801 1.52299216,24.0802347 C1.81176118,25.3185656 2.23222316,26.6227787 2.80997074,27.9354554 C3.92876183,30.4774151 4.99036467,32.2090041 6.21424256,33.7245825 C7.11621818,34.8415361 8.16984218,35.4337451 9.20093016,35.5329648 C10.3642576,35.6449095 11.0133606,35.5654282 11.9898239,35.016516 Z M7.38124585,32.7821901 C6.23970689,31.3685754 5.24764871,29.7504213 4.18287781,27.3311987 C3.64474049,26.1085188 3.25249027,24.8918146 2.98379961,23.7395859 C2.89016333,23.3380446 2.81875953,22.974186 2.76669657,22.655337 C2.73615327,22.4682807 2.71909198,22.3406796 2.712582,22.2798488 C2.6758714,22.0881025 2.63621713,21.8579066 2.59573733,21.5337691 C2.39103905,19.8946702 2.44151457,18.1069067 2.92084825,16.4476519 C3.00504031,16.1562138 3.10177102,15.8733033 3.21146651,15.5996535 C4.20311013,13.1258689 5.95292483,11.6417172 7.61528587,11.0651699 C8.45342563,10.7744826 9.36531593,10.7784576 10.634189,11.0855344 C11.0345699,11.1824296 11.3818362,11.30566 12.2020912,11.6255655 C13.6029898,12.1715942 14.2481376,12.3628357 15.0135359,12.3628357 C15.5185501,12.3628357 16.1020335,12.2509235 16.7727768,12.04867 C17.1115314,11.9465232 17.4653403,11.8233689 17.8451359,11.6784109 C18.2208641,11.5350053 19.2767241,11.0973156 19.3478005,11.0765894 C19.3854651,11.0656062 19.4461023,11.047183 19.5496478,11.0158533 C19.6336049,10.9908139 19.7063204,10.97036 19.7819656,10.950946 C20.607433,10.7390945 21.5041479,10.7325665 22.6576176,11.0754811 C23.2825491,11.2612668 23.8824501,11.5959889 24.4424149,12.0391363 C24.7644747,12.2940094 25.0524937,12.5681308 25.3008003,12.841368 C25.4466466,13.0018577 25.5439191,13.1223379 25.5878452,13.182401 L25.7543604,12.1314742 C25.2965623,12.4618171 24.6438011,13.0778356 23.9959338,13.9770465 C22.7221741,15.7449681 22.0539431,17.8683464 22.3237242,20.3103832 C22.5587261,22.4376012 23.3477101,24.1593845 24.5164212,25.501115 C25.3755116,26.4873876 26.2434514,27.0785377 26.8554783,27.3524945 L26.4568386,26.4122272 C26.4374835,26.4655926 26.3972136,26.5717447 26.336931,26.7230518 C26.2351151,26.9786059 26.1150435,27.2642223 25.9776594,27.5722301 C25.5853182,28.4518383 25.1345448,29.3310168 24.6342744,30.1474633 C24.5132367,30.344998 24.3905088,30.5367265 24.2661991,30.7220822 C23.1396794,32.4018145 22.4134941,33.1551428 21.5636913,33.7474394 C21.3163188,33.9198533 21.0745781,33.9965759 20.7428791,34.0231107 C20.6058687,34.0340711 20.4885143,34.0364133 20.2126339,34.0364133 C19.8538025,34.0364133 19.4617539,33.8902038 18.4562199,33.3615824 C17.4475857,32.8313312 16.3208759,32.6375984 15.0135362,32.6375971 C13.9757861,32.6375959 12.3214638,33.109328 11.2547865,33.7089534 C10.5933714,34.0807633 10.2308969,34.1251476 9.3446086,34.0398618 C8.72506476,33.9802443 8.03591621,33.5928954 7.38124585,32.7821901 Z\" id=\"lr-apple-Path-198\"></path><path d=\"M17.8649771,5.92478269 C17.1370832,6.7313568 16.370478,7.24368812 15.6131666,7.527774 C15.1798617,7.69031719 14.8611499,7.74312922 14.7132048,7.74440746 L15.4632244,8.39615346 C15.4627261,8.39238148 15.4605783,8.37136352 15.4579697,8.33427338 C15.4311444,7.95286299 15.4604793,7.43989161 15.592768,6.84220379 C15.7909599,5.94676229 16.184474,5.05351328 16.8216379,4.20180003 C17.1143186,3.81056627 17.4334646,3.46475942 17.7750152,3.16119095 C18.3843623,2.6196063 19.0355927,2.23519441 19.6840627,1.98146164 C20.0632484,1.83309417 20.3470867,1.76238104 20.486603,1.742497 L19.6337805,1.06700375 C19.6338037,1.06618678 19.6338037,1.06618678 19.636719,1.11748258 C19.6532,1.46367285 19.630251,1.93251785 19.5349365,2.47685782 C19.3921833,3.29211965 19.1136665,4.0949307 18.6691207,4.84242965 C18.5046043,5.11906217 18.3189697,5.38480045 18.1110846,5.6384846 C18.0300009,5.73743176 17.9479489,5.83284218 17.8649771,5.92478269 Z M19.9583586,5.60915356 C20.5019957,4.69503366 20.8399007,3.72103902 21.0124569,2.73557322 C21.1281907,2.07461874 21.1564748,1.4967771 21.1350221,1.04615341 C21.1303038,0.962181589 21.1303038,0.962181589 21.1277825,0.932996245 L21.0571929,0.146018213 L20.2749599,0.257502999 C19.364896,0.387206394 18.0665806,0.895210146 16.7785282,2.04002473 C16.3622152,2.41004171 15.9743916,2.83026331 15.6205415,3.30326375 C14.8508421,4.33214071 14.370899,5.42157719 14.1282126,6.51804752 C13.9627377,7.26567198 13.9252333,7.92150135 13.9616659,8.43951126 C13.9664573,8.5076363 13.9717095,8.55903376 13.9761445,8.59260548 L14.0630009,9.25008116 L14.7261642,9.24435148 C15.8472836,9.23466508 17.4364611,8.63852601 18.97856,6.92973702 C19.0775241,6.82007549 19.1751203,6.7065902 19.2712908,6.58923242 C19.5272966,6.27682621 19.7559319,5.94953194 19.9583586,5.60915356 Z\" id=\"lr-apple-Path-199\"></path></g></g></g></svg>"

/***/ },
/* 29 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>arrow-left</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-arrow-left-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-arrow-left-arrow-left\"><g transform=\"translate(12.000000, 12.000000) scale(-1, 1) rotate(180.000000) translate(-12.000000, -12.000000) translate(0.500000, 3.500000)\" id=\"lr-arrow-left-Path\"><path d=\"M21,10 C21.8284271,10 22.5,9.32842712 22.5,8.5 C22.5,7.67157288 21.8284271,7 21,7 L5,7 C4.17157288,7 3.5,7.67157288 3.5,8.5 C3.5,9.32842712 4.17157288,10 5,10 L21,10 Z\"></path><path d=\"M4.06066017,7.43933983 L4.06066017,9.56066017 L11.0606602,2.56066017 C11.6464466,1.97487373 11.6464466,1.02512627 11.0606602,0.439339828 C10.4748737,-0.146446609 9.52512627,-0.146446609 8.93933983,0.439339828 L1.93933983,7.43933983 L0.878679656,8.5 L1.93933983,9.56066017 L8.93933983,16.5606602 C9.52512627,17.1464466 10.4748737,17.1464466 11.0606602,16.5606602 C11.6464466,15.9748737 11.6464466,15.0251263 11.0606602,14.4393398 L4.06066017,7.43933983 Z\"></path></g></g></g></svg>"

/***/ },
/* 30 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>arrow-right</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-arrow-right-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-arrow-right-arrow-right\"><g transform=\"translate(0.500000, 3.500000)\"><path d=\"M18,10 C18.8284271,10 19.5,9.32842712 19.5,8.5 C19.5,7.67157288 18.8284271,7 18,7 L2,7 C1.17157288,7 0.5,7.67157288 0.5,8.5 C0.5,9.32842712 1.17157288,10 2,10 L18,10 Z\" id=\"lr-arrow-right-Path\"></path><path d=\"M21.0606602,9.56066017 L22.1213203,8.5 L21.0606602,7.43933983 L14.0606602,0.439339828 C13.4748737,-0.146446609 12.5251263,-0.146446609 11.9393398,0.439339828 C11.3535534,1.02512627 11.3535534,1.97487373 11.9393398,2.56066017 L18.9393398,9.56066017 L18.9393398,7.43933983 L11.9393398,14.4393398 C11.3535534,15.0251263 11.3535534,15.9748737 11.9393398,16.5606602 C12.5251263,17.1464466 13.4748737,17.1464466 14.0606602,16.5606602 L21.0606602,9.56066017 Z\" id=\"lr-arrow-right-Path-17\"></path></g></g></g></svg>"

/***/ },
/* 31 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 160 160\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-audience</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-audience-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-4847.000000, 150.000000)\"></g><g id=\"lr-audience-lr-audience\" fill=\"#70C262\"><g id=\"lr-audience-Audience-Icon-(Large)-No-Mask\" transform=\"translate(3.000000, 34.000000)\"><g id=\"lr-audience-Guy-On-Left\" transform=\"translate(0.000000, 0.513576)\"><path d=\"M29.800397,57.7746176 L29.3721353,57.0013673 L28.4882099,57.0013673 L2.50063481,57.0013673 L3.94556988,58.0986731 C3.92588025,58.0280233 3.88636847,57.8500685 3.84377019,57.5802002 C3.48489753,55.3066727 3.81622846,52.7091965 5.36427483,50.2576904 C6.03446781,49.2101426 6.78872732,48.3640819 7.6390026,47.6501867 C8.58823978,46.8532026 9.60697919,46.2597101 10.6224563,45.8421231 C11.2170642,45.5976069 11.661363,45.4692812 11.8771715,45.4267602 L24.0179539,41.7420292 L22.5760355,41.4200952 C22.7861037,41.6098342 23.1590895,41.918295 23.6804296,42.3058399 C24.5353094,42.9413258 25.508097,43.5747689 26.5850681,44.1660472 C29.6860377,45.8685402 33.0233887,46.8954174 36.4843873,46.8954174 C39.9290769,46.8954174 43.4156227,45.8785442 46.787243,44.1928364 C47.9556676,43.6086595 49.0280974,42.9831197 49.9836053,42.3561175 C50.5639925,41.9752688 50.982538,41.6736962 51.2174402,41.4910116 L49.9395571,41.7638325 L57.3814045,43.5875345 L58.0954572,40.6737519 L50.6536097,38.85005 L49.9486632,38.6772955 L49.3757266,39.1228708 C49.338775,39.1516082 49.254009,39.215177 49.1243655,39.3085884 C48.900308,39.4700275 48.6371037,39.6514638 48.3377275,39.8479137 C47.4757779,40.4135232 46.5035861,40.980595 45.4456673,41.5095223 C42.4563065,43.004112 39.4002939,43.8954174 36.4843873,43.8954174 C33.5847897,43.8954174 30.72056,43.014116 28.0288446,41.5363115 C27.0783759,41.0144856 26.2196529,40.4553171 25.4701862,39.8981914 C25.0289185,39.5701693 24.7289306,39.3220781 24.5868944,39.1937873 L23.9570181,38.6248668 L23.144976,38.8718533 L11.1507106,42.5199671 C10.8989462,42.5618237 10.2685877,42.7438885 9.48149343,43.0675594 C8.19413362,43.5969507 6.91003606,44.3450343 5.70995872,45.352625 C4.63248316,46.2572787 3.67546587,47.3307748 2.87280932,48.5849257 C0.84011291,51.8034511 0.417607385,55.1156926 0.880460144,58.0479539 C0.941751596,58.4362471 1.00612956,58.7261953 1.05569975,58.9040616 L1.36151191,60.0013673 L2.50063481,60.0013673 L28.4882099,60.0013673 L27.1760229,59.2281171 L33.7183495,71.0406512 L36.3427236,69.5871517 L29.800397,57.7746176 Z\" id=\"lr-audience-Guy-On-Left-Body\"></path><path d=\"M24.3936628,23.2158622 C24.3936628,30.119645 29.9813867,35.7096774 36.8775338,35.7096774 C43.7729285,35.7096774 49.3614048,30.117143 49.3614048,23.2158622 L49.3614048,15.4938152 C49.3614048,8.5900324 43.7736808,3 36.8775338,3 C29.9821391,3 24.3936628,8.59253444 24.3936628,15.4938152 L24.3936628,23.2158622 Z M36.8775338,0 C45.4290396,0 52.3614048,6.9316818 52.3614048,15.4938152 L52.3614048,23.2158622 C52.3614048,31.7728601 45.4309198,38.7096774 36.8775338,38.7096774 C28.326028,38.7096774 21.3936628,31.7779956 21.3936628,23.2158622 L21.3936628,15.4938152 C21.3936628,6.93681735 28.3241477,0 36.8775338,0 Z\" id=\"lr-audience-Guy-On-Left-Head\"></path></g><g id=\"lr-audience-Guy-On-Right\" transform=\"translate(125.500000, 36.513576) scale(-1, 1) translate(-125.500000, -36.513576) translate(96.500000, 0.513576)\"><path d=\"M29.800397,57.7746176 L29.3721353,57.0013673 L28.4882099,57.0013673 L2.50063481,57.0013673 L3.94556988,58.0986731 C3.92588025,58.0280233 3.88636847,57.8500685 3.84377019,57.5802002 C3.48489753,55.3066727 3.81622846,52.7091965 5.36427483,50.2576904 C6.03446781,49.2101426 6.78872732,48.3640819 7.6390026,47.6501867 C8.58823978,46.8532026 9.60697919,46.2597101 10.6224563,45.8421231 C11.2170642,45.5976069 11.661363,45.4692812 11.8771715,45.4267602 L24.0179539,41.7420292 L22.5760355,41.4200952 C22.7861037,41.6098342 23.1590895,41.918295 23.6804296,42.3058399 C24.5353094,42.9413258 25.508097,43.5747689 26.5850681,44.1660472 C29.6860377,45.8685402 33.0233887,46.8954174 36.4843873,46.8954174 C39.9290769,46.8954174 43.4156227,45.8785442 46.787243,44.1928364 C47.9556676,43.6086595 49.0280974,42.9831197 49.9836053,42.3561175 C50.5639925,41.9752688 50.982538,41.6736962 51.2174402,41.4910116 L49.9887926,41.7750233 L57.0180882,43.2487505 L57.6336698,40.3125864 L50.6043742,38.8388592 L49.9242641,38.6962707 L49.3757266,39.1228708 C49.338775,39.1516082 49.254009,39.215177 49.1243655,39.3085884 C48.900308,39.4700275 48.6371037,39.6514638 48.3377275,39.8479137 C47.4757779,40.4135232 46.5035861,40.980595 45.4456673,41.5095223 C42.4563065,43.004112 39.4002939,43.8954174 36.4843873,43.8954174 C33.5847897,43.8954174 30.72056,43.014116 28.0288446,41.5363115 C27.0783759,41.0144856 26.2196529,40.4553171 25.4701862,39.8981914 C25.0289185,39.5701693 24.7289306,39.3220781 24.5868944,39.1937873 L23.9570181,38.6248668 L23.144976,38.8718533 L11.1507106,42.5199671 C10.8989462,42.5618237 10.2685877,42.7438885 9.48149343,43.0675594 C8.19413362,43.5969507 6.91003606,44.3450343 5.70995872,45.352625 C4.63248316,46.2572787 3.67546587,47.3307748 2.87280932,48.5849257 C0.84011291,51.8034511 0.417607385,55.1156926 0.880460144,58.0479539 C0.941751596,58.4362471 1.00612956,58.7261953 1.05569975,58.9040616 L1.36151191,60.0013673 L2.50063481,60.0013673 L28.4882099,60.0013673 L27.1760229,59.2281171 L33.7183495,71.0406512 L36.3427236,69.5871517 L29.800397,57.7746176 Z\" id=\"lr-audience-Guy-On-Right-Body\"></path><path d=\"M24.3936628,23.2158622 C24.3936628,30.119645 29.9813867,35.7096774 36.8775338,35.7096774 C43.7729285,35.7096774 49.3614048,30.117143 49.3614048,23.2158622 L49.3614048,15.4938152 C49.3614048,8.5900324 43.7736808,3 36.8775338,3 C29.9821391,3 24.3936628,8.59253444 24.3936628,15.4938152 L24.3936628,23.2158622 Z M36.8775338,0 C45.4290396,0 52.3614048,6.9316818 52.3614048,15.4938152 L52.3614048,23.2158622 C52.3614048,31.7728601 45.4309198,38.7096774 36.8775338,38.7096774 C28.326028,38.7096774 21.3936628,31.7779956 21.3936628,23.2158622 L21.3936628,15.4938152 C21.3936628,6.93681735 28.3241477,0 36.8775338,0 Z\" id=\"lr-audience-Guy-On-Right-Head\"></path></g><g id=\"lr-audience-Front-Guy\" transform=\"translate(41.000000, 20.000000)\"><g id=\"lr-audience-User-Icon-Front\" transform=\"translate(0.580645, 0.000000)\"><path d=\"M0.963543481,47.1248085 C2.55657061,43.0446243 5.06169758,41.5680549 8.81911874,39.6197196 C12.856046,37.526452 23.5935619,35 23.5935619,35 C23.5935619,35 27.2818813,40.2158068 36.0169683,40.2158068 C44.7520553,40.2158068 48.9044143,35 48.9044143,35 C48.9044143,35 58.82216,36.6054883 63.3387554,39.0527101 C66.4618285,40.7448812 68.8409445,42.7824556 70.9783291,47.1248085 C73.1157136,51.4671614 72.1061087,57.2646375 72.1061087,57.2646375 C72.1061087,57.2646375 59.5807945,72.818961 36.0169684,72.818961 C12.4531423,72.818961 0.233234417,57.2646375 0.233234417,57.2646375 C0.233234417,57.2646375 -0.629483644,51.2049927 0.963543481,47.1248085 Z\" id=\"lr-audience-Front-Guy-Body\"></path><path d=\"m 36,0 c 7.756,0 14,6.244 14,14 l 0,6 C 50,27.756 43.756,34 36,34 28.244,34 22,27.756 22,20 l 0,-6 C 22,6.244 28.244,0 36,0 Z\" id=\"lr-audience-Rectangle\"></path></g></g></g></g></g></svg>"

/***/ },
/* 32 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 14 14\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Black List Icon Green</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-blacklist-green-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2588.000000, -825.000000)\" id=\"lr-blacklist-green-Group-8-Copy\"><g transform=\"translate(2580.027884, 603.738353)\"><g id=\"lr-blacklist-green-Black-List-Icon-Green\" transform=\"translate(8.000000, 220.402457)\"><g id=\"lr-blacklist-green-Excluded\"><circle id=\"lr-blacklist-green-Oval-13\" fill=\"#6CC457\" cx=\"6.57019986\" cy=\"7.48944258\" r=\"6.5\"></circle><rect id=\"lr-blacklist-green-Rectangle\" fill=\"#333333\" x=\"3.57019986\" y=\"6.59754278\" width=\"6\" height=\"2\"></rect></g></g></g></g></g></svg>"

/***/ },
/* 33 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 14 14\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Blacklist Icon Grey</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-blacklist-grey-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2651.000000, -825.000000)\" id=\"lr-blacklist-grey-Group-8-Copy-2\"><g transform=\"translate(2651.000000, 705.738353)\"><g id=\"lr-blacklist-grey-Blacklist-Icon-Grey\" transform=\"translate(0.000000, 118.402457)\"><g id=\"lr-blacklist-grey-Excluded\"><circle id=\"lr-blacklist-grey-Oval-13\" fill=\"#9B9B9B\" cx=\"6.57019986\" cy=\"7.48944258\" r=\"6.5\"></circle><rect id=\"lr-blacklist-grey-Rectangle\" fill=\"#333333\" x=\"3.57019986\" y=\"6.59754278\" width=\"6\" height=\"2\"></rect></g></g></g></g></g></svg>"

/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 14 14\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Black List Icon White</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-blacklist-white-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2526.000000, -825.000000)\" id=\"lr-blacklist-white-White-Group\"><g transform=\"translate(2518.000000, 603.738353)\"><g id=\"lr-blacklist-white-Black-List-Icon-White\" transform=\"translate(8.000000, 220.402457)\"><g id=\"lr-blacklist-white-Excluded\"><circle id=\"lr-blacklist-white-Oval-13\" fill=\"#FFFFFF\" cx=\"6.57019986\" cy=\"7.48944258\" r=\"6.5\"></circle><rect id=\"lr-blacklist-white-Rectangle\" fill=\"#333333\" x=\"3.57019986\" y=\"6.59754278\" width=\"6\" height=\"2\"></rect></g></g></g></g></g></svg>"

/***/ },
/* 35 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-cancel</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-cancel-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-cancel-lr-cancel\"><g id=\"lr-cancel-cancel\" transform=\"translate(4.000000, 4.000000)\"><path d=\"M15.55306,2.60495713 C16.14898,2.00903715 16.14898,1.04285997 15.55306,0.446939985 C14.95714,-0.148979995 13.9909628,-0.148979995 13.3950429,0.446939985 L0.446939985,13.3950429 C-0.148979995,13.9909628 -0.148979995,14.95714 0.446939985,15.55306 C1.04285997,16.14898 2.00903715,16.14898 2.60495713,15.55306 L15.55306,2.60495713 Z\" id=\"lr-cancel-Path\"></path><path d=\"M2.56066017,0.439339828 C1.97487373,-0.146446609 1.02512627,-0.146446609 0.439339828,0.439339828 C-0.146446609,1.02512627 -0.146446609,1.97487373 0.439339828,2.56066017 L13.1672619,15.2885822 C13.7530483,15.8743687 14.7027958,15.8743687 15.2885822,15.2885822 C15.8743687,14.7027958 15.8743687,13.7530483 15.2885822,13.1672619 L2.56066017,0.439339828 Z\" id=\"lr-cancel-Path\"></path></g></g></g></svg>"

/***/ },
/* 36 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 18 18\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>caret-down</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-caret-down-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-caret-down-caret-down\"><path d=\"M7.97932339,10.9008097 L10.0206766,10.9008098 L3.02067665,4.40080975 C2.41361064,3.83710561 1.46451391,3.87225734 0.900809763,4.47932334 C0.337105615,5.08638935 0.372257346,6.03548608 0.979323351,6.59919023 L7.97932335,13.0991902 L8.99999997,14.0469614 L10.0206766,13.0991903 L17.0206771,6.59919026 C17.6277431,6.03548613 17.6628948,5.0863894 17.0991907,4.47932338 C16.5354866,3.87225735 15.5863899,3.83710559 14.9793238,4.40080972 L7.97932339,10.9008097 Z\" id=\"lr-caret-down-Path-\"></path></g></g></svg>"

/***/ },
/* 37 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 18 18\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>caret-left</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-caret-left-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-caret-left-caret-left\"><path d=\"M4.94334051,7.97932335 L4,9 L4.94334051,10.0206766 L11.4129541,17.0206766 C11.9740231,17.6277427 12.9186829,17.6628944 13.522911,17.0991902 C14.1271391,16.5354861 14.1621265,15.5863894 13.6010576,14.9793234 L7.13144393,7.97932335 L7.13144393,10.0206766 L13.6010576,3.02067665 C14.1621265,2.41361064 14.1271391,1.46451391 13.522911,0.900809763 C12.9186829,0.337105615 11.9740231,0.372257346 11.4129541,0.979323351 L4.94334051,7.97932335 Z\" id=\"lr-caret-left-Path\"></path></g></g></svg>"

/***/ },
/* 38 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 18 18\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>caret-right</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-caret-right-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-caret-right-caret-right\"><path d=\"M13.056653,10.0206769 L13.9999935,9.00000025 L13.056653,7.97932357 L6.58703943,0.979323367 C6.02597051,0.372257353 5.08131064,0.337105609 4.47708255,0.900809748 C3.87285447,1.46451389 3.83786706,2.41361062 4.39893597,3.02067663 L10.8685496,10.0206768 L10.8685496,7.97932351 L4.39893602,14.979323 C3.83786707,15.586389 3.87285445,16.5354858 4.4770825,17.0991899 C5.08131056,17.6628941 6.02597043,17.6277424 6.58703938,17.0206764 L13.056653,10.0206769 Z\" id=\"lr-caret-right-Path\"></path></g></g></svg>"

/***/ },
/* 39 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 18 18\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>caret-up</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-caret-up-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-caret-up-caret-up\"><path d=\"M10.0206766,7.13144393 L7.97932335,7.13144393 L14.9793234,13.6010576 C15.5863894,14.1621265 16.5354861,14.1271391 17.0991902,13.522911 C17.6628944,12.9186829 17.6277427,11.9740231 17.0206766,11.4129541 L10.0206766,4.94334051 L9,4 L7.97932335,4.94334051 L0.979323351,11.4129541 C0.372257346,11.9740231 0.337105615,12.9186829 0.900809763,13.522911 C1.46451391,14.1271391 2.41361064,14.1621265 3.02067665,13.6010576 L10.0206766,7.13144393 Z\" id=\"lr-caret-up-Path-\"></path></g></g></svg>"

/***/ },
/* 40 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 112 112\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-cart</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-cart-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-cart-lr-cart\"><g id=\"lr-cart-Data-Store-(Medium)\" transform=\"translate(14.000000, 24.000000)\"><g id=\"lr-cart-Shopping-Cart\" transform=\"translate(0.000000, 0.894855)\"><path d=\"M12.3169019,0.196867884 L16.3423405,0.196867843 L17.1408086,4.14232147 L24.9872064,42.9135594 C24.6990216,41.4895577 23.4142402,40.5755116 21.988805,40.7627736 L81.0875057,32.99887 C79.597136,33.1946625 78.5549341,34.3806108 78.5549341,35.8806421 L78.5549341,13.3866753 C78.5549341,14.9966477 79.8953469,16.3146171 81.5173048,16.2823695 L20.6705399,17.4921199 L15.651006,17.5919179 L15.6510062,12.5713919 L15.6510066,1.69048028 C15.6510065,3.49909037 17.1107358,4.94602735 18.8908902,4.94602735 L1.70300913,4.94602735 C3.48391678,4.94602735 4.94289266,3.50068289 4.94289266,1.6923722 L4.94289266,3.04654536 C4.94289266,1.4782066 3.6730405,0.196867972 2.07921772,0.196867988 L12.3169019,0.196867884 Z M20.5727064,12.5713921 L25.3965729,12.4754844 L81.4194713,11.3616417 C82.5556111,11.3390531 83.4766343,12.2423402 83.4766343,13.3866753 L83.4766343,35.8806421 C83.4766343,36.8572765 82.6812962,37.7534801 81.7285701,37.8786414 L22.6298694,45.642545 C21.4937297,45.7918018 20.3886969,45.0035563 20.1632998,43.8898061 L12.316902,5.11856811 L2.07921777,5.11856821 C0.942601765,5.11856822 0.0211924408,4.1842059 0.0211924408,3.04654536 L0.0211924408,1.6923722 C0.0211924408,0.771136344 0.777005171,0.0243271299 1.70300913,0.0243271299 L18.8908902,0.0243271299 C19.8197319,0.0243271299 20.5727069,0.771628089 20.5727068,1.69048049 L20.5727066,7.64871925 L20.5727064,12.5713921 Z\" id=\"lr-cart-Rectangle-1\"></path><path d=\"M34.2550336,66.246085 C34.2550336,64.071541 32.4922174,62.3087248 30.3176734,62.3087248 C28.1431294,62.3087248 26.3803132,64.071541 26.3803132,66.246085 C26.3803132,68.420629 28.1431294,70.1834452 30.3176734,70.1834452 C32.4922174,70.1834452 34.2550336,68.420629 34.2550336,66.246085 Z M21.458613,66.246085 C21.458613,61.3533611 25.4249494,57.3870246 30.3176734,57.3870246 C35.2103973,57.3870246 39.1767338,61.3533611 39.1767338,66.246085 C39.1767338,71.138809 35.2103973,75.1051454 30.3176734,75.1051454 C25.4249494,75.1051454 21.458613,71.138809 21.458613,66.246085 Z\" id=\"lr-cart-Oval-1\"></path><path d=\"M75.5973154,66.246085 C75.5973154,64.071541 73.8344992,62.3087248 71.6599553,62.3087248 C69.4854113,62.3087248 67.7225951,64.071541 67.7225951,66.246085 C67.7225951,68.420629 69.4854113,70.1834452 71.6599553,70.1834452 C73.8344992,70.1834452 75.5973154,68.420629 75.5973154,66.246085 Z M62.8008949,66.246085 C62.8008949,61.3533611 66.7672313,57.3870246 71.6599553,57.3870246 C76.5526792,57.3870246 80.5190157,61.3533611 80.5190157,66.246085 C80.5190157,71.138809 76.5526792,75.1051454 71.6599553,75.1051454 C66.7672313,75.1051454 62.8008949,71.138809 62.8008949,66.246085 Z\" id=\"lr-cart-Oval-1-Copy\"></path></g><path d=\"M80.8749184,55.2304251 C82.2340083,55.2304251 83.3357685,54.1286649 83.3357685,52.7695749 C83.3357685,51.410485 82.2340083,50.3087248 80.8749184,50.3087248 L22.3773573,50.3087248 C21.0182673,50.3087248 19.9165072,51.410485 19.9165072,52.7695749 C19.9165072,54.1286649 21.0182673,55.2304251 22.3773573,55.2304251 L80.8749184,55.2304251 Z\" id=\"lr-cart-Path-1\"></path></g></g></g></svg>"

/***/ },
/* 41 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-check</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-check-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-check-lr-check\"><g id=\"lr-check-check\" transform=\"translate(3.000000, 4.000000)\"><path d=\"M6.25961025,13.4949018 L8.44985669,13.1813311 L2.94985669,8.73661471 C2.30868947,8.21846809 1.36365541,8.3118105 0.839064051,8.94510081 C0.314472689,9.57839113 0.408976095,10.5118152 1.05014331,11.0299618 L6.55014331,15.4746782 L7.81871974,16.4998531 L8.74038975,15.1611075 L17.2403898,2.81467316 C17.7062226,2.13804081 17.5285134,1.21652906 16.843465,0.756419064 C16.1584167,0.296309066 15.2254431,0.471835113 14.7596102,1.14846746 L6.25961025,13.4949018 Z\" id=\"lr-check-Path-2\"></path></g></g></g></svg>"

/***/ },
/* 42 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-clear</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-clear-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-clear-lr-clear\"><path d=\"M11.9987068,9.87738646 L15.2867533,6.58933992 L17.4080737,8.71066027 L14.1200271,11.9987068 L17.4080737,15.2867533 L15.2867533,17.4080737 L11.9987068,14.1200271 L8.71066027,17.4080737 L6.58933992,15.2867533 L9.87738646,11.9987068 L6.58933992,8.71066027 L8.71066027,6.58933992 L11.9987068,9.87738646 Z M12,23 C18.0751322,23 23,18.0751322 23,12 C23,5.92486775 18.0751322,1 12,1 C5.92486775,1 1,5.92486775 1,12 C1,18.0751322 5.92486775,23 12,23 Z\" id=\"lr-clear-Combined-Shape\"></path><g id=\"lr-clear-Group\" transform=\"translate(5.650000, 5.650000)\"></g></g></g></svg>"

/***/ },
/* 43 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 180 180\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-connect-source</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-connect-source-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g xmlns=\"http://www.w3.org/2000/svg\" id=\"lr-connect-source-lr-connect-source\"><g transform=\"translate(6.000000, 21.000000)\"><g id=\"lr-connect-source-Arrow-Copy\" transform=\"translate(134.500000, 70.500000) rotate(180.000000) translate(-134.500000, -70.500000) translate(101.000000, 62.000000)\"><path d=\"M1.96560904,7.43970706L0.904948869 8.50036723 1.96560904 9.56102741 9.16524174 16.7606601 11.2865621 14.6393398 4.08692938 7.43970706 4.08692938 9.56102741 11.0165758 2.63138096 8.89525548 0.510060621z\"></path><path d=\"M3,7L3 10 66.5078735 10 66.5078735 7z\"></path></g><g id=\"lr-connect-source-Arrow-Copy\" transform=\"translate(95.263456, 17.142136) rotate(135.000000) translate(-95.263456, -17.142136) translate(79.763456, 8.642136)\"><path d=\"M1.96560904,7.43970706L0.904948869 8.50036723 1.96560904 9.56102741 9.16524174 16.7606601 11.2865621 14.6393398 4.08692938 7.43970706 4.08692938 9.56102741 11.0165758 2.63138096 8.89525548 0.510060621z\"></path><path d=\"M3,7L3 10 30.5181751 10 30.5181751 7z\"></path></g><g id=\"lr-connect-source-Arrow-Copy\" transform=\"translate(94.263456, 121.263456) rotate(225.000000) translate(-94.263456, -121.263456) translate(78.763456, 112.763456)\"><path d=\"M1.96560904,7.43970706L0.904948869 8.50036723 1.96560904 9.56102741 9.16524174 16.7606601 11.2865621 14.6393398 4.08692938 7.43970706 4.08692938 9.56102741 11.0165758 2.63138096 8.89525548 0.510060621z\"></path><path d=\"M3,7L3 10 30.5181751 10 30.5181751 7z\"></path></g><path d=\"M86.4107143,69.5 C86.4107143,45.8010669 67.1989331,26.5892857 43.5,26.5892857 C19.8010669,26.5892857 0.589285715,45.8010669 0.589285715,69.5 C0.589285715,93.1989331 19.8010669,112.410714 43.5,112.410714 C67.1989331,112.410714 86.4107143,93.1989331 86.4107143,69.5 Z M5.41071428,69.5 C5.41071428,48.4638684 22.4638684,31.4107143 43.5,31.4107143 C64.5361316,31.4107143 81.5892857,48.4638684 81.5892857,69.5 C81.5892857,90.5361316 64.5361316,107.589286 43.5,107.589286 C22.4638684,107.589286 5.41071428,90.5361316 5.41071428,69.5 Z\" id=\"lr-connect-source-Oval-256\"></path></g></g></g></svg>"

/***/ },
/* 44 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 28 28\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>copy</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-copy-Permissioning\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-copy-copy\"><g id=\"lr-copy-Group\" transform=\"translate(1.000000, 1.500000)\"><path d=\"M3.50087166,9 L17.4991283,9 C17.2213747,9 17,8.77857354 17,8.49707644 L17,20.2067383 L17,22.4940184 C17,22.2247318 17.223163,22 17.4986398,22 L3.49354965,22 C3.76705413,22 3.99281189,22.2252161 3.99267782,22.4998606 L3.99951123,8.5016039 C3.99937779,8.77497129 3.77477884,9 3.50087166,9 Z M0.992678173,22.4983961 C0.992002202,23.8831221 2.11156616,25 3.49354965,25 L17.4986398,25 C18.88474,25 20,23.8768997 20,22.4940184 L20,20.2067383 L20,8.49707644 C20,7.12187629 18.878386,6 17.4991283,6 L3.50087166,6 C2.11688297,6 1.00018589,7.11883387 0.999511591,8.50013942 L0.992678173,22.4983961 Z\" id=\"lr-copy-Path-2\"></path><path d=\"M8.5,3.00878477 C8.5,3.28132564 8.28209488,3.5 8.0003909,3.5 L23.0069312,3.5 C22.7287516,3.5 22.5073221,3.27841229 22.5073221,2.99707644 L22.5073221,14.7067383 L22.5073221,18.0042484 C22.5073221,17.7228231 22.7311433,17.5 23.0099876,17.5 L19.4973345,17.5 L19.4973345,20.5 L23.0099876,20.5 C24.3850036,20.5 25.5073221,19.3826861 25.5073221,18.0042484 L25.5073221,14.7067383 L25.5073221,2.99707644 C25.5073221,1.62203754 24.3860857,0.5 23.0069312,0.5 L8.0003909,0.5 C6.62286945,0.5 5.5,1.62683335 5.5,3.00878477 L5.5,7.5 L8.5,7.5 L8.5,3.00878477 Z\" id=\"lr-copy-Path-2\"></path></g></g></g></svg>"

/***/ },
/* 45 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 107 107\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Desktop Copy 2</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-dashed-ring-Download-and-Upload-Tagging-File\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\" stroke-dasharray=\"12.15,24.3\"><g id=\"lr-dashed-ring-Desktop-Copy-2\" stroke-width=\"5\"><g id=\"lr-dashed-ring-Nondeterminate-Spinner\" transform=\"translate(-1.000000, -1.000000)\"><g id=\"lr-dashed-ring-Dashed-Ring\"><circle id=\"lr-dashed-ring-Green\" stroke=\"#70C262\" cx=\"54.5\" cy=\"54.5\" r=\"40.530303\"></circle><circle id=\"lr-dashed-ring-Blue\" stroke=\"#7FA1B7\" transform=\"translate(54.500000, 54.500000) rotate(25.700000) translate(-54.500000, -54.500000) \" cx=\"54.5\" cy=\"54.5\" r=\"40.530303\"></circle></g></g></g></g></svg>"

/***/ },
/* 46 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 90 90\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-desktop</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-desktop-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-desktop-lr-desktop\"><g id=\"lr-desktop-desktop\" transform=\"translate(5.000000, 9.000000)\"><path d=\"m 38.5,69.516648 3,0 0,-7.516648 -3,0 z\" id=\"lr-desktop-Path\"></path><path d=\"M3,55.7537645 C3,58.1167198 4.9137662,60.030303 7.27601817,60.030303 L72.7239818,60.030303 C75.083988,60.030303 77,58.1146235 77,55.7537645 L77,7.27653857 C77,4.9135832 75.0862338,3 72.7239818,3 L7.27601817,3 C4.916012,3 3,4.91567954 3,7.27653857 L3,55.7537645 Z M7.27601817,0 L72.7239818,0 C76.7424157,0 80,3.25605666 80,7.27653857 L80,55.7537645 C80,59.7724857 76.7398341,63.030303 72.7239818,63.030303 L7.27601817,63.030303 C3.25758429,63.030303 0,59.7742464 0,55.7537645 L0,7.27653857 C0,3.25781729 3.26016588,0 7.27601817,0 Z\" id=\"lr-desktop-Rectangle-\"></path><path d=\"m 78,44 0,-3 -75,0 0,3 z\" id=\"lr-desktop-polygon15\"></path><path d=\"M64,72.5 C64.8284271,72.5 65.5,71.8284271 65.5,71 C65.5,70.1715729 64.8284271,69.5 64,69.5 L16,69.5 C15.1715729,69.5 14.5,70.1715729 14.5,71 C14.5,71.8284271 15.1715729,72.5 16,72.5 L64,72.5 Z\" id=\"lr-desktop-path17\"></path><path d=\"M43.8484848,51.9242424 C43.8484848,49.7569432 42.0915417,48 39.9242424,48 C37.7569432,48 36,49.7569432 36,51.9242424 C36,54.0915417 37.7569432,55.8484848 39.9242424,55.8484848 C42.0915417,55.8484848 43.8484848,54.0915417 43.8484848,51.9242424 Z M39,51.9242424 C39,51.4137974 39.4137974,51 39.9242424,51 C40.4346874,51 40.8484848,51.4137974 40.8484848,51.9242424 C40.8484848,52.4346874 40.4346874,52.8484848 39.9242424,52.8484848 C39.4137974,52.8484848 39,52.4346874 39,51.9242424 Z\" id=\"lr-desktop-Oval\"></path></g></g></g></svg>"

/***/ },
/* 47 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-destination</title><desc>Created with Sketch.</desc><defs></defs><g xmlns=\"http://www.w3.org/2000/svg\" id=\"lr-destination-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"lr-destination-lr-destination\"><g id=\"lr-destination-Destination-Icon\" transform=\"translate(3.000000, 1.000000)\"><path d=\"M5.70245108,13.1967297 C7.80902068,15.8003807 8.75422319,17.9754623 8.75422319,17.9754623 C8.99264226,18.4630091 9.41124029,18.4598598 9.68326378,17.9890888 C9.68326378,17.9890888 11.1593645,15.3003807 12.8450985,13.1967297 C14.5308324,11.0930786 15.8035662,8.6415748 15.8035662,7 C15.8035662,3.41014913 12.8407447,0.5 9.18591911,0.5 C5.53109356,0.5 2.56827205,3.41014913 2.56827205,7 C2.56827205,8.61924875 3.59588148,10.5930786 5.70245108,13.1967297 Z M9.18591911,10.7720779 C11.5250075,10.7720779 13.4212132,8.98121694 13.4212132,6.77207794 C13.4212132,4.56293894 11.5250075,2.77207794 9.18591911,2.77207794 C6.84683075,2.77207794 4.95062499,4.56293894 4.95062499,6.77207794 C4.95062499,8.98121694 6.84683075,10.7720779 9.18591911,10.7720779 Z\" id=\"lr-destination-Combined-Shape\"></path><path d=\"M7.068272050000001,6.77207794a2.11764706,2 0 1,0 4.23529412,0a2.11764706,2 0 1,0 -4.23529412,0\"></path><path d=\"M3.0778438,21.6082153 L3.35857679,21.5787354 C5.4265915,20.1802979 7.4946062,18.7818604 7.4946062,18.7818604 L7.17955709,18.6568604 L0.600426948,20.3446983 L0.561780779,20.5601807 L3.0778438,21.6082153 Z\" id=\"lr-destination-Path-3\"></path><path d=\"M7.35292058,17.9918916L7.56036644 17.8449508 3.48924147 15.1020555 3.20400342 15.0775654 0.76651458 16.081661 0.741698059 16.2521353z\"></path><path d=\"M10.7606477,17.8258057L10.9873538 17.9976807 17.621545 16.2945557 17.6546332 16.1383057 15.1895597 15.0758057 14.9248538 15.0601807z\"></path><path d=\"M14.880133,21.5786133 L10.81028,18.7823486 L11.0418977,18.6723633 L17.6264565,20.3754883 L17.6430006,20.5317383 L15.1779271,21.5629883 L14.880133,21.5786133 Z\" id=\"lr-destination-Path-7\"></path></g></g></g></svg>"

/***/ },
/* 48 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 90 90\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-distribute</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-distribute-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-distribute-lr-distribute\"><g id=\"lr-distribute-Distribute-Icon-(Large)\" transform=\"translate(-3.000000, 9.000000)\"><g id=\"lr-distribute-Dsit-Arrow1\" transform=\"translate(34.500000, 0.000000)\"><g id=\"lr-distribute-Arrow-Middle\" transform=\"translate(0.500000, 0.000000)\"><path d=\"M14,51.3199997 C14,52.1484268 14.6715729,52.8199997 15.5,52.8199997 C16.3284271,52.8199997 17,52.1484268 17,51.3199997 L17,4 C17,3.17157288 16.3284271,2.5 15.5,2.5 C14.6715729,2.5 14,3.17157288 14,4 L14,51.3199997 Z\" id=\"lr-distribute-Path-270\"></path><path d=\"M16.5965829,1.97652262 L15.5,0.801612372 L14.4034171,1.97652262 L0.403417098,16.9765226 C-0.161833849,17.5821486 -0.129103389,18.531332 0.476522624,19.0965829 C1.08214864,19.6618338 2.03133196,19.6291034 2.5965829,19.0234774 L16.5965829,4.02347738 L14.4034171,4.02347738 L28.4034171,19.0234774 C28.968668,19.6291034 29.9178514,19.6618338 30.5234774,19.0965829 C31.1291034,18.531332 31.1618338,17.5821486 30.5965829,16.9765226 L16.5965829,1.97652262 Z\" id=\"lr-distribute-Path-267-Copy-2\"></path></g><path d=\"M21,58.5 C21,55.4624339 18.5375661,53 15.5,53 C12.4624339,53 10,55.4624339 10,58.5 C10,61.5375661 12.4624339,64 15.5,64 C18.5375661,64 21,61.5375661 21,58.5 Z M7,58.5 C7,53.8055796 10.8055796,50 15.5,50 C20.1944204,50 24,53.8055796 24,58.5 C24,63.1944204 20.1944204,67 15.5,67 C10.8055796,67 7,63.1944204 7,58.5 Z\" id=\"lr-distribute-Oval-14\"></path></g><g id=\"lr-distribute-Dsit-Arrow2\" transform=\"translate(72.905235, 45.152253) rotate(-301.000000) translate(-72.905235, -45.152253) translate(56.405235, 23.152253)\"><g id=\"lr-distribute-Arrow-Middle\" transform=\"translate(0.200962, 0.383975)\"><path d=\"M14,41 C14,41.8284271 14.6715729,42.5 15.5,42.5 C16.3284271,42.5 17,41.8284271 17,41 L17,4 C17,3.17157288 16.3284271,2.5 15.5,2.5 C14.6715729,2.5 14,3.17157288 14,4 L14,41 Z\" id=\"lr-distribute-Path-270\"></path><path d=\"M17.0965829,1.97652262 L16,0.801612372 L14.9034171,1.97652262 L0.903417098,16.9765226 C0.338166151,17.5821486 0.370896611,18.531332 0.976522624,19.0965829 C1.58214864,19.6618338 2.53133196,19.6291034 3.0965829,19.0234774 L17.0965829,4.02347738 L14.9034171,4.02347738 L28.9034171,19.0234774 C29.468668,19.6291034 30.4178514,19.6618338 31.0234774,19.0965829 C31.6291034,18.531332 31.6618338,17.5821486 31.0965829,16.9765226 L17.0965829,1.97652262 Z\" id=\"lr-distribute-Path-267-Copy-2\"></path></g></g><g id=\"lr-distribute-Dsit-Arrow2-Copy\" transform=\"translate(27.021470, 44.570368) scale(-1, 1) rotate(-300.000000) translate(-27.021470, -44.570368) translate(11.021470, 23.070368)\"><g id=\"lr-distribute-Arrow-Middle\" transform=\"translate(-0.000000, 0.000000)\"><path d=\"M14.9462595,41.0153972 C14.9562488,41.8437641 15.6358708,42.5071903 16.4642377,42.497201 C17.2926046,42.4872117 17.9560307,41.8075897 17.9460414,40.9792229 L17.4998909,3.98191282 C17.4899017,3.15354592 16.8102797,2.49011978 15.9819128,2.50010905 C15.1535459,2.51009833 14.4901198,3.18972029 14.5001091,4.01808718 L14.9462595,41.0153972 Z\" id=\"lr-distribute-Path-270\"></path><path d=\"M17.0965829,1.97652262 L16,0.801612372 L14.9034171,1.97652262 L0.903417098,16.9765226 C0.338166151,17.5821486 0.370896611,18.531332 0.976522624,19.0965829 C1.58214864,19.6618338 2.53133196,19.6291034 3.0965829,19.0234774 L17.0965829,4.02347738 L14.9034171,4.02347738 L28.9034171,19.0234774 C29.468668,19.6291034 30.4178514,19.6618338 31.0234774,19.0965829 C31.6291034,18.531332 31.6618338,17.5821486 31.0965829,16.9765226 L17.0965829,1.97652262 Z\" id=\"lr-distribute-Path-267-Copy-2\"></path></g></g></g></g></g></svg>"

/***/ },
/* 49 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-download</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-download-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-download-lr-download\"><g id=\"lr-download-Group\" transform=\"translate(3.500000, 0.000000)\"><g id=\"lr-download-arrow-right\" transform=\"translate(8.437500, 9.708333) rotate(90.000000) translate(-8.437500, -9.708333) translate(-1.062500, 2.708333)\"><path d=\"M2,5.7375 C1.3372583,5.7375 0.8,6.2747583 0.8,6.9375 C0.8,7.6002417 1.3372583,8.1375 2,8.1375 L16.21875,8.1375 C16.8814917,8.1375 17.41875,7.6002417 17.41875,6.9375 C17.41875,6.2747583 16.8814917,5.7375 16.21875,5.7375 L2,5.7375 Z\" id=\"lr-download-Path-2\"></path><path d=\"M17.4624377,7.79697551 L18.344531,6.9375 L17.4624377,6.07802449 L11.7749377,0.536357828 C11.3002625,0.0738537722 10.5405285,0.0837204463 10.0780245,0.558395661 C9.61552044,1.03307088 9.62538711,1.79280478 10.1000623,2.25530884 L15.7875623,7.79697551 L15.7875623,6.07802449 L10.1000623,11.6196912 C9.62538711,12.0821952 9.61552044,12.8419291 10.0780245,13.3166043 C10.5405285,13.7912796 11.3002625,13.8011462 11.7749377,13.3386422 L17.4624377,7.79697551 Z\" id=\"lr-download-Path-3\"></path></g><path d=\"M15,22.4083333 C15.6627417,22.4083333 16.2,21.871075 16.2,21.2083333 C16.2,20.5455916 15.6627417,20.0083333 15,20.0083333 L2,20.0083333 C1.3372583,20.0083333 0.8,20.5455916 0.8,21.2083333 C0.8,21.871075 1.3372583,22.4083333 2,22.4083333 L15,22.4083333 Z\" id=\"lr-download-Path-30\"></path></g></g></g></svg>"

/***/ },
/* 50 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>edit</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-edit-Permissioning\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-edit-edit\"><g id=\"lr-edit-Group\" transform=\"translate(1.500000, 1.000000)\"><path d=\"M17.4445436,7.44454365 L13.5554564,3.55545635 L2.55545635,14.5554564 L6.44454365,18.4445436 L17.4445436,7.44454365 Z M6.44454365,18.4445436 L17.4445436,7.44454365 L13.5554564,3.55545635 L2.55545635,14.5554564 L6.44454365,18.4445436 Z\" id=\"lr-edit-Path-3\"></path><path d=\"M14.5,2.5 L15.5892639,1.41073614 C16.3683919,0.631608085 17.6338119,0.633811891 18.4102504,1.41025037 L19.5897496,2.58974963 C20.3686094,3.3686094 20.3691444,4.63085556 19.5892639,5.41073614 L18.5,6.5 L14.5,2.5 Z\" id=\"lr-edit-Rectangle\"></path><path d=\"M1.5,15.5 L5.5,19.5 L0.958026886,20.7387199 C0.428923247,20.8830209 0.117702484,20.5684242 0.26128006,20.0419731 L1.5,15.5 Z\" id=\"lr-edit-Rectangle-2\"></path></g></g></g></svg>"

/***/ },
/* 51 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 34 34\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>ellipses</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-ellipses-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-ellipses-ellipses\"><g id=\"lr-ellipses-Ellipses\" transform=\"translate(17.000000, 17.000000) rotate(90.000000) translate(-17.000000, -17.000000) translate(13.000000, 1.000000)\"><path d=\"M0,4 C0,1.790861 1.790861,0 4,0 C6.209139,0 8,1.790861 8,4 C8,6.209139 6.209139,8 4,8 C1.790861,8 0,6.209139 0,4 Z\" id=\"lr-ellipses-Circle-3\"></path><path d=\"M0,16 C0,13.790861 1.790861,12 4,12 C6.209139,12 8,13.790861 8,16 C8,18.209139 6.209139,20 4,20 C1.790861,20 0,18.209139 0,16 Z\" id=\"lr-ellipses-Circle-2\"></path><path d=\"M-1.77635684e-15,28 C-1.77635684e-15,25.790861 1.790861,24 4,24 C6.209139,24 8,25.790861 8,28 C8,30.209139 6.209139,32 4,32 C1.790861,32 -1.77635684e-15,30.209139 -1.77635684e-15,28 Z\" id=\"lr-ellipses-Circle-1\"></path></g></g></g></svg>"

/***/ },
/* 52 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 34 33\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>email</title><desc>Created with Sketch.</desc><defs></defs><g xmlns=\"http://www.w3.org/2000/svg\" id=\"lr-email-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-email-lr-email\" transform=\"translate(-3.000000, -4.000000)\"><g id=\"lr-email-email\" transform=\"translate(3.000000, 4.000000)\"><path d=\"M5.82867088e-16,13.734344 L3.33066907e-16,12.8637413 L0.74703289,12.4335792 L1.5,12.8706026 L1.5,31.0054385 C1.5,31.272642 1.72723321,31.5 1.9999204,31.5 L32.0000796,31.5 C32.2789387,31.5 32.5,31.2792677 32.5,31.0054385 L32.5,12.8706026 L33.2529671,12.4335792 L34,12.8637413 L34,13.734344 L17.7529671,23.1641504 L17,23.6011738 L16.2470329,23.1641504 L5.82867088e-16,13.734344 Z M17,21.8668299 L34,12 L34,31.0054385 C34,32.1070044 33.1080589,33 32.0000796,33 L1.9999204,33 C0.895394863,33 0,32.0976562 0,31.0054385 L0,12 L17,21.8668299 Z\" id=\"lr-email-Rectangle-5\"></path><path d=\"M17.4269075,1.61664414 L16.5730925,1.61664414 L23.0730925,6.11664414 C23.4136557,6.35241864 23.8808697,6.26747064 24.1166441,5.92690748 C24.3524186,5.58634433 24.2674706,5.11913035 23.9269075,4.88335586 L17.4269075,0.383355856 L17,0.0878045211 L16.5730925,0.383355856 L10.0730925,4.88335586 C9.73252936,5.11913035 9.64758136,5.58634433 9.88335586,5.92690748 C10.1191303,6.26747064 10.5863443,6.35241864 10.9269075,6.11664414 L17.4269075,1.61664414 Z\" id=\"lr-email-Path-18\"></path><path d=\"M32.7942202,12.995621L32.5 12.3999996 32.5 14 34 14 34 12.3999996 34 12.0295207 33.7057798 11.8043783 27.9557798 7.40437865 27.0442202 8.59562135z\"></path><path d=\"M0.294220223,11.8043783L0 12.0295207 0 12.3999996 0 14 1.5 14 1.5 12.3999996 1.20577978 12.995621 6.95577978 8.59562135 6.04422022 7.40437865z\"></path><path d=\"M7,16.9200001 L6.25342097,15.6229431 L17.753421,22.3029434 L16.246579,22.3029434 L27.746579,15.6229431 L27,16.9200001 L27,6.99514001 C27,6.72408892 26.7754767,6.5 26.4991358,6.5 L7.50086422,6.5 C7.22641742,6.5 7,6.72531775 7,6.99514001 L7,16.9200001 Z M7.50086422,5 L26.4991358,5 C27.6041826,5 28.5,5.89593736 28.5,6.99514001 L28.5,16.9200001 L17,23.6000004 L5.5,16.9200001 L5.5,6.99514001 C5.5,5.89325461 6.40162726,5 7.50086422,5 Z\" id=\"lr-email-Rectangle\"></path><path d=\"M23.8549777,13.5048828 C23.8549777,14.3427776 23.7231431,15.1088832 23.4594699,15.8032227 C23.1957967,16.4975621 22.8251949,17.038084 22.3476535,17.4248047 C21.870112,17.8115254 21.3178714,18.0048828 20.6909152,18.0048828 C20.2280222,18.0048828 19.8266591,17.8818372 19.4868136,17.6357422 C19.1469682,17.3896472 18.9184548,17.0556662 18.8012667,16.6337891 L18.695798,16.6337891 C18.4086872,17.0908226 18.0541985,17.4335926 17.6323214,17.6621094 C17.2104443,17.8906261 16.7358397,18.0048828 16.2084933,18.0048828 C15.2534104,18.0048828 14.5019531,17.6972687 13.9540988,17.0820312 C13.4062445,16.4667938 13.1323214,15.6347709 13.1323214,14.5859375 C13.1323214,13.3789002 13.4955991,12.3989295 14.2221652,11.6459961 C14.9487313,10.8930626 15.9243075,10.5166016 17.148923,10.5166016 C17.5942377,10.5166016 18.0878851,10.5561519 18.62988,10.6352539 C19.1718749,10.7143559 19.6538037,10.824218 20.0756808,10.9648438 L19.8823214,15.0517578 L19.8823214,15.2626953 C19.8823214,16.2002 20.1870059,16.6689453 20.7963839,16.6689453 C21.2592769,16.6689453 21.626949,16.3701202 21.8994113,15.7724609 C22.1718736,15.1748017 22.3081027,14.4130906 22.3081027,13.4873047 C22.3081027,12.4853466 22.1030266,11.6049843 21.6928683,10.8461914 C21.28271,10.0873985 20.699708,9.50293174 19.9438449,9.09277344 C19.1879817,8.68261514 18.3208029,8.47753906 17.3422824,8.47753906 C16.0942293,8.47753906 15.0087909,8.73534898 14.0859347,9.25097656 C13.1630785,9.76660414 12.4584957,10.5034132 11.9721652,11.4614258 C11.4858346,12.4194384 11.242673,13.5312437 11.242673,14.796875 C11.242673,16.4961022 11.69677,17.8027298 12.6049777,18.7167969 C13.5131854,19.6308639 14.8168833,20.0878906 16.5161105,20.0878906 C17.8110388,20.0878906 19.1616113,19.8242214 20.5678683,19.296875 L20.5678683,20.7382812 C19.3373934,21.24219 17.9985396,21.4941406 16.5512667,21.4941406 C14.3832872,21.4941406 12.6928744,20.9096738 11.4799777,19.7407227 C10.267081,18.5717715 9.66064175,16.9414167 9.66064175,14.8496094 C9.66064175,13.3203049 9.98876347,11.9594786 10.6450167,10.7670898 C11.30127,9.57470107 12.2109289,8.66211254 13.3740207,8.02929688 C14.5371124,7.39648121 15.8539938,7.08007812 17.3247042,7.08007812 C18.596195,7.08007812 19.7285079,7.34374736 20.7216769,7.87109375 C21.7148459,8.39844014 22.485346,9.14989747 23.0332003,10.1254883 C23.5810546,11.1010791 23.8549777,12.2275327 23.8549777,13.5048828 L23.8549777,13.5048828 Z M14.8198214,14.6210938 C14.8198214,15.986335 15.3559489,16.6689453 16.4282199,16.6689453 C17.5590849,16.6689453 18.1772428,15.8105555 18.2827121,14.09375 L18.3881808,11.9931641 C18.0190383,11.8935542 17.6235345,11.84375 17.2016574,11.84375 C16.4516536,11.84375 15.8671868,12.0927709 15.4482394,12.5908203 C15.029292,13.0888697 14.8198214,13.7656207 14.8198214,14.6210938 L14.8198214,14.6210938 Z\" id=\"lr-email-@\"></path></g></g></g></svg>"

/***/ },
/* 53 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 108 108\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-error</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-error-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-error-lr-error\"><g id=\"lr-error-Failure\" transform=\"translate(11.000000, 11.000000)\"><path d=\"M56.2837934,84.6385167 L54.8036595,79.8626184 C51.1856628,80.9838985 47.3982315,81.5606061 43.530303,81.5606061 L43.530303,86.5606061 C47.9014886,86.5606061 52.1878099,85.9079331 56.2837934,84.6385167 Z M83.6772427,59.0470374 L79.0138503,57.2434933 C77.6349717,60.8088355 75.7229344,64.1423935 73.3497632,67.135955 L77.2679096,70.2420987 C79.9524784,66.8557346 82.1162269,63.0833285 83.6772427,59.0470374 Z M80.6291735,21.716642 L76.3212876,24.254775 C78.2571178,27.5403932 79.6894023,31.1015701 80.5621977,34.8334532 L85.4308192,33.6948028 C84.442414,29.4685973 82.820465,25.4358458 80.6291735,21.716642 Z M49.395449,0.896677975 L48.7198866,5.85082931 C52.5284393,6.37017458 56.2051412,7.4600046 59.6503714,9.07482701 L61.7724015,4.54746705 C57.8712568,2.71895183 53.7070649,1.48462241 49.395449,0.896677975 Z M13.8187326,12.4041816 L17.2716206,16.0204731 C20.0361081,13.3809001 23.1821406,11.1683343 26.6024213,9.46520314 L24.3736941,4.98940429 C20.5033857,6.91662705 16.9449207,9.4192516 13.8187326,12.4041816 Z M0.500006191,43.506983 C0.499999697,44.8371406 0.558334539,46.1402534 0.675088654,47.4367212 L5.65493615,46.9882584 C5.55163625,45.8411897 5.50000039,44.687722 5.50000584,43.5083221 C5.50142908,40.8287428 5.77987693,38.1853288 6.32583007,35.6079617 L1.43436643,34.5718229 C0.816545655,37.4884669 0.501614497,40.4782312 0.500006191,43.506983 Z M19.9926658,79.5578752 L22.731053,75.3744274 C19.534263,73.2818833 16.6656989,70.7169837 14.2276653,67.7736966 L10.377114,70.9632507 C13.1338029,74.2912305 16.3771674,77.1912543 19.9926658,79.5578752 Z\" id=\"lr-error-Oval-44\"></path><path d=\"M37.1952299,86.1026367 L37.9326269,81.157311 C34.1862799,80.5986936 30.5234181,79.4758975 27.0381166,77.7985352 L24.8698212,82.3039203 C28.8085961,84.1995246 32.9539392,85.4702182 37.1952299,86.1026367 Z M72.976815,74.922161 L69.5568625,71.2747063 C66.7682437,73.889391 63.5997231,76.0640112 60.1631279,77.7322934 L62.3466722,82.2303079 C66.2342031,80.3431206 69.8198452,77.8822215 72.976815,74.922161 Z M86.4189349,39.9627765 L81.4365135,40.381676 C81.7560075,44.1817614 81.5022695,48.0117793 80.6703603,51.752989 L85.5511493,52.8382992 C86.4932526,48.6015317 86.7805909,44.2643391 86.4189349,39.9627765 Z M67.3037101,7.65759698 L64.5465636,11.8287051 C67.7531442,13.9482887 70.593521,16.5247447 72.9976564,19.4738794 L76.8730998,16.314617 C74.1508201,12.9752171 70.9338407,10.0571516 67.3037101,7.65759698 Z M30.256015,2.5985778 L31.7990953,7.35451126 C35.4347863,6.17489777 39.2291032,5.54551113 43.0496178,5.49409458 L42.9823338,0.494547315 C38.6591302,0.552729059 34.3673932,1.26462583 30.256015,2.5985778 Z M4.76680426,24.8488108 C4.18996349,26.0473824 3.67742096,27.2468848 3.22040037,28.4657337 L7.90210651,30.2211902 C8.30646211,29.142796 8.76014595,28.0810404 9.27160834,27.0183127 C10.4349147,24.6044225 11.8321582,22.3432543 13.4418026,20.2576056 L9.48354815,17.2027371 C7.66201488,19.5629344 6.08169922,22.1203695 4.76680426,24.8488108 Z M6.697395,65.7866102 L10.979083,63.204528 C9.00597971,59.9326676 7.53347452,56.3775166 6.6130016,52.6681128 L1.76017927,53.8723202 C2.80095958,58.0665495 4.46585916,62.0862089 6.697395,65.7866102 Z\" id=\"lr-error-Oval-44-Copy\"></path><g xmlns=\"http://www.w3.org/2000/svg\" id=\"lr-error-X\" transform=\"translate(25.000000, 25.000000)\"><path d=\"M37.8284278,5.82842716L32.1715736 0.171572844 0.171572906 32.1715728 5.82842709 37.8284272z\"></path><path d=\"M32.1715729,37.8284271L37.8284271 32.1715729 5.82842712 0.171572875 0.171572875 5.82842712z\"></path></g></g></g></g></svg>"

/***/ },
/* 54 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>plus</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-exclamation-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-exclamation-plus\"><g transform=\"translate(11.000000, 2.000000)\"><path d=\"M2.27373675e-13,15.7857143 C2.38031816e-13,16.4563458 0.671572875,17 1.5,17 C2.32842712,17 3,16.4563458 3,15.7857143 L3,1.21428571 C3,0.543654232 2.32842712,-8.44826854e-15 1.5,0 C0.671572875,8.44826854e-15 -1.0658141e-14,0.543654232 0,1.21428571 L2.27373675e-13,15.7857143 Z\" id=\"lr-exclamation-Line\"></path><path id=\"lr-exclamation-Oval-6\" d=\"M0,19.5a1.5,1.5 0 1,0 3,0a1.5,1.5 0 1,0 -3,0\"></path></g></g></g></svg>"

/***/ },
/* 55 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 90 90\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-fast-forward</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-fast-forward-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-fast-forward-lr-fast-forward\"><g id=\"lr-fast-forward-fast-forward\" transform=\"translate(4.000000, 24.000000)\"><path d=\"M42.5999831,2.41947193 C42.2585002,2.56778483 42.0468405,2.48050083 41.9780152,2.40991072 L60.0899845,20.9862895 C60.0968109,20.993291 41.9780152,39.5900893 41.9780152,39.5900893 C42.0470939,39.5192393 42.2563473,39.4327905 42.5947868,39.5767896 C42.9207462,39.7154787 43,39.9068082 43,39.9912248 L43,2.00877516 C43,2.09141662 42.9232517,2.27906989 42.5999831,2.41947193 Z M41,39.9912248 C41,41.4369792 42.3928003,42.0295872 43.4100155,40.9862895 L61.5219848,22.4099107 C62.2875084,21.6247583 62.2848151,20.3724794 61.5219848,19.5900893 L43.4100155,1.01371045 C42.3870796,-0.0354545545 41,0.566981962 41,2.00877516 L41,39.9912248 Z\" id=\"lr-fast-forward-Triangle\"></path><path d=\"M62.5999831,2.41947193 C62.2585002,2.56778483 62.0468405,2.48050083 61.9780152,2.40991072 L80.0899845,20.9862895 C80.0968109,20.993291 61.9780152,39.5900893 61.9780152,39.5900893 C62.0470939,39.5192393 62.2563473,39.4327905 62.5947868,39.5767896 C62.9207462,39.7154787 63,39.9068082 63,39.9912248 L63,2.00877516 C63,2.09141662 62.9232517,2.27906989 62.5999831,2.41947193 Z M61,39.9912248 C61,41.4369792 62.3928003,42.0295872 63.4100155,40.9862895 L81.5219848,22.4099107 C82.2875084,21.6247583 82.2848151,20.3724794 81.5219848,19.5900893 L63.4100155,1.01371045 C62.3870796,-0.0354545545 61,0.566981962 61,2.00877516 L61,39.9912248 Z\" id=\"lr-fast-forward-Triangle\"></path><path d=\"M10.240348,7.25 L29.759652,7.25 C30.4417608,7.25 31,6.69043571 31,6 C31,5.31035943 30.4417381,4.75 29.759652,4.75 L10.240348,4.75 C9.55823923,4.75 9,5.30956429 9,6 C9,6.68964057 9.55826188,7.25 10.240348,7.25 Z M10.240348,2.75 L29.759652,2.75 C31.5492468,2.75 33,4.20872688 33,6 C33,7.79492544 31.5464151,9.25 29.759652,9.25 L10.240348,9.25 C8.45075319,9.25 7,7.79127312 7,6 C7,4.20507456 8.45358485,2.75 10.240348,2.75 Z\" id=\"lr-fast-forward-Rectangle\"></path><path d=\"M3.24655654,22.25 L19.7534435,22.25 C20.43993,22.25 21,21.6896542 21,21 C21,20.3112138 20.4398157,19.75 19.7534435,19.75 L3.24655654,19.75 C2.56006999,19.75 2,20.3103458 2,21 C2,21.6887862 2.56018432,22.25 3.24655654,22.25 Z M3.24655654,17.75 L19.7534435,17.75 C21.5464671,17.75 23,19.2087269 23,21 C23,22.7949254 21.5437983,24.25 19.7534435,24.25 L3.24655654,24.25 C1.45353287,24.25 0,22.7912731 0,21 C0,19.2050746 1.4562017,17.75 3.24655654,17.75 Z\" id=\"lr-fast-forward-Rectangle\"></path><path d=\"M11.0064757,37.75 L29.9935243,37.75 C30.8275094,37.75 31.5,37.0784817 31.5,36.25 C31.5,35.4246282 30.8246479,34.75 29.9935243,34.75 L11.0064757,34.75 C10.1724906,34.75 9.5,35.4215183 9.5,36.25 C9.5,37.0753718 10.1753521,37.75 11.0064757,37.75 Z M11.0064757,32.75 L29.9935243,32.75 C31.9300974,32.75 33.5,34.3209366 33.5,36.25 C33.5,38.1829966 31.9321355,39.75 29.9935243,39.75 L11.0064757,39.75 C9.06990264,39.75 7.5,38.1790634 7.5,36.25 C7.5,34.3170034 9.06786446,32.75 11.0064757,32.75 Z\" id=\"lr-fast-forward-Rectangle\"></path></g></g></g></svg>"

/***/ },
/* 56 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Fast Lane Pill Black</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-fast-lane-pill-black-path-1\" x=\"0.5\" y=\"1.13686838e-13\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-fast-lane-pill-black-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-fast-lane-pill-black-path-1\"></use></mask></defs><g id=\"lr-fast-lane-pill-black-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-fast-lane-pill-black-Fast-Lane-Icon-Study-Copy\" transform=\"translate(-549.000000, -805.000000)\"><g id=\"lr-fast-lane-pill-black-Fast-Lane-Pill-Black\" transform=\"translate(549.000000, 805.000000)\"><use id=\"lr-fast-lane-pill-black-Rectangle-223\" stroke=\"#000000\" mask=\"url(#lr-fast-lane-pill-black-mask-2)\" stroke-width=\"4\" fill=\"#000000\" xlink:href=\"#lr-fast-lane-pill-black-path-1\"></use><g id=\"lr-fast-lane-pill-black-Double-Arrow\" transform=\"translate(10.000000, 5.000000)\" stroke-width=\"2\" stroke-linecap=\"round\"><polygon id=\"lr-fast-lane-pill-black-Path-11-Copy-2\" stroke=\"#6EC35D\" fill=\"#6EC35D\" transform=\"translate(10.242641, 5.000000) rotate(-135.000000) translate(-10.242641, -5.000000) \" points=\"7.24264069 8 13.2426407 8 7.24264069 2\"></polygon><polygon id=\"lr-fast-lane-pill-black-Path-11\" stroke=\"#B8E986\" fill=\"#B8E986\" transform=\"translate(5.088856, 5.000000) rotate(-135.000000) translate(-5.088856, -5.000000) \" points=\"2.08885573 8 8.08885573 8 2.08885573 2\"></polygon></g><g id=\"lr-fast-lane-pill-black-Group-2\" transform=\"translate(3.927675, 5.192459)\" stroke=\"#979797\" stroke-width=\"2\" stroke-linecap=\"round\"><path d=\"M0.606846132,5 L5.06684617,5\" id=\"lr-fast-lane-pill-black-Path-10\"></path><path d=\"M2.60684613,1 L7.60684613,1\" id=\"lr-fast-lane-pill-black-Path-10-Copy\"></path><path d=\"M2.60684613,9 L7.60684613,9\" id=\"lr-fast-lane-pill-black-Path-10-Copy-2\"></path></g></g></g></g></svg>"

/***/ },
/* 57 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Fast Lane Pill Green </title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-fast-lane-pill-green-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-fast-lane-pill-green-Fast-Lane-Icon-Study-Copy\" transform=\"translate(-546.000000, -775.000000)\"><g id=\"lr-fast-lane-pill-green-Fast-Lane-Pill-Green-\" transform=\"translate(546.000000, 775.000000)\"><rect id=\"lr-fast-lane-pill-green-Rectangle-223\" fill=\"#6EC35D\" x=\"0.5\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><g id=\"lr-fast-lane-pill-green-Double-Arrow\" transform=\"translate(10.000000, 5.000000)\" stroke=\"#000000\" stroke-width=\"2\" fill=\"#000000\" stroke-linecap=\"round\"><polygon id=\"lr-fast-lane-pill-green-Path-11-Copy-2\" transform=\"translate(10.242641, 5.000000) rotate(-135.000000) translate(-10.242641, -5.000000) \" points=\"7.24264069 8 13.2426407 8 7.24264069 2\"></polygon><polygon id=\"lr-fast-lane-pill-green-Path-11\" transform=\"translate(5.088856, 5.000000) rotate(-135.000000) translate(-5.088856, -5.000000) \" points=\"2.08885573 8 8.08885573 8 2.08885573 2\"></polygon></g><g id=\"lr-fast-lane-pill-green-Group-2\" transform=\"translate(3.927675, 5.192459)\" stroke=\"#FFFFFF\" stroke-width=\"2\" stroke-linecap=\"round\"><path d=\"M0.606846132,5 L5.06684617,5\" id=\"lr-fast-lane-pill-green-Path-10\"></path><path d=\"M2.60684613,1 L7.60684613,1\" id=\"lr-fast-lane-pill-green-Path-10-Copy\"></path><path d=\"M2.60684613,9 L7.60684613,9\" id=\"lr-fast-lane-pill-green-Path-10-Copy-2\"></path></g></g></g></g></svg>"

/***/ },
/* 58 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Fast Lane Pill White</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-fast-lane-pill-white-path-1\" x=\"0.5\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-fast-lane-pill-white-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-fast-lane-pill-white-path-1\"></use></mask></defs><g id=\"lr-fast-lane-pill-white-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-fast-lane-pill-white-Fast-Lane-Icon-Study-Copy\" transform=\"translate(-549.000000, -832.000000)\"><g id=\"lr-fast-lane-pill-white-Fast-Lane-Pill-White\" transform=\"translate(549.000000, 832.000000)\"><use id=\"lr-fast-lane-pill-white-Rectangle-223\" stroke=\"#000000\" mask=\"url(#lr-fast-lane-pill-white-mask-2)\" stroke-width=\"4\" xlink:href=\"#lr-fast-lane-pill-white-path-1\"></use><g id=\"lr-fast-lane-pill-white-Double-Arrow\" transform=\"translate(10.000000, 5.000000)\" stroke-width=\"2\" stroke-linecap=\"round\"><polygon id=\"lr-fast-lane-pill-white-Path-11-Copy-2\" stroke=\"#417505\" fill=\"#417505\" transform=\"translate(10.242641, 5.000000) rotate(-135.000000) translate(-10.242641, -5.000000) \" points=\"7.24264069 8 13.2426407 8 7.24264069 2\"></polygon><polygon id=\"lr-fast-lane-pill-white-Path-11\" stroke=\"#70C262\" fill=\"#6EC35D\" transform=\"translate(5.088856, 5.000000) rotate(-135.000000) translate(-5.088856, -5.000000) \" points=\"2.08885573 8 8.08885573 8 2.08885573 2\"></polygon></g><g id=\"lr-fast-lane-pill-white-Group-2\" transform=\"translate(3.927675, 5.192459)\" stroke=\"#979797\" stroke-width=\"2\" stroke-linecap=\"round\"><path d=\"M0.606846132,5 L5.06684617,5\" id=\"lr-fast-lane-pill-white-Path-10\"></path><path d=\"M2.60684613,1 L7.60684613,1\" id=\"lr-fast-lane-pill-white-Path-10-Copy\"></path><path d=\"M2.60684613,9 L7.60684613,9\" id=\"lr-fast-lane-pill-white-Path-10-Copy-2\"></path></g></g></g></g></svg>"

/***/ },
/* 59 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 90 90\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-reports</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-file-status-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-file-status-lr-reports\"><g id=\"lr-file-status-Status-Icon\" transform=\"translate(2.000000, 1.000000)\"><path d=\"M76.7352941,38.6990291 C76.7352941,17.6030324 59.6701886,0.5 38.6176471,0.5 C17.5651055,0.5 0.5,17.6030324 0.5,38.6990291 C0.5,59.7950258 17.5651055,76.8980583 38.6176471,76.8980583 C59.6701886,76.8980583 76.7352941,59.7950258 76.7352941,38.6990291 Z M3.5,38.6990291 C3.5,19.2583976 19.2234525,3.5 38.6176471,3.5 C58.0118416,3.5 73.7352941,19.2583976 73.7352941,38.6990291 C73.7352941,58.1396607 58.0118416,73.8980583 38.6176471,73.8980583 C19.2234525,73.8980583 3.5,58.1396607 3.5,38.6990291 Z\" id=\"lr-file-status-Oval\"></path><path d=\"M83.1154745,86.2348883 C83.6956071,86.8262746 84.6453108,86.8353975 85.236697,86.2552649 C85.8280833,85.6751323 85.8372062,84.7254287 85.2570736,84.1340424 L65.4125521,63.9045678 C64.8324195,63.3131815 63.8827159,63.3040586 63.2913296,63.8841912 C62.6999434,64.4643238 62.6908205,65.4140274 63.2709531,66.0054137 L83.1154745,86.2348883 Z\" id=\"lr-file-status-Path-2\"></path><path d=\"M21.6872411,39.8888194 L22.5627697,39.8888194 L22.9933286,39.1264747 L28.5518627,29.2845729 L25.8384088,29.0658778 L35.2879167,54.6919619 L36.6798381,58.466708 L38.0988796,54.7020733 L50.6982236,21.2767463 L47.8683245,21.2120675 L53.612143,38.8532123 L53.9493286,39.8888194 L55.0384457,39.8888194 L63.7487866,39.8888194 C64.5772138,39.8888194 65.2487866,39.2172465 65.2487866,38.3888194 C65.2487866,37.5603922 64.5772138,36.8888194 63.7487866,36.8888194 L55.0384457,36.8888194 L56.4647483,37.9244264 L50.7209297,20.2832816 L49.3980994,16.220437 L47.8910306,20.2186028 L35.2916866,53.6439299 L38.1026496,53.6540413 L28.6531416,28.0279572 L27.5325326,24.988982 L25.9396877,27.8092621 L20.3811536,37.651164 L21.6872411,36.8888194 L13.9052933,36.8888194 C13.0768662,36.8888194 12.4052933,37.5603922 12.4052933,38.3888194 C12.4052933,39.2172465 13.0768662,39.8888194 13.9052933,39.8888194 L21.6872411,39.8888194 Z\" id=\"lr-file-status-Path-3\"></path></g></g></g></svg>"

/***/ },
/* 60 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 150 150\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-gold</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-gold-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"lr-gold-lr-gold\"><g id=\"lr-gold-Gold-Badge\" transform=\"translate(-1.522487, -4.483873)\"><path d=\"M72.248784,16.675443 C74.3205234,15.4793237 77.6867033,15.483496 79.751216,16.675443 L128.099042,44.5890732 C130.170781,45.7851924 131.850258,48.7024759 131.850258,51.0863698 L131.850258,106.91363 C131.850258,109.305869 130.163554,112.21898 128.099042,113.410927 L79.751216,141.324557 C77.6794766,142.520676 74.3132967,142.516504 72.248784,141.324557 L23.9009583,113.410927 C21.8292189,112.214808 20.1497423,109.297524 20.1497423,106.91363 L20.1497423,51.0863698 C20.1497423,48.6941312 21.8364456,45.7810201 23.9009583,44.5890732 L72.248784,16.675443 L72.248784,16.675443 Z\" id=\"lr-gold-Polygon-2-Copy-3\" fill=\"#996515\"></path><path d=\"M72.2496025,19.9265832 C74.3208898,18.7307249 77.6748031,18.7282382 79.7503975,19.9265832 L125.283881,46.2153521 C127.355168,47.4112104 129.034278,50.3145411 129.034278,52.7112311 L129.034278,105.288769 C129.034278,107.680485 127.359475,110.586303 125.283881,111.784648 L79.7503975,138.073417 C77.6791102,139.269275 74.3251969,139.271762 72.2496025,138.073417 L26.7161192,111.784648 C24.6448319,110.58879 22.9657217,107.685459 22.9657217,105.288769 L22.9657217,52.7112311 C22.9657217,50.3195145 24.6405248,47.413697 26.7161192,46.2153521 L72.2496025,19.9265832 L72.2496025,19.9265832 Z\" id=\"lr-gold-Polygon-2-Copy-2\" fill=\"#CBA135\" transform=\"translate(76.000000, 79.000000) rotate(30.000000) translate(-76.000000, -79.000000) \"></path><path d=\"M72.2403488,23.7254743 C74.3167468,22.5266654 77.6837438,22.5269486 79.7596512,23.7254743 L121.989318,48.1067837 C124.065716,49.3055927 125.748969,52.2216392 125.748969,54.6186906 L125.748969,103.381309 C125.748969,105.778927 124.065225,108.694691 121.989318,109.893216 L79.7596512,134.274526 C77.6832532,135.473335 74.3162562,135.473051 72.2403488,134.274526 L30.0106822,109.893216 C27.9342842,108.694407 26.251031,105.778361 26.251031,103.381309 L26.251031,54.6186906 C26.251031,52.2210727 27.9347748,49.3053094 30.0106822,48.1067837 L72.2403488,23.7254743 L72.2403488,23.7254743 Z\" id=\"lr-gold-Polygon-2\" fill=\"#F1B82D\"></path><path d=\"M72.2469895,25.3474469 C74.31972,24.1507554 77.6780443,24.1494646 79.7530107,25.3474469 L120.587969,48.923521 C122.660699,50.1202125 124.340979,53.0279613 124.340979,55.4239261 L124.340979,102.576074 C124.340979,104.969457 122.662935,107.878497 120.587969,109.076479 L79.7530107,132.652553 C77.6802802,133.849245 74.3219559,133.850536 72.2469895,132.652553 L31.4120314,109.076479 C29.3393009,107.879788 27.6590208,104.972039 27.6590208,102.576074 L27.6590208,55.4239261 C27.6590208,53.030543 29.337065,50.1215034 31.4120314,48.923521 L72.2469895,25.3474469 L72.2469895,25.3474469 Z\" id=\"lr-gold-Polygon-2-Copy\" fill=\"#F8E81C\" transform=\"translate(76.000000, 79.000000) rotate(-30.000000) translate(-76.000000, -79.000000) \"></path><g id=\"lr-gold-LiveRamp-Gold-Logo\" transform=\"translate(61.367742, 36.867565)\"><path d=\"M10.1010014,19.0242162 L28.8407365,0.24783047 L28.8407365,13.1920682 C28.8407365,13.1920682 23.7439537,15.9727456 19.3213282,17.3262209 C14.8987027,18.6796962 10.3055159,19.3441285 10.3055159,19.3441285 L10.1010014,19.0242162 L10.1010014,19.0242162 Z\" id=\"lr-gold-Path-44\" stroke=\"#E6BE8A\" fill=\"#E6BE8A\"></path><path d=\"M10.5046378,20.725384 C10.5046378,20.725384 14.3945079,20.2675574 19.644427,18.8221706 C24.8943461,17.3767838 28.8086812,14.8931384 28.8086812,14.8931384 L28.8086812,26.4099779 C28.8086812,26.4099779 21.5859324,24.8342493 18.5799628,23.9705577 C15.4764294,23.0788336 10.480172,21.1437308 10.480172,21.1437308 L10.5046378,20.725384 L10.5046378,20.725384 Z\" id=\"lr-gold-Path-45\" stroke=\"#CFB53B\" fill=\"#CFB53B\"></path><path d=\"M9.30011963,26.7791075 C9.0209927,25.8188105 8.53319042,23.5553766 8.53319042,23.5553766 C8.53319042,23.5553766 9.03805112,23.2773968 9.30011963,23.063204 C9.4896872,22.9082674 9.88809866,22.4479882 9.88809866,22.4479882 C9.88809866,22.4479882 14.991859,24.5990065 18.1198051,25.4994585 C21.2891998,26.4118424 28.7801211,27.8864958 28.7801211,27.8864958 L28.7801211,28.9203512 L10.0926131,28.9203512 C10.0926131,28.9203512 9.54080026,27.6071353 9.30011963,26.7791075 L9.30011963,26.7791075 Z\" id=\"lr-gold-Path-46\" stroke=\"#CBA135\" fill=\"#CBA135\"></path><path d=\"M7.15271781,26.7534412 C7.37692228,27.6001314 7.91964706,28.8954497 7.91964706,28.8954497 L0.224790827,28.8954497 L5.56773087,23.5061594 C5.56773087,23.5061594 5.85990844,23.6776369 6.03768768,23.7418119 C6.20076586,23.8006801 6.59030313,23.8752888 6.59030313,23.8752888 C6.59030313,23.8752888 6.93380764,25.9267445 7.15271781,26.7534412 L7.15271781,26.7534412 Z\" id=\"lr-gold-Path-47\" stroke=\"#996515\" fill=\"#996515\"></path></g><g id=\"lr-gold-GOLD\" transform=\"translate(33.000000, 73.000000)\" font-size=\"32.516129\" font-family=\"Flexo-Bold, Flexo\" fill=\"#996515\" font-weight=\"bold\"><text><tspan x=\"0.6241572\" y=\"26.467565\">GOLD</tspan></text></g><g id=\"lr-gold-Partner\" transform=\"translate(52.000000, 105.000000)\" font-size=\"13.0064516\" font-family=\"Flexo-Bold, Flexo\" fill=\"#996515\" font-weight=\"bold\"><text><tspan x=\"0.1523509\" y=\"10.129461\">Partner</tspan></text></g></g></g></g></svg>"

/***/ },
/* 61 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-encoded</title><desc>Created with Sketch.</desc><defs></defs><g xmlns=\"http://www.w3.org/2000/svg\" id=\"lr-hashed-pii-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-hashed-pii-lr-encoded\"><g id=\"lr-hashed-pii-PEL\" transform=\"translate(15.000000, 5.000000)\"><g id=\"lr-hashed-pii-User-Icon\"><g id=\"lr-hashed-pii-PL-Person-Icon\"><path d=\"M1.97564669,10.0112915 C1.97564669,12.8686428 4.32966499,15.1875 7.23091601,15.1875 C10.1283209,15.1875 12.4861853,12.8672455 12.4861853,10.0112915 L12.4861853,6.8637085 C12.4861853,4.00635723 10.132167,1.6875 7.23091601,1.6875 C4.33351112,1.6875 1.97564669,4.00775448 1.97564669,6.8637085 L1.97564669,10.0112915 Z M7.23091601,0 C11.080095,0 14.200471,3.07551317 14.200471,6.8637085 L14.200471,10.0112915 C14.200471,13.802013 11.0722627,16.875 7.23091601,16.875 C3.38173705,16.875 0.261360972,13.7994868 0.261360972,10.0112915 L0.261360972,6.8637085 C0.261360972,3.07298697 3.38956935,0 7.23091601,0 Z\" id=\"lr-hashed-pii-Rectangle-308\"></path><path d=\"M23.0787458,26.2774861 L23.9358886,26.2774861 L23.9358887,25.4337362 C23.9358887,25.1355283 23.8917045,24.6499049 23.7618776,24.0336911 C23.5479494,23.018297 23.1630867,21.9926619 22.5625569,21.0172842 C21.4339687,19.1842365 19.7980382,18.1471496 17.9104843,17.5101665 C17.6179492,17.4114462 17.1524999,17.2992084 16.5239803,17.1688728 C16.3168961,17.1259299 16.0942348,17.0815315 15.8581462,17.0359538 C15.3779051,16.9432416 14.8645625,16.8498795 14.3513868,16.7603735 C14.0435463,16.7066812 13.8037516,16.6661341 13.665738,16.6433484 L13.2129452,16.5685936 L12.8988294,16.8982044 C12.8558524,16.9433014 12.7473334,17.0435431 12.574703,17.1810585 C12.2732272,17.4212106 11.9099067,17.66387 11.4861425,17.8916904 C10.2627036,18.5494247 8.80861782,18.9451737 7.12225349,18.9451737 C5.45814669,18.9451737 4.19396035,18.5624022 3.26046661,17.9352802 C2.73000285,17.5789142 2.43141294,17.2410698 2.32400528,17.0563445 L2.0029328,16.5041474 L1.37530385,16.6561624 L0.229111742,16.9337761 L0.638695307,18.5724033 L1.78488742,18.2947896 L0.836185989,17.8946075 C1.06506421,18.2882441 1.53321651,18.8179426 2.29412176,19.3291195 C3.51290971,20.1479024 5.11397275,20.6326737 7.12225349,20.6326737 C9.10827671,20.6326737 10.8417711,20.1608799 12.3078318,19.3727093 C13.2006332,18.8927295 13.8149474,18.4033738 14.1490907,18.0527476 L13.3821821,18.3076036 C13.515322,18.3295846 13.7500458,18.3692743 14.0523006,18.4219924 C14.5559504,18.5098369 15.0594332,18.6014058 15.5282292,18.6919085 C15.7568703,18.7360484 15.9718098,18.7789071 16.1706035,18.8201308 C16.7324825,18.9366472 17.1488368,19.0370463 17.3545516,19.1064678 C18.8979815,19.6273212 20.2170717,20.4635493 21.0965092,21.8919276 C21.5890406,22.6918948 21.9068602,23.5388643 22.0833109,24.3763745 C22.1877114,24.8719035 22.221603,25.244402 22.221603,25.4337361 L23.0787458,24.5899861 L3.68253069,24.5899861 L3.68253069,26.2774861 L23.0787458,26.2774861 Z\" id=\"lr-hashed-pii-Path-2\"></path></g></g></g><g id=\"lr-hashed-pii-Group-2\" transform=\"translate(1.000000, 22.000000)\"><path d=\"M4.27258795,12.8163098L5.71703398 13.2207547 9.22222301 0.702222444 7.77777699 0.297777556z\"></path><path d=\"M8.27258795,13.3163098L9.71703398 13.7207547 13.222223 1.20222244 11.777777 0.797777556z\"></path><g id=\"lr-hashed-pii-Group\" transform=\"translate(9.095335, 7.224144) rotate(255.000000) translate(-9.095335, -7.224144) translate(4.595335, -0.775856)\"><path d=\"M0.531970662,13.0497284L1.9808594 13.437957 5.34550699 0.880921236 3.89661825 0.492692668z\"></path><path d=\"M3.94858824,14.8464854L5.39747698 15.2347139 8.76212456 2.6776782 7.31323582 2.28944963z\"></path></g></g></g></g></svg>"

/***/ },
/* 62 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 35\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>household</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-household-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-household-lr-household\" transform=\"translate(0.000000, -2.000000)\"><g id=\"lr-household-household\" transform=\"translate(0.000000, 2.000000)\"><path d=\"M32.2261111,28.1637037 C32.2197308,30.7576376 30.1165265,32.860842 27.5201341,32.8672252 L13.0298148,32.8672222 C10.4393795,32.8576585 8.33969825,30.7553834 8.33333032,28.161249 C8.33347238,28.0407114 8.33347238,28.0407114 8.33417107,27.4819398 C8.33514926,26.7368905 8.33570824,26.3333138 8.33668645,25.6813859 C8.33948131,23.8187535 8.34283512,21.9561294 8.34674778,20.2177359 C8.35625126,15.9953398 8.37198282,12.4423668 8.37710354,12.4044735 L6.39511868,12.1366377 C6.36967428,12.3249262 6.35916531,14.6983774 6.34675285,20.2132344 C6.34283893,21.9521865 6.33948426,23.8152899 6.3366887,25.6783849 C6.33571027,26.3304616 6.33515117,26.7341259 6.33417272,27.4793675 C6.33347381,28.0383142 6.33347381,28.0383142 6.33333397,28.1625783 C6.34240392,31.8600633 9.33223465,34.8535875 13.0261255,34.8672154 L27.5225926,34.8672222 C31.2221712,34.8581297 34.2170186,31.8632823 34.2261081,28.1661622 L34.2261111,12.2705556 L32.2261111,12.2705556 L32.2261111,28.1637037 Z\" id=\"lr-household-Shape\"></path><path d=\"M16.7637037,24.0999969 C16.7655324,23.6053482 17.169055,23.2018257 17.667387,23.1999902 L22.3362963,23.1999969 C22.830945,23.2018257 23.2344676,23.6053482 23.2363031,24.1036802 L23.2362963,34.6168488 L25.2362963,34.6168488 L25.2362963,24.0999969 C25.2304068,22.4991689 23.9371243,21.2058865 22.3399795,21.2000037 L17.6637037,21.1999969 C16.0628757,21.2058865 14.7695932,22.4991689 14.7637105,24.0963137 L14.7637037,34.6168488 L16.7637037,34.6168488 L16.7637037,24.0999969 Z\" id=\"lr-household-Shape\"></path><path d=\"M30.7701852,10.4198159 L30.7701852,3.28426033 C30.7701852,3.02192508 30.5575204,2.80926033 30.2951852,2.80926033 L28.747037,2.80926033 C28.4847018,2.80926033 28.272037,3.02192508 28.272037,3.28426033 L28.272037,8.63944552\" id=\"lr-household-Shape\"></path><path d=\"M20.6268313,2.9550809 L19.3905102,2.96871983 L38.3060657,17.5107569 C38.7439137,17.8473688 39.3717375,17.7653008 39.7083495,17.3274528 C40.0449614,16.8896048 39.9628933,16.261781 39.5250454,15.9251691 L20.6094898,1.38313202 L19.9859658,0.903774743 L19.3731687,1.39677095 L0.457613108,16.6143635 C0.0272976971,16.9605529 -0.0408999187,17.5900344 0.305289469,18.0203499 C0.651478857,18.4506653 1.28096037,18.5188629 1.71127578,18.1726735 L20.6268313,2.9550809 Z\" id=\"lr-household-Shape\"></path></g></g></g></svg>"

/***/ },
/* 63 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 46 46\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-link</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-identity-link-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-identity-link-lr-link\"><g id=\"lr-identity-link-PEL\" transform=\"translate(11.000000, 2.000000)\"><g id=\"lr-identity-link-User-Icon\" transform=\"translate(0.874655, 0.730000)\"><g id=\"lr-identity-link-PL-Person-Icon\"><path d=\"M7.30492113,11.8652344 C7.30492113,15.2517248 10.0512758,18 13.4360687,18 C16.8163744,18 19.5672162,15.2500688 19.5672162,11.8652344 L19.5672162,8.13476563 C19.5672162,4.74827524 16.8208615,2 13.4360687,2 C10.055763,2 7.30492113,4.74993124 7.30492113,8.13476563 L7.30492113,11.8652344 Z M13.4360687,0 C17.9267775,0 21.5672162,3.64505265 21.5672162,8.13476563 L21.5672162,11.8652344 C21.5672162,16.3579414 17.9176398,20 13.4360687,20 C8.94535989,20 5.30492113,16.3549474 5.30492113,11.8652344 L5.30492113,8.13476563 C5.30492113,3.64205863 8.95449758,0 13.4360687,0 Z\" id=\"lr-identity-link-Rectangle-308\"></path><path d=\"M10.601175,31.2020119 L32.0443276,31.2020119 L33.0443275,31.2020119 L33.0443276,30.202012 C33.0443276,29.8485805 32.9927794,29.2730268 32.8413146,28.5426993 C32.5917317,27.3392694 32.1427253,26.1237018 31.4421072,24.9676986 C30.6087916,23.5927478 29.115383,22.3115315 27.888035,21.6355939 C27.2565807,21.287833 26.6677493,21.0385754 26.0193312,20.8127188 C25.6828175,20.6955046 25.152605,20.5642457 24.4375889,20.4127791 C24.1843064,20.3591246 23.9105194,20.3035983 23.6191558,20.2465724 C23.0587986,20.1368988 22.4598679,20.0267248 21.8611389,19.9212858 C21.5019794,19.8580362 21.2221939,19.8103327 21.0611212,19.7835469 L20.5336184,19.6958251 L20.1677585,20.0858262 C20.1176186,20.1392746 19.991013,20.2580795 19.7896109,20.4210607 C19.4378892,20.7056854 19.0140153,20.9932818 18.5196236,21.2632911 C17.0922783,22.0428281 15.3958449,22.511864 13.4284199,22.511864 C11.4870462,22.511864 10.0127889,22.0582603 8.92465568,21.3151347 C8.30640659,20.8929099 7.95860594,20.492673 7.83361838,20.2739139 L7.48085418,19.6564893 L6.78183537,19.7869821 C6.62124747,19.8169606 6.34122717,19.8698082 5.98147237,19.9386862 C5.38181262,20.053496 4.78205393,20.1706174 4.22161659,20.2832736 C4.06159732,20.3155035 4.06159732,20.3155035 3.9021703,20.3478901 C2.97655069,20.5363609 2.29184004,20.6868558 1.90409247,20.7918005 C1.85845328,20.8041528 1.82467761,20.8129373 1.7369042,20.8354178 C1.64456954,20.858951 1.64456954,20.858951 1.5448451,20.8849148 C0.881882527,21.0597069 0.451968225,21.2508244 0.0505396154,21.654827 L1.46926554,23.0645138 C1.55432941,22.9789045 1.70991732,22.9097382 2.05472725,22.818828 C2.14006018,22.7966097 2.14006018,22.7966097 2.2319636,22.7731784 C2.32630984,22.7490277 2.36953602,22.7377853 2.42659725,22.7223415 C2.75951315,22.6322372 3.41755937,22.4876029 4.30121384,22.3076769 C4.45805133,22.2758163 4.45805133,22.2758163 4.61576198,22.2440514 C5.16948653,22.1327445 5.76347274,22.0167504 6.35755788,21.9030079 C6.71405001,21.8347546 6.99111066,21.7824656 7.14885474,21.7530179 L6.09707172,21.2660861 C6.36372369,21.732793 6.90941462,22.3607551 7.7967217,22.9667293 C9.21784879,23.9372686 11.0853414,24.511864 13.4284199,24.511864 C15.7454469,24.511864 17.767857,23.9527009 19.4782613,23.0185728 C20.5198628,22.4497078 21.2365628,21.8697308 21.6263966,21.4541738 L20.7330338,21.7564531 C20.8882114,21.7822586 21.1618637,21.8289163 21.5142673,21.8909762 C22.1014766,21.9943865 22.6884842,22.1023672 23.2350027,22.2093323 C23.5167636,22.2644788 23.7805859,22.3179841 24.0231134,22.3693603 C24.658308,22.5039178 25.1288872,22.620414 25.3614589,22.7014232 C25.912386,22.8933217 26.4031265,23.1010565 26.9232156,23.3874853 C27.8684682,23.9080645 29.1033076,24.9674505 29.7317182,26.004313 C30.3063381,26.9524222 30.6771276,27.956238 30.8829869,28.9488427 C31.0047874,29.5361363 31.0443276,29.977616 31.0443276,30.2020119 L32.0443276,29.2020119 L10.601175,29.2020119 L9.55961004,29.2020119 L9.55961004,31.2020119 L10.601175,31.2020119 Z\" id=\"lr-identity-link-Path-2\"></path><path d=\"M7.6253449,29.2100005L9.56534543 29.2000003 9.56534543 31.2000003z\"></path></g></g></g><g id=\"lr-identity-link-link\" transform=\"translate(11.000000, 34.000000) scale(-1, 1) translate(-11.000000, -34.000000) translate(1.000000, 24.000000)\"><path d=\"M6.36019417,6.36019417 C8.76582524,5.03407767 11.8513107,5.73941748 13.3975728,8.08436893 L11.5263592,9.95558252 C10.9895146,8.73097087 9.65742718,8.03495146 8.3315534,8.33150485 C7.83242718,8.44315534 7.35805825,8.69203883 6.97043689,9.07970874 L3.38315534,12.6668932 C2.29417476,13.7558738 2.2942233,15.5278641 3.38325243,16.6168447 C4.47223301,17.7058252 6.24417476,17.7058252 7.33315534,16.6168447 L8.43898058,15.511068 C9.44432039,15.9099515 10.5233495,16.0697087 11.5876214,15.9898544 L9.14694175,18.430534 C7.05446602,20.5230097 3.66194175,20.5230097 1.56946602,18.430534 C-0.523009709,16.3381068 -0.523058252,12.945534 1.56941748,10.8530583 L5.15660194,7.26597087 C5.5226699,6.89995146 5.92854369,6.59815534 6.36019417,6.36019417 Z M10.8531068,1.56941748 L8.41242718,4.01009709 C9.4768932,3.93033981 10.5557282,4.09009709 11.5611165,4.48898058 L12.6668932,3.38315534 C13.7559223,2.29412621 15.5278641,2.29412621 16.6168932,3.38315534 C17.7059223,4.47218447 17.7059223,6.24412621 16.6168932,7.33315534 L13.0296602,10.9202913 C11.9373786,12.0125728 10.1626214,12.0033495 9.07975728,10.9202913 C8.82723301,10.6678155 8.60917476,10.3533981 8.47373786,10.0445631 L6.60257282,11.9157282 C6.79912621,12.2138835 7.00359223,12.471699 7.26597087,12.7340777 C7.9431068,13.4112621 8.80470874,13.9155825 9.79592233,14.1540291 C11.0806796,14.4632524 12.457233,14.2918447 13.6398544,13.6398544 C14.0715049,13.4018447 14.4774272,13.1000971 14.8434466,12.7340777 L18.4306311,9.14694175 C20.5231068,7.05446602 20.5231068,3.66194175 18.4306796,1.56941748 C16.3381553,-0.523058252 12.9456311,-0.523058252 10.8531068,1.56941748 L10.8531068,1.56941748 Z\" id=\"lr-identity-link-link-icon\"></path></g></g></g></svg>"

/***/ },
/* 64 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-individual</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-individual-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-individual-lr-individual\"><g id=\"lr-individual-Individual-Icon\" transform=\"translate(5.000000, 7.000000)\"><path d=\"M2.61980379,22.6746837 C2.49308742,23.2867252 2.48214191,23.9908288 2.54480681,24.6329633 C2.55745325,24.7625528 2.56875832,24.8467946 2.57326116,24.8740546 L0.6,23.2 L30.2,23.2 L28.2681415,24.6823875 C28.2707162,24.6727782 28.2859188,24.6028168 28.3044284,24.4854431 C28.4038745,23.8548312 28.3816693,23.1616972 28.1723435,22.5710511 C28.1383192,22.4750461 28.0996674,22.382951 28.0562907,22.2948261 C27.4341516,21.0308759 26.8360393,20.4273319 25.7402186,19.8335846 C25.3028449,19.596603 24.5629781,19.3319236 23.6349489,19.077733 C22.9337527,18.8856728 22.1725313,18.7112813 21.4099486,18.5593584 C20.9521885,18.4681628 20.5995867,18.4054407 20.4072108,18.3742988 L22.2915129,17.6456757 C21.9405267,18.0865518 21.3372981,18.6475733 20.4615847,19.183677 C19.0571207,20.0434771 17.3620275,20.5558668 15.4,20.5558668 C13.4246104,20.5558668 11.7482109,20.0351235 10.3915865,19.1567705 C9.53601846,18.6028289 8.96061947,18.0194167 8.63202648,17.5547396 L10.7230669,18.3468352 C10.6760541,18.357897 10.5831741,18.3801569 10.4510733,18.4124766 C10.2283582,18.4669659 9.97956052,18.5292706 9.71138097,18.5982326 C8.94685441,18.7948296 8.18312395,19.0045758 7.47575024,19.2173975 C6.80625045,19.4188243 6.22462773,19.6120733 5.76229817,19.7893401 C5.47182093,19.9007152 5.23923921,20.0018299 5.07887248,20.0849849 C3.50450607,20.901341 3.13112108,21.2250272 2.77428876,22.1389737 C2.71275711,22.2965733 2.66088467,22.4762625 2.61980379,22.6746837 Z M4.1582222,18.3094841 C5.8268188,17.4442668 10.264992,16.4 10.264992,16.4 C10.264992,16.4 11.7894974,18.5558668 15.4,18.5558668 C19.0105026,18.5558668 20.726811,16.4 20.726811,16.4 C20.726811,16.4 24.8261459,17.0636018 26.6930054,18.0751202 C27.9838756,18.7745509 28.9672435,19.6167483 29.8506958,21.4115875 C30.7341481,23.2064267 30.2,25.2 30.2,25.2 L0.6,25.2 C0.6,25.2 0.25279988,23.0980637 0.911251092,21.4115875 C1.5697023,19.7251114 2.60515479,19.114796 4.1582222,18.3094841 Z\" id=\"lr-individual-Rectangle-309\"></path><path d=\"M10.8400024,10.0073972 C10.8400024,12.4338083 12.8088068,14.4 15.2400024,14.4 C17.6662113,14.4 19.6400024,12.4300194 19.6400024,10.0073972 L19.6400024,6.79260283 C19.6400024,4.36619172 17.6711981,2.4 15.2400024,2.4 C12.8137935,2.4 10.8400024,4.36998058 10.8400024,6.79260283 L10.8400024,10.0073972 Z M15.2400024,0.4 C18.7746248,0.4 21.6400024,3.26047935 21.6400024,6.79260283 L21.6400024,10.0073972 C21.6400024,13.5379342 18.7674326,16.4 15.2400024,16.4 C11.70538,16.4 8.84000244,13.5395206 8.84000244,10.0073972 L8.84000244,6.79260283 C8.84000244,3.26206578 11.7125723,0.4 15.2400024,0.4 Z\" id=\"lr-individual-Rectangle-308\"></path></g></g></g></svg>"

/***/ },
/* 65 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 7 17\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Information Icon Green</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-information-green-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" font-size=\"24\" font-family=\"Times-Bold, Times\" font-weight=\"bold\"><g transform=\"translate(-2590.000000, -623.000000)\" id=\"lr-information-green-Group-8-Copy\" fill=\"#6CC457\"><g transform=\"translate(2587.027884, 603.738353)\"><text id=\"lr-information-green-Information-Icon-Green\"><tspan x=\"3.66601562\" y=\"35.8305919\">i</tspan></text></g></g></g></svg>"

/***/ },
/* 66 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 7 17\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Information Icon White</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-information-white-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" font-size=\"24\" font-family=\"Times-Bold, Times\" font-weight=\"bold\"><g transform=\"translate(-2528.000000, -623.000000)\" id=\"lr-information-white-White-Group\" fill=\"#FFFFFF\"><g transform=\"translate(2525.000000, 603.738353)\"><text id=\"lr-information-white-Information-Icon-White\"><tspan x=\"3.66601562\" y=\"35.5975428\">i</tspan></text></g></g></g></svg>"

/***/ },
/* 67 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 107 107\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Desktop</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-logo-Download-and-Upload-Tagging-File\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-logo-Desktop\"><g id=\"lr-logo-Nondeterminate-Spinner\" transform=\"translate(2.000000, 3.000000)\"><g id=\"lr-logo-LiveRamp-Logo\" transform=\"translate(0.371212, 0.371212)\"><polygon id=\"lr-logo-Path-48\" points=\"26.1016601 69.5342763 70.4541433 25.1228205 70.3618554 69.5654429\"></polygon><path d=\"M41.5322938,54.2535071 L70.3483547,25.3810885 L70.3483547,45.2854224 C70.3483547,45.2854224 62.5110399,49.5612656 55.7103757,51.6425024 C48.9097115,53.7237393 41.8467754,54.7454356 41.8467754,54.7454356 L41.5322938,54.2535071 Z\" id=\"lr-logo-Path-44\" stroke=\"#A3D496\" stroke-width=\"0.5\" fill=\"#A3D496\"></path><path d=\"M42.1529649,56.8693901 C42.1529649,56.8693901 48.134412,56.1653909 56.2072042,53.9428219 C64.2799965,51.7202529 70.2990634,47.9011552 70.2990634,47.9011552 L70.2990634,65.6105811 C70.2990634,65.6105811 59.192654,63.1875858 54.5703792,61.8594886 C49.7980809,60.4882858 42.1153438,57.5126812 42.1153438,57.5126812 L42.1529649,56.8693901 Z\" id=\"lr-logo-Path-45\" stroke=\"#70C263\" stroke-width=\"0.5\" fill=\"#70C263\"></path><path d=\"M40.3007792,66.178191 C39.8715662,64.7015439 39.1214734,61.2210653 39.1214734,61.2210653 C39.1214734,61.2210653 39.8977969,60.7936162 40.3007792,60.4642522 C40.5922769,60.2260064 41.2049136,59.5182359 41.2049136,59.5182359 C41.2049136,59.5182359 49.0529578,62.8258533 53.8627955,64.2104768 C58.7363688,65.6134481 70.2551466,67.8810203 70.2551466,67.8810203 L70.2551466,69.4707781 L41.5193952,69.4707781 C41.5193952,69.4707781 40.6708734,67.4514482 40.3007792,66.178191 Z\" id=\"lr-logo-Path-46\" stroke=\"#357D25\" stroke-width=\"0.5\" fill=\"#357D25\"></path><path d=\"M36.9987228,66.1387241 C37.3434817,67.4406783 38.1780287,69.4324871 38.1780287,69.4324871 L26.3456605,69.4324871 L34.5614909,61.145384 C34.5614909,61.145384 35.0107719,61.4090648 35.2841428,61.5077465 C35.5349078,61.598268 36.1338987,61.7129938 36.1338987,61.7129938 C36.1338987,61.7129938 36.662105,64.8675139 36.9987228,66.1387241 Z\" id=\"lr-logo-Path-47\" stroke=\"#7FA1B7\" stroke-width=\"0.5\" fill=\"#7FA1B7\"></path><rect id=\"lr-logo-Key-Copy\" x=\"0.628787879\" y=\"0.628787879\" width=\"100\" height=\"100\"></rect></g></g></g></g></svg>"

/***/ },
/* 68 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 94 94\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-reports</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-manage-segments-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-manage-segments-lr-reports\"><g id=\"lr-manage-segments-Manage-Segments\" transform=\"translate(1.000000, 1.000000)\"><g id=\"lr-manage-segments-Segment-Group\" transform=\"translate(23.876850, 20.876850)\"><path d=\"M20.8443527,43.6 L36.9556473,43.6 C37.1894477,43.6 37.1566734,43.5554194 37.105538,43.7026625 L38.5225208,44.1947597 L37.4561302,43.1398611 C37.3722123,43.2246932 37.1901285,43.3950822 36.9233943,43.6221831 C36.4690679,44.0090023 35.9556508,44.3971445 35.398086,44.7580024 C35.2811727,44.8336691 35.1633386,44.9074272 35.0446797,44.979114 C34.360273,45.3925931 33.6342032,45.7960392 32.9155403,46.171509 C32.485105,46.3963925 32.1554284,46.560669 31.974135,46.6476764 L32.62315,46.5000001 L20.8424161,46.5000001 C20.4050835,46.5000001 20.05,46.1441757 20.05,45.7020118 L20.05,44.3979883 C20.05,43.9564273 20.4057883,43.6 20.8443527,43.6 Z M17.05,45.7020118 C17.05,47.7996319 18.746828,49.5000001 20.8424161,49.5000001 L32.62315,49.5000001 C32.8478178,49.5000001 33.069616,49.4495323 33.272165,49.3523238 C33.3276041,49.3257172 33.4262644,49.2775191 33.5623479,49.2097093 C33.786053,49.0982381 34.0354344,48.9711799 34.3047365,48.8304814 C35.0746432,48.428239 35.8533169,47.9955631 36.5959811,47.5468881 C36.7414329,47.4590145 36.8854876,47.3688437 37.0280965,47.2765468 C38.1862629,46.5269775 39.0679313,45.776314 39.5889114,45.2496583 C39.7462955,45.0905598 39.8660859,44.8982616 39.9395036,44.686857 C40.6755809,42.5673392 39.2292511,40.6 36.9556473,40.6 L20.8443527,40.6 C18.7477279,40.6 17.05,42.3007768 17.05,44.3979883 L17.05,45.7020118 Z\" id=\"lr-manage-segments-Rectangle-6-Copy-3\"></path><path d=\"M7.05001468,30.95 L25.4499853,30.95 C25.8926275,30.95 26.25,31.306935 26.25,31.7479883 L26.25,33.0520118 C26.25,33.4910096 25.8903484,33.8500001 25.4499853,33.8500001 L7.05001468,33.8500001 C6.60737254,33.8500001 6.25,33.4930651 6.25,33.0520118 L6.25,31.7479883 C6.25,31.3089905 6.60965159,30.95 7.05001468,30.95 Z M3.25,33.0520118 C3.25,35.1507426 4.95134041,36.8500001 7.05001468,36.8500001 L25.4499853,36.8500001 C27.5459684,36.8500001 29.25,35.1491006 29.25,33.0520118 L29.25,31.7479883 C29.25,29.6492575 27.5486596,27.95 25.4499853,27.95 L7.05001468,27.95 C4.95403162,27.95 3.25,29.6508995 3.25,31.7479883 L3.25,33.0520118 Z\" id=\"lr-manage-segments-Rectangle-6-Copy-2\"></path><path d=\"M4.74035958,17.15 L34.6596404,17.15 C35.0955346,17.15 35.45,17.5055239 35.45,17.9479883 L35.45,19.2520118 C35.45,19.6906771 35.0911044,20.0500001 34.6596404,20.0500001 L4.74035958,20.0500001 C4.30446537,20.0500001 3.95,19.6944762 3.95,19.2520118 L3.95,17.9479883 C3.95,17.509323 4.30889561,17.15 4.74035958,17.15 Z M0.95,19.2520118 C0.95,21.3493314 2.64560542,23.0500001 4.74035958,23.0500001 L34.6596404,23.0500001 C36.7487583,23.0500001 38.45,21.3467327 38.45,19.2520118 L38.45,17.9479883 C38.45,15.8506687 36.7543946,14.15 34.6596404,14.15 L4.74035958,14.15 C2.65124165,14.15 0.95,15.8532674 0.95,17.9479883 L0.95,19.2520118 Z\" id=\"lr-manage-segments-Rectangle-6-Copy-6\"></path><path d=\"M22.0051699,3.35 L28.7423765,3.35 L28.7423765,1.85 L28.5222894,3.33376604 C28.6006897,3.34539515 28.8076079,3.38864778 29.134649,3.47820398 C29.7157339,3.63732695 30.4000211,3.87215814 31.1792203,4.1975059 C31.9809647,4.53226723 32.6671546,4.85205698 33.2367101,5.14486894 C33.566892,5.31461746 33.7782925,5.43337267 33.8698061,5.48910337 L34.6499998,4.20797191 L33.1499998,4.20797199 L33.1499999,5.44680156 C33.1499999,5.89200314 32.7923924,6.2500001 32.3468259,6.2500001 L22.0031741,6.2500001 C21.5583266,6.2500001 21.2,5.89260316 21.2,5.45201182 L21.2,4.14798827 C21.2,3.71064073 21.5623332,3.35 22.0051699,3.35 Z M18.2,5.45201182 C18.2,7.55120447 19.9032144,9.2500001 22.0031741,9.2500001 L32.3468259,9.2500001 C34.4499782,9.2500001 36.15,7.54812671 36.1499999,5.4468014 L36.1499998,4.20797183 C36.1499998,3.6845958 35.8772025,3.19906356 35.4301935,2.92684045 C34.8791394,2.59125511 33.8447,2.05944353 32.3351291,1.42913544 C30.7805435,0.780031926 29.6322307,0.465580543 28.9624636,0.366233958 L28.7423765,0.35 L22.0051699,0.35 C19.9086151,0.35 18.2,2.05063406 18.2,4.14798827 L18.2,5.45201182 Z\" id=\"lr-manage-segments-Rectangle-6-Copy-7\"></path></g><g id=\"lr-manage-segments-Gear\" transform=\"translate(0.696000, 0.696000)\"><path d=\"M68.810475,45.75585 C68.810475,33.0231322 58.4885678,22.701225 45.75585,22.701225 C33.0231322,22.701225 22.701225,33.0231322 22.701225,45.75585 C22.701225,58.4885678 33.0231322,68.810475 45.75585,68.810475 C58.4885678,68.810475 68.810475,58.4885678 68.810475,45.75585 Z M19.701225,45.75585 C19.701225,31.366278 31.366278,19.701225 45.75585,19.701225 C60.145422,19.701225 71.810475,31.366278 71.810475,45.75585 C71.810475,60.145422 60.145422,71.810475 45.75585,71.810475 C31.366278,71.810475 19.701225,60.145422 19.701225,45.75585 Z\" id=\"lr-manage-segments-Oval-Copy\"></path><path d=\"M76.2288165,51.5804223 C76.4051134,51.6092884 76.5860297,51.6243 76.7704267,51.6243 L85.1626733,51.6243 C87.0096152,51.6243 88.5117,50.1184883 88.5117,48.2609755 L88.5117,43.2507245 C88.5117,41.3977666 87.0122897,39.8874 85.1626733,39.8874 L76.7704267,39.8874 C76.5860693,39.8874 76.405148,39.9024032 76.2288135,39.9312619 C75.4828133,36.0046296 73.9966573,32.3401464 71.9209788,29.0884454 C72.2163839,28.9517119 72.4964555,28.7691393 72.7508283,28.540101 L78.987483,22.9245918 C80.3600283,21.6887465 80.4687102,19.5646195 79.2257915,18.1842184 L75.8732792,14.4608763 C74.6334084,13.0838602 72.5084968,12.9647404 71.133964,14.2023753 L64.8973093,19.8178845 C64.5845327,20.0995097 64.3373881,20.4272631 64.1569137,20.7818318 C60.4968605,18.0805722 56.2217743,16.1646671 51.5804223,15.2828835 C51.6092884,15.1065866 51.6243,14.9256703 51.6243,14.7412733 L51.6243,6.34902666 C51.6243,4.50208479 50.1184883,3 48.2609755,3 L43.2507245,3 C41.3977666,3 39.8874,4.49941031 39.8874,6.34902666 L39.8874,14.7412733 C39.8874,14.9256307 39.9024032,15.106552 39.9312619,15.2828865 C36.0741316,16.0156824 32.4699524,17.4626642 29.2614994,19.4810566 L23.7681819,13.5901949 C22.5085706,12.2394271 20.3828703,12.1678329 19.0243714,13.4346536 L15.3601058,16.8516366 C14.0049382,18.1153508 13.9229213,20.2420177 15.1843566,21.5947414 L20.6822378,27.4904971 C18.0334675,31.1203541 16.1537911,35.3471726 15.2828835,39.9312777 C15.1065866,39.9024116 14.9256703,39.8874 14.7412733,39.8874 L6.34902666,39.8874 C4.50208479,39.8874 3,41.3932117 3,43.2507245 L3,48.2609755 C3,50.1139334 4.49941031,51.6243 6.34902666,51.6243 L14.7412733,51.6243 C14.9256307,51.6243 15.106552,51.6092968 15.2828865,51.5804381 C16.0110332,55.4130968 17.4443321,58.9960039 19.4427085,62.1890847 C18.9610666,62.3468826 18.5086021,62.6167935 18.1262502,62.9991453 L12.1920357,68.9333599 C10.8860506,70.239345 10.8886859,72.366249 12.2021458,73.6797089 L15.7449283,77.2224914 C17.0551673,78.5327304 19.183401,78.5404777 20.4912773,77.2326014 L26.4254918,71.2983869 C26.6717845,71.0520942 26.8715357,70.7766054 27.0247306,70.4828822 C30.7568431,73.3144113 35.1496941,75.3203911 39.9312777,76.2288165 C39.9024116,76.4051134 39.8874,76.5860297 39.8874,76.7704267 L39.8874,85.1626733 C39.8874,87.0096152 41.3932117,88.5117 43.2507245,88.5117 L48.2609755,88.5117 C50.1139334,88.5117 51.6243,87.0122897 51.6243,85.1626733 L51.6243,76.7704267 C51.6243,76.5860693 51.6092968,76.405148 51.5804381,76.2288135 C56.0408306,75.381407 60.1629604,73.5789446 63.7260379,71.0422161 L69.198739,77.3378386 C70.4104419,78.7317433 72.5323486,78.8774797 73.9342314,77.6588417 L77.7155158,74.3718212 C79.1139609,73.1561715 79.2701474,71.0336625 78.0566898,69.6377393 L72.5508806,63.3040304 C72.3216163,63.0402919 72.0597668,62.8212376 71.7763747,62.6476546 C73.9276917,59.3404971 75.4656062,55.5976524 76.2288165,51.5804223 Z M71.7763747,62.6476546 L73.3433457,60.0894127 C73.8916425,60.4252548 74.3876813,60.8442685 74.8150094,61.3358533 L80.3208186,67.6695622 C82.6225391,70.3173888 82.3311434,74.3345563 79.6836929,76.63595 L75.9024084,79.9229704 C73.2526575,82.2263638 69.2355507,81.9529448 66.9346102,79.3060156 L61.4619091,73.0103932 L65.4659685,73.4861149 C61.496809,76.311953 56.9627106,78.2599252 52.1403766,79.1760951 L51.5804381,76.2288135 L54.5410513,75.7442832 C54.5963578,76.0822211 54.6243,76.4251954 54.6243,76.7704267 L54.6243,85.1626733 C54.6243,88.6710779 51.7688819,91.5117 48.2609755,91.5117 L43.2507245,91.5117 C39.7397701,91.5117 36.8874,88.6698889 36.8874,85.1626733 L36.8874,76.7704267 C36.8874,76.4250992 36.9153597,76.0820551 36.9707007,75.7440647 L39.9312777,76.2288165 L39.3713406,79.1760984 C34.204305,78.1944432 29.3707971,76.0285333 25.2114608,72.8728723 L27.0247306,70.4828822 L29.2756462,72.8728714 C28.9792647,73.4411286 29.0058936,72.9606258 28.5468122,73.4197073 L22.6125976,79.3539218 C20.131781,81.8347384 16.1040723,81.8242761 13.6236079,79.3438117 L10.0808254,75.8010292 C7.59820577,73.3184095 7.59073945,69.2920154 10.0707154,66.8120395 L16.0049299,60.877825 C16.7142858,60.1684691 16.5783328,60.3965931 17.5159302,60.0894127 L19.4427085,62.1890847 L16.8996809,63.780628 C14.6760593,60.2276421 13.1237832,56.2890164 12.3356049,52.1403766 L15.2828865,51.5804381 L15.7674168,54.5410513 C15.4294789,54.5963578 15.0865046,54.6243 14.7412733,54.6243 L6.34902666,54.6243 C2.84062212,54.6243 0,51.7688819 0,48.2609755 L0,43.2507245 C0,39.7397701 2.8418111,36.8874 6.34902666,36.8874 L14.7412733,36.8874 C15.0866008,36.8874 15.4296449,36.9153597 15.7676353,36.9707007 L15.2828835,39.9312777 L12.3356016,39.3713406 C13.2769912,34.4162465 15.307659,29.7664027 18.2588508,25.7221092 L18.4881767,29.5364922 L12.9902955,23.6407365 C10.5975694,21.0748519 10.7485904,17.0499619 13.3141107,14.6575755 L16.9783763,11.2405925 C19.5461258,8.84612737 23.5703277,8.97918473 25.962243,11.5441998 L31.4555605,17.4350616 L27.6640484,16.9417358 C31.234318,14.6957296 35.1964138,13.128774 39.3713234,12.3356049 L39.9312619,15.2828865 L36.9706487,15.7674168 C36.9153422,15.4294789 36.8874,15.0865046 36.8874,14.7412733 L36.8874,6.34902666 C36.8874,2.84062212 39.7428181,0 43.2507245,0 L48.2609755,0 C51.7719299,0 54.6243,2.8418111 54.6243,6.34902666 L54.6243,14.7412733 C54.6243,15.0866008 54.5963403,15.4296449 54.5409993,15.7676353 L51.5804223,15.2828835 L52.1403594,12.3356016 C57.1568899,13.2886632 61.8601148,15.3581266 65.9383817,18.368044 L64.1569137,20.7818318 L61.4619102,18.815115 C61.8120093,18.1272935 62.3080063,18.1124051 62.8899175,17.58845 L69.1265722,11.9729409 C71.7338248,9.62536001 75.7554661,9.846602 78.1027136,12.4534845 L81.455226,16.1768266 C83.804513,18.7859742 83.6012439,22.807241 80.9948748,25.1540263 L74.7582201,30.7695354 C74.2839865,31.1965373 74.4210967,31.1881069 73.8494339,31.4527111 L71.9209788,29.0884454 L74.4497014,27.4742701 C76.7597759,31.0931694 78.3687522,35.1218092 79.1760951,39.3713234 L76.2288135,39.9312619 L75.7442832,36.9706487 C76.0822211,36.9153422 76.4251954,36.8874 76.7704267,36.8874 L85.1626733,36.8874 C88.6710779,36.8874 91.5117,39.7428181 91.5117,43.2507245 L91.5117,48.2609755 C91.5117,51.7719299 88.6698889,54.6243 85.1626733,54.6243 L76.7704267,54.6243 C76.4250992,54.6243 76.0820551,54.5963403 75.7440647,54.5409993 L76.2288165,51.5804223 L79.1760984,52.1403594 C78.3502837,56.4871139 76.6858024,60.602244 74.291127,64.2835094 L71.7763747,62.6476546 Z\" id=\"lr-manage-segments-Combined-Shape\"></path></g></g></g></g></svg>"

/***/ },
/* 69 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-mobile</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-mobile-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-mobile-lr-mobile\"><g id=\"lr-mobile-mobile\" transform=\"translate(9.000000, 1.000000)\"><path d=\"M3.49520242,2.25 L19.0047976,2.25 C19.6908403,2.25 20.25,2.81290009 20.25,3.50746124 L20.25,34.4925388 C20.25,35.1899625 19.6942953,35.75 19.0047976,35.75 L3.49520242,35.75 C2.80915974,35.75 2.25,35.1870999 2.25,34.4925388 L2.25,3.50746124 C2.25,2.81003746 2.80570469,2.25 3.49520242,2.25 Z M0.75,34.4925388 C0.75,36.0132966 1.97848572,37.25 3.49520242,37.25 L19.0047976,37.25 C20.5253415,37.25 21.75,36.015793 21.75,34.4925388 L21.75,3.50746124 C21.75,1.98670336 20.5215143,0.75 19.0047976,0.75 L3.49520242,0.75 C1.97465849,0.75 0.75,1.98420701 0.75,3.50746124 L0.75,34.4925388 Z\" id=\"lr-mobile-Path-33\"></path><path d=\"M10.7087662,32.95 C10.7087662,33.2152995 10.9305622,33.44 11.2162162,33.44 C11.5018703,33.44 11.7236663,33.2152995 11.7236663,32.95 C11.7236663,32.6847005 11.5018703,32.46 11.2162162,32.46 C10.9305622,32.46 10.7087662,32.6847005 10.7087662,32.95 Z M9.88366627,32.95 C9.88366627,32.2044156 10.4802692,31.6 11.2162162,31.6 C11.9521632,31.6 12.5487662,32.2044156 12.5487662,32.95 C12.5487662,33.6955844 11.9521632,34.3 11.2162162,34.3 C10.4802692,34.3 9.88366627,33.6955844 9.88366627,32.95 Z\" id=\"lr-mobile-Oval-53\"></path><path d=\"M21,8.25L21 6.75 1.5 6.75 1.5 8.25z\"></path><path d=\"M21,8.25L21 6.75 1.5 6.75 1.5 8.25z\"></path><path d=\"M13.5,5.25 C13.9142136,5.25 14.25,4.91421356 14.25,4.5 C14.25,4.08578644 13.9142136,3.75 13.5,3.75 L9,3.75 C8.58578644,3.75 8.25,4.08578644 8.25,4.5 C8.25,4.91421356 8.58578644,5.25 9,5.25 L13.5,5.25 Z\" id=\"lr-mobile-Path-34\"></path><path d=\"M21,30.75L21 29.25 1.5 29.25 1.5 30.75z\"></path></g></g></g></svg>"

/***/ },
/* 70 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>notifications</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-notification-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-notification-notifications\"><g id=\"lr-notification-Notification-Icon\" transform=\"translate(2.000000, 1.000000)\"><path id=\"lr-notification-Oval-2-Copy\" d=\"M5.2,19.42a1.92,1.92 0 1,0 3.84,0a1.92,1.92 0 1,0 -3.84,0\"></path><path d=\"M17,19.8 C17.7179702,19.8 18.3,19.2179702 18.3,18.5 C18.3,17.7820298 17.7179702,17.2 17,17.2 L2,17.2 C1.28202983,17.2 0.7,17.7820298 0.7,18.5 C0.7,19.2179702 1.28202983,19.8 2,19.8 L17,19.8 Z\" id=\"lr-notification-Path-2\"></path><path d=\"M7.48029986,1.96502657 C4.88261587,2.8164268 3,5.2646282 3,8.15198868 L3,15.6438157 L16,15.6438157 L16,8.15198868 C16,5.2381971 14.1013177,2.78538645 11.4793854,1.94991524 C11.4528051,0.868489233 10.567826,0 9.48000023,0 C8.3871122,0 7.49896303,0.876591239 7.48029986,1.96502657 Z\" id=\"lr-notification-Combined-Shape\"></path></g></g></g></svg>"

/***/ },
/* 71 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 46 46\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-pearl</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-pearl-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-pearl-lr-pearl\"><g id=\"lr-pearl-PEL\" transform=\"translate(17.000000, 2.000000)\"><g id=\"lr-pearl-User-Icon\" transform=\"translate(0.874655, 0.730000)\"><g id=\"lr-pearl-PL-Person-Icon\"><path d=\"M2.30492113,11.8652344 C2.30492113,15.2517248 5.05127582,18 8.43606868,18 C11.8163744,18 14.5672162,15.2500688 14.5672162,11.8652344 L14.5672162,8.13476563 C14.5672162,4.74827524 11.8208615,2 8.43606868,2 C5.05576298,2 2.30492113,4.74993124 2.30492113,8.13476563 L2.30492113,11.8652344 Z M8.43606868,0 C12.9267775,0 16.5672162,3.64505265 16.5672162,8.13476563 L16.5672162,11.8652344 C16.5672162,16.3579414 12.9176398,20 8.43606868,20 C3.94535989,20 0.304921135,16.3549474 0.304921135,11.8652344 L0.304921135,8.13476563 C0.304921135,3.64205863 3.95449758,0 8.43606868,0 Z\" id=\"lr-pearl-Rectangle-308\"></path><path d=\"M26.9252035,31.1436872 L27.9252034,31.1436872 L27.9252035,30.1436873 C27.9252035,29.7902557 27.8736553,29.214702 27.7221905,28.4843746 C27.4726076,27.2809446 27.0236012,26.0653771 26.3229831,24.9093739 C25.0062968,22.7368729 23.0977112,21.5077329 20.895565,20.75279 C20.5542741,20.6357881 20.0112499,20.5027655 19.2779771,20.3482937 C19.0363788,20.2973984 18.7766072,20.244778 18.5011705,20.19076 C17.9408892,20.080879 17.3419896,19.9702276 16.7432846,19.8641464 C16.3841373,19.8005111 16.1043769,19.7524552 15.943361,19.72545 L15.4151028,19.6368516 L15.0486344,20.0275015 C14.9984945,20.0809498 14.8718889,20.1997548 14.6704868,20.362736 C14.3187651,20.6473607 13.8948912,20.9349571 13.4004995,21.2049664 C11.9731542,21.9845033 10.2767208,22.4535392 8.30929574,22.4535392 C6.36783781,22.4535392 4.89295375,21.9998841 3.80387771,21.2566284 C3.18500333,20.8342687 2.83664843,20.4338605 2.71133949,20.2149269 L2.33675493,19.560471 L1.60452116,19.7406369 L0.267297032,20.0696606 L0.745144524,22.0117373 L2.08236865,21.6827136 L0.97555032,21.2084237 C1.24257491,21.674956 1.7887526,22.3027468 2.67647539,22.9085861 C4.09839466,23.8789954 5.96630154,24.4535392 8.30929574,24.4535392 C10.6263228,24.4535392 12.6487329,23.8943762 14.3591372,22.9602481 C15.4007387,22.3913831 16.1174387,21.811406 16.5072724,21.395849 L15.6125458,21.6979006 C15.7678756,21.7239521 16.0417202,21.7709918 16.3943507,21.8334724 C16.9819421,21.9375845 17.5693388,22.0461106 18.1162674,22.153373 C18.3830154,22.205687 18.6337781,22.2564825 18.8657041,22.3053402 C19.5212296,22.4434337 20.0069762,22.5624252 20.2469768,22.6447026 C22.0476451,23.2620103 23.5865836,24.2530955 24.6125941,25.9459883 C25.187214,26.8940975 25.5580035,27.8979132 25.7638628,28.890518 C25.8856633,29.4778116 25.9252035,29.9192913 25.9252035,30.1436872 L26.9252035,29.1436872 L4.29628581,29.1436872 L4.29628581,31.1436872 L26.9252035,31.1436872 Z\" id=\"lr-pearl-Path-2\"></path></g></g></g><g id=\"lr-pearl-Group\" transform=\"translate(1.000000, 24.000000)\"><path d=\"M7.64000034,0.149999619L10.1199999 0.149999619 9.94999981 0.819545746z\"></path><path d=\"M2.68000007,16.6399994L5.15999961 16.6399994 4.98999953 17.3095455z\"></path><path d=\"M8.68000007,16.6399994L11.1599996 16.6399994 10.9899995 17.3095455z\"></path><path d=\"M13.6300001,0.149999619L16.1099997 0.149999619 15.9399996 0.819545746z\"></path><path d=\"M9.94676318,0.809522313L7.63851979 0.152245766 2.84587831 16.9831871 5.15412169 17.6404637z\"></path><path d=\"M15.9467632,0.809522313L13.6385198 0.152245766 8.84587831 16.9831871 11.1541217 17.6404637z\"></path><path d=\"M19,7.2L19 4.8 1 4.8 1 7.2z\"></path><path d=\"M18,13.2L18 10.8 6.15803704e-15 10.8 0 13.2z\"></path></g></g></g></svg>"

/***/ },
/* 72 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 46 46\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-pel</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-pel-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-pel-lr-pel\"><g id=\"lr-pel-PEL\" transform=\"translate(0.000000, 2.000000)\"><g id=\"lr-pel-User-Icon\" transform=\"translate(17.874655, 0.730000)\"><g id=\"lr-pel-PL-Person-Icon\"><path d=\"M2.30492113,11.8652344 C2.30492113,15.2517248 5.05127582,18 8.43606868,18 C11.8163744,18 14.5672162,15.2500688 14.5672162,11.8652344 L14.5672162,8.13476563 C14.5672162,4.74827524 11.8208615,2 8.43606868,2 C5.05576298,2 2.30492113,4.74993124 2.30492113,8.13476563 L2.30492113,11.8652344 Z M8.43606868,0 C12.9267775,0 16.5672162,3.64505265 16.5672162,8.13476563 L16.5672162,11.8652344 C16.5672162,16.3579414 12.9176398,20 8.43606868,20 C3.94535989,20 0.304921135,16.3549474 0.304921135,11.8652344 L0.304921135,8.13476563 C0.304921135,3.64205863 3.95449758,0 8.43606868,0 Z\" id=\"lr-pel-Rectangle-308\"></path><path d=\"M26.9252035,31.1436872 L27.9252034,31.1436872 L27.9252035,30.1436873 C27.9252035,29.7902557 27.8736553,29.214702 27.7221905,28.4843746 C27.4726076,27.2809446 27.0236012,26.0653771 26.3229831,24.9093739 C25.0062968,22.7368729 23.0977112,21.5077329 20.895565,20.75279 C20.5542741,20.6357881 20.0112499,20.5027655 19.2779771,20.3482937 C19.0363788,20.2973984 18.7766072,20.244778 18.5011705,20.19076 C17.9408892,20.080879 17.3419896,19.9702276 16.7432846,19.8641464 C16.3841373,19.8005111 16.1043769,19.7524552 15.943361,19.72545 L15.4151028,19.6368516 L15.0486344,20.0275015 C14.9984945,20.0809498 14.8718889,20.1997548 14.6704868,20.362736 C14.3187651,20.6473607 13.8948912,20.9349571 13.4004995,21.2049664 C11.9731542,21.9845033 10.2767208,22.4535392 8.30929574,22.4535392 C6.36783781,22.4535392 4.89295375,21.9998841 3.80387771,21.2566284 C3.18500333,20.8342687 2.83664843,20.4338605 2.71133949,20.2149269 L2.33675493,19.560471 L1.60452116,19.7406369 L0.267297032,20.0696606 L0.745144524,22.0117373 L2.08236865,21.6827136 L0.97555032,21.2084237 C1.24257491,21.674956 1.7887526,22.3027468 2.67647539,22.9085861 C4.09839466,23.8789954 5.96630154,24.4535392 8.30929574,24.4535392 C10.6263228,24.4535392 12.6487329,23.8943762 14.3591372,22.9602481 C15.4007387,22.3913831 16.1174387,21.811406 16.5072724,21.395849 L15.6125458,21.6979006 C15.7678756,21.7239521 16.0417202,21.7709918 16.3943507,21.8334724 C16.9819421,21.9375845 17.5693388,22.0461106 18.1162674,22.153373 C18.3830154,22.205687 18.6337781,22.2564825 18.8657041,22.3053402 C19.5212296,22.4434337 20.0069762,22.5624252 20.2469768,22.6447026 C22.0476451,23.2620103 23.5865836,24.2530955 24.6125941,25.9459883 C25.187214,26.8940975 25.5580035,27.8979132 25.7638628,28.890518 C25.8856633,29.4778116 25.9252035,29.9192913 25.9252035,30.1436872 L26.9252035,29.1436872 L4.29628581,29.1436872 L4.29628581,31.1436872 L26.9252035,31.1436872 Z\" id=\"lr-pel-Path-2\"></path></g></g><g id=\"lr-pel-Lock\" transform=\"translate(0.617848, 16.230000)\"><path d=\"M5.72527556,11.5149418 L3.72527556,9.51494171 L14.9056034,9.51494171 L12.9056034,11.5149416 L12.9056036,7.48799156 L12.9056037,5.27102541 C12.9056037,3.70061348 11.6250876,2.4199939 10.0505267,2.4199939 L8.58035309,2.4199939 C7.00962154,2.4199939 5.72527585,3.70577617 5.72527579,5.28639965 L5.72527556,11.5149418 Z M8.58035309,0.419993896 L10.0505267,0.419993896 C12.7319118,0.419993896 14.9056038,2.59829889 14.9056037,5.27102548 L14.9056036,7.48799163 L14.9056034,11.5149417 L3.72527556,11.5149417 L3.72527579,5.28639957 C3.7252759,2.59875793 5.90749684,0.419993896 8.58035309,0.419993896 Z\" id=\"lr-pel-Lock-Ring-Mask\"></path><path d=\"M2.70649796,11.5425 L15.9243819,11.5425 C16.2640498,11.5425 16.5357268,11.8128707 16.5357268,12.1479117 L16.5357268,24.3020883 C16.5357268,24.634854 16.2618795,24.9075 15.9243819,24.9075 L2.70649796,24.9075 C2.36683,24.9075 2.09515303,24.6371293 2.09515303,24.3020883 L2.09515303,12.1479117 C2.09515303,11.815146 2.36900035,11.5425 2.70649796,11.5425 Z M0.0701530266,24.3020883 C0.0701530266,25.7576967 1.25063247,26.9325 2.70649796,26.9325 L15.9243819,26.9325 C17.378268,26.9325 18.5607268,25.7552283 18.5607268,24.3020883 L18.5607268,12.1479117 C18.5607268,10.6923033 17.3802474,9.5175 15.9243819,9.5175 L2.70649796,9.5175 C1.2526118,9.5175 0.0701530266,10.6947717 0.0701530266,12.1479117 L0.0701530266,24.3020883 Z\" id=\"lr-pel-LOCKRectangle\"></path><g id=\"lr-pel-Keyhole\" transform=\"translate(6.774456, 14.000000)\"><path d=\"M5.09191532,3.415 C5.09191532,2.07146073 3.98764376,0.985 2.6287186,0.985 C1.26979344,0.985 0.165521879,2.07146073 0.165521879,3.415 C0.165521879,4.75853927 1.26979344,5.845 2.6287186,5.845 C3.98764376,5.845 5.09191532,4.75853927 5.09191532,3.415 Z\" id=\"lr-pel-KHOval-3\"></path><path id=\"lr-pel-KHRectangle-5\" d=\"M1.35769549,7.86999847L1.60769549 4.77 3.60769549 4.77 3.85769549 7.86999847z\" \"></path></g></g></g></g></g></svg>"

/***/ },
/* 73 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-phone</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-phone-large-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-phone-large-lr-phone\"><g id=\"lr-phone-large-phone\" transform=\"translate(4.000000, 4.000000)\"><path d=\"M1.93947049,2.87347868 C1.71570228,3.10735724 1.55332315,3.29203413 1.46182013,3.4034699 C0.650380408,4.2908841 0.109551356,5.91625968 0.282979017,7.10797864 L0.275530262,6.97644368 C0.270265547,7.30130581 0.307521069,7.78185236 0.421768563,8.42486731 C0.599657505,9.42607307 0.924137334,10.5628615 1.42970723,11.8213985 C2.83670905,15.3239088 5.37999043,19.1530061 9.33138124,23.2017274 C13.2358957,27.2024178 17.0731817,29.7697242 20.6985566,31.1774972 C22.0122662,31.6876251 23.2191053,32.0122642 24.3007299,32.1864607 C25.0108678,32.300829 25.5599579,32.3353751 25.9301029,32.325497 C27.0690104,32.4193245 28.665903,31.8714661 29.5555589,31.0584502 C29.58637,31.0318051 29.6603086,30.9662823 29.7547492,30.8809431 C29.9120908,30.7387646 30.0695802,30.592605 30.2176875,30.4497249 C30.2777102,30.3916064 30.2777102,30.3916064 30.337685,30.3325637 C30.4580338,30.2135339 30.5642767,30.1034996 30.654669,30.0032206 C30.7795809,29.8646466 30.9242338,29.6935321 31.0858426,29.4947435 C31.131304,29.4387016 31.131304,29.4387016 31.1764496,29.3826005 C31.3390663,29.1801466 31.5077069,28.9642072 31.6730438,28.7483963 C31.7722367,28.6189219 31.8485795,28.5178747 31.8924225,28.459227 C32.864121,27.1963 32.8012495,25.2336047 31.7320995,24.0378105 C31.6729909,23.9540027 31.4899376,23.7331275 31.2277821,23.4526943 C30.7974134,22.99232 30.2952206,22.5273562 29.7239947,22.0849362 C29.0808164,21.5867883 28.4514998,21.177471 27.8605011,20.8504449 C27.4992363,20.650541 27.2255969,20.52047 27.0637972,20.4539251 C25.711381,19.7621054 23.7734292,20.1280223 22.7270263,21.3058284 L21.6476021,22.5208026 C21.5044033,22.6819838 21.1692333,22.7804649 21.0035711,22.7216031 L20.8824095,22.6785529 L20.7538273,22.6783196 C20.7859277,22.6783778 20.7556364,22.6730564 20.6558344,22.6401032 C20.4229448,22.5632065 20.1078188,22.4156005 19.7054912,22.1771102 C18.4871415,21.4549013 16.8479756,20.1311871 14.7432964,18.0549497 C12.6685209,16.0082119 11.3501922,14.3952562 10.6368002,13.1791309 C10.3993496,12.7743468 10.2532775,12.4535998 10.1781852,12.2126355 C10.1440076,12.1029624 10.1377076,12.0618852 10.1372605,12.0825074 C10.1370767,12.0897965 10.141752,11.9833391 10.141752,11.9833391 L10.1123105,11.8725499 C10.0597293,11.6746855 10.1685639,11.3154504 10.3333484,11.1663318 L11.4593887,10.1473426 C12.6330234,9.08528391 13.0324086,7.13025702 12.3497514,5.71135537 C12.3083842,5.59406979 12.1814716,5.30198432 11.9931664,4.93227737 C11.6815338,4.32043673 11.3058433,3.70866231 10.8627708,3.13417213 C10.8136941,3.07053907 10.7639797,3.00764185 10.7136229,2.94551335 C9.95673722,2.01169329 9.26553705,1.38549864 8.80893106,1.05944925 C7.65756117,0.0749566102 5.67283684,-0.0394481834 4.36736963,0.84739316 L4.78881732,1.46778162 L4.72075675,0.720876168 C4.44176998,0.746298393 4.14723139,0.947368529 3.21541864,1.69804014 C2.7211774,2.10028367 2.30948815,2.4867428 1.93947049,2.87347868 Z M5.03488334,2.19254536 C5.03513357,2.19237454 5.02134244,2.19970051 4.85687789,2.21468708 L5.04992107,2.19709633 L5.21026501,2.08817009 C5.95562492,1.58182571 7.1973166,1.65340012 7.88671145,2.24072001 C8.01563021,2.3361444 8.1745301,2.46309208 8.39296401,2.66098287 C8.76662862,2.99950533 9.15864842,3.40924377 9.54832716,3.89001625 C9.59101803,3.9426868 9.63324083,3.99610589 9.67499184,4.05024046 C10.0566776,4.54513618 10.3846045,5.07913237 10.6565544,5.61306233 C10.8183987,5.93081774 10.9238129,6.17342523 10.9724399,6.30193819 C11.3903116,7.17698055 11.1372208,8.41588312 10.4529151,9.03513267 L9.3268748,10.0541218 C8.74839949,10.5776022 8.46484532,11.5135422 8.66262543,12.2577943 L9.38746796,12.0651721 L8.63818083,12.0324797 C8.62929795,12.4335487 8.82071397,13.0477855 9.34298119,13.9380988 C10.1296967,15.2792194 11.5284916,16.9906242 13.689876,19.1228005 C15.8750889,21.2784834 17.6061408,22.6764005 18.9406121,23.4674435 C19.8131272,23.9846499 20.3977265,24.177676 20.7511059,24.1783171 L20.7524666,23.4283184 L20.5013621,24.1350337 C21.2628011,24.4055822 22.2327877,24.1205767 22.7689694,23.5170633 L23.8483936,22.3020891 C24.4414362,21.6345745 25.6386488,21.4085212 26.4380426,21.8158135 C26.6035,21.8865234 26.8253139,21.9919598 27.1342549,22.1629107 C27.6602657,22.4539761 28.225412,22.821556 28.8055005,23.2708402 C29.3100101,23.6615878 29.7539227,24.0725919 30.1320139,24.4770439 C30.3549344,24.7155066 30.5032805,24.8945034 30.5723896,24.9869055 C31.1999124,25.6930528 31.2370142,26.8512821 30.6972817,27.5528434 C30.6505032,27.6152984 30.5776466,27.7117312 30.4823197,27.8361595 C30.3234569,28.0435199 30.1616165,28.2507518 30.0069902,28.4432578 C29.9644689,28.4960975 29.9644689,28.4960975 29.9219381,28.5485265 C29.7750783,28.729173 29.6458189,28.882078 29.5405084,28.9989068 C29.4714954,29.0754681 29.3843684,29.1657043 29.2828854,29.2660751 C29.2300648,29.3180757 29.2300648,29.3180757 29.176249,29.3701853 C28.944164,29.5940792 28.7096237,29.8060166 28.5563449,29.9398428 C27.9612629,30.4834001 26.7749496,30.8903979 25.999571,30.8272283 L25.8992225,30.8257898 C24.9360018,30.8514926 23.341657,30.5947221 21.241524,29.7792174 C17.8187846,28.45013 14.1616013,26.0033199 10.4048661,22.1540489 C6.58759805,18.242754 4.15372668,14.5783815 2.82159886,11.2622583 C2.35464791,10.0998572 2.05855654,9.06252536 1.89863855,8.16246486 C1.80140434,7.61520514 1.77157167,7.23040354 1.77488516,7.0204998 C1.77491404,7.01913285 1.76734329,6.8919631 1.76734329,6.8919631 C1.66060929,6.15853383 2.05301768,4.97921291 2.59537648,4.38505444 C2.68968232,4.271825 2.82732272,4.11528393 3.02329835,3.91045369 C3.35285375,3.56600824 3.72008128,3.22128603 4.11323725,2.9011413 C4.57944201,2.52537731 4.86540936,2.30823871 5.03488334,2.19254536 Z\" id=\"lr-phone-large-Phone-Icon\"></path></g></g></g></svg>"

/***/ },
/* 74 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-phone</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-phone-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-phone-lr-phone\"><g id=\"lr-phone-phone\" transform=\"translate(4.000000, 4.000000)\"><path d=\"M1.93947049,2.87347868 C1.71570228,3.10735724 1.55332315,3.29203413 1.46182013,3.4034699 C0.650380408,4.2908841 0.109551356,5.91625968 0.282979017,7.10797864 L0.275530262,6.97644368 C0.270265547,7.30130581 0.307521069,7.78185236 0.421768563,8.42486731 C0.599657505,9.42607307 0.924137334,10.5628615 1.42970723,11.8213985 C2.83670905,15.3239088 5.37999043,19.1530061 9.33138124,23.2017274 C13.2358957,27.2024178 17.0731817,29.7697242 20.6985566,31.1774972 C22.0122662,31.6876251 23.2191053,32.0122642 24.3007299,32.1864607 C25.0108678,32.300829 25.5599579,32.3353751 25.9301029,32.325497 C27.0690104,32.4193245 28.665903,31.8714661 29.5555589,31.0584502 C29.58637,31.0318051 29.6603086,30.9662823 29.7547492,30.8809431 C29.9120908,30.7387646 30.0695802,30.592605 30.2176875,30.4497249 C30.2777102,30.3916064 30.2777102,30.3916064 30.337685,30.3325637 C30.4580338,30.2135339 30.5642767,30.1034996 30.654669,30.0032206 C30.7795809,29.8646466 30.9242338,29.6935321 31.0858426,29.4947435 C31.131304,29.4387016 31.131304,29.4387016 31.1764496,29.3826005 C31.3390663,29.1801466 31.5077069,28.9642072 31.6730438,28.7483963 C31.7722367,28.6189219 31.8485795,28.5178747 31.8924225,28.459227 C32.864121,27.1963 32.8012495,25.2336047 31.7320995,24.0378105 C31.6729909,23.9540027 31.4899376,23.7331275 31.2277821,23.4526943 C30.7974134,22.99232 30.2952206,22.5273562 29.7239947,22.0849362 C29.0808164,21.5867883 28.4514998,21.177471 27.8605011,20.8504449 C27.4992363,20.650541 27.2255969,20.52047 27.0637972,20.4539251 C25.711381,19.7621054 23.7734292,20.1280223 22.7270263,21.3058284 L21.6476021,22.5208026 C21.5044033,22.6819838 21.1692333,22.7804649 21.0035711,22.7216031 L20.8824095,22.6785529 L20.7538273,22.6783196 C20.7859277,22.6783778 20.7556364,22.6730564 20.6558344,22.6401032 C20.4229448,22.5632065 20.1078188,22.4156005 19.7054912,22.1771102 C18.4871415,21.4549013 16.8479756,20.1311871 14.7432964,18.0549497 C12.6685209,16.0082119 11.3501922,14.3952562 10.6368002,13.1791309 C10.3993496,12.7743468 10.2532775,12.4535998 10.1781852,12.2126355 C10.1440076,12.1029624 10.1377076,12.0618852 10.1372605,12.0825074 C10.1370767,12.0897965 10.141752,11.9833391 10.141752,11.9833391 L10.1123105,11.8725499 C10.0597293,11.6746855 10.1685639,11.3154504 10.3333484,11.1663318 L11.4593887,10.1473426 C12.6330234,9.08528391 13.0324086,7.13025702 12.3497514,5.71135537 C12.3083842,5.59406979 12.1814716,5.30198432 11.9931664,4.93227737 C11.6815338,4.32043673 11.3058433,3.70866231 10.8627708,3.13417213 C10.8136941,3.07053907 10.7639797,3.00764185 10.7136229,2.94551335 C9.95673722,2.01169329 9.26553705,1.38549864 8.80893106,1.05944925 C7.65756117,0.0749566102 5.67283684,-0.0394481834 4.36736963,0.84739316 L4.78881732,1.46778162 L4.72075675,0.720876168 C4.44176998,0.746298393 4.14723139,0.947368529 3.21541864,1.69804014 C2.7211774,2.10028367 2.30948815,2.4867428 1.93947049,2.87347868 Z M5.03488334,2.19254536 C5.03513357,2.19237454 5.02134244,2.19970051 4.85687789,2.21468708 L5.04992107,2.19709633 L5.21026501,2.08817009 C5.95562492,1.58182571 7.1973166,1.65340012 7.88671145,2.24072001 C8.01563021,2.3361444 8.1745301,2.46309208 8.39296401,2.66098287 C8.76662862,2.99950533 9.15864842,3.40924377 9.54832716,3.89001625 C9.59101803,3.9426868 9.63324083,3.99610589 9.67499184,4.05024046 C10.0566776,4.54513618 10.3846045,5.07913237 10.6565544,5.61306233 C10.8183987,5.93081774 10.9238129,6.17342523 10.9724399,6.30193819 C11.3903116,7.17698055 11.1372208,8.41588312 10.4529151,9.03513267 L9.3268748,10.0541218 C8.74839949,10.5776022 8.46484532,11.5135422 8.66262543,12.2577943 L9.38746796,12.0651721 L8.63818083,12.0324797 C8.62929795,12.4335487 8.82071397,13.0477855 9.34298119,13.9380988 C10.1296967,15.2792194 11.5284916,16.9906242 13.689876,19.1228005 C15.8750889,21.2784834 17.6061408,22.6764005 18.9406121,23.4674435 C19.8131272,23.9846499 20.3977265,24.177676 20.7511059,24.1783171 L20.7524666,23.4283184 L20.5013621,24.1350337 C21.2628011,24.4055822 22.2327877,24.1205767 22.7689694,23.5170633 L23.8483936,22.3020891 C24.4414362,21.6345745 25.6386488,21.4085212 26.4380426,21.8158135 C26.6035,21.8865234 26.8253139,21.9919598 27.1342549,22.1629107 C27.6602657,22.4539761 28.225412,22.821556 28.8055005,23.2708402 C29.3100101,23.6615878 29.7539227,24.0725919 30.1320139,24.4770439 C30.3549344,24.7155066 30.5032805,24.8945034 30.5723896,24.9869055 C31.1999124,25.6930528 31.2370142,26.8512821 30.6972817,27.5528434 C30.6505032,27.6152984 30.5776466,27.7117312 30.4823197,27.8361595 C30.3234569,28.0435199 30.1616165,28.2507518 30.0069902,28.4432578 C29.9644689,28.4960975 29.9644689,28.4960975 29.9219381,28.5485265 C29.7750783,28.729173 29.6458189,28.882078 29.5405084,28.9989068 C29.4714954,29.0754681 29.3843684,29.1657043 29.2828854,29.2660751 C29.2300648,29.3180757 29.2300648,29.3180757 29.176249,29.3701853 C28.944164,29.5940792 28.7096237,29.8060166 28.5563449,29.9398428 C27.9612629,30.4834001 26.7749496,30.8903979 25.999571,30.8272283 L25.8992225,30.8257898 C24.9360018,30.8514926 23.341657,30.5947221 21.241524,29.7792174 C17.8187846,28.45013 14.1616013,26.0033199 10.4048661,22.1540489 C6.58759805,18.242754 4.15372668,14.5783815 2.82159886,11.2622583 C2.35464791,10.0998572 2.05855654,9.06252536 1.89863855,8.16246486 C1.80140434,7.61520514 1.77157167,7.23040354 1.77488516,7.0204998 C1.77491404,7.01913285 1.76734329,6.8919631 1.76734329,6.8919631 C1.66060929,6.15853383 2.05301768,4.97921291 2.59537648,4.38505444 C2.68968232,4.271825 2.82732272,4.11528393 3.02329835,3.91045369 C3.35285375,3.56600824 3.72008128,3.22128603 4.11323725,2.9011413 C4.57944201,2.52537731 4.86540936,2.30823871 5.03488334,2.19254536 Z\" id=\"lr-phone-Phone-Icon\"></path></g></g></g></svg>"

/***/ },
/* 75 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 150 150\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-platinum</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-platinum-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"lr-platinum-lr-platinum\"><g id=\"lr-platinum-Platinum-Badge\" transform=\"translate(-0.186156, 11.000000)\"><g id=\"lr-platinum-Badge\" transform=\"translate(14.000000, 0.000000)\"><circle id=\"lr-platinum-Oval-6\" stroke=\"#E5E4E2\" stroke-width=\"4.16043844\" cx=\"64.5\" cy=\"64.3352517\" r=\"52\"></circle><circle id=\"lr-platinum-Oval-6-Copy\" stroke=\"#CFCFCF\" stroke-width=\"2\" cx=\"64.5\" cy=\"64.3352517\" r=\"47\"></circle><circle id=\"lr-platinum-Oval-6-Copy-2\" stroke=\"#E5E4E2\" stroke-width=\"1.80851064\" fill=\"#FFFFFF\" cx=\"64.5\" cy=\"64.3352517\" r=\"42.5\"></circle><path d=\"M64.5,0.516127314 L70,7.51612731 L59,7.51612731 L64.5,0.516127314 L64.5,0.516127314 Z M77.403005,1.83071914 L81.3274349,9.82126664 L70.5678113,7.53423804 L77.403005,1.83071914 L77.403005,1.83071914 Z M89.7197283,5.69610573 L92.0473871,14.2886609 L81.9218337,9.9906185 L89.7197283,5.69610573 L89.7197283,5.69610573 Z M101.060032,11.9900164 L101.550333,20.8787511 L92.5396602,14.5694103 L101.060032,11.9900164 L101.060032,11.9900164 Z M110.855964,20.3973083 L109.641206,29.2162858 L101.999964,21.303548 L110.855964,20.3973083 L110.855964,20.3973083 Z M118.79746,30.6514907 L115.775679,39.0251901 L109.946567,29.696661 L118.79746,30.6514907 L118.79746,30.6514907 Z M124.507805,42.2965628 L119.811067,49.8590132 L116.048846,39.5223944 L124.507805,42.2965628 L124.507805,42.2965628 Z M127.743301,54.793541 L121.689873,61.3208681 L119.969094,50.4562963 L127.743301,54.793541 L127.743301,54.793541 Z M128.401445,67.7466337 L121.123191,72.8727445 L121.698886,61.8878196 L128.401445,67.7466337 L128.401445,67.7466337 Z M126.433794,80.5663025 L118.248808,84.0671612 L121.095818,73.4419771 L126.433794,80.5663025 L126.433794,80.5663025 Z M121.948475,92.6710428 L113.245875,94.545812 L118.067958,84.6590775 L121.948475,92.6710428 L121.948475,92.6710428 Z M115.087217,103.677355 L106.185003,103.701784 L112.957279,95.033666 L115.087217,103.677355 L115.087217,103.677355 Z M106.193737,113.034113 L97.450421,111.359471 L105.752226,104.142822 L106.193737,113.034113 L106.193737,113.034113 Z M95.5497758,120.445038 L87.3457001,116.989153 L96.9665168,111.656248 L95.5497758,120.445038 L95.5497758,120.445038 Z M83.629942,125.557104 L76.3236639,120.471015 L86.8430162,117.254926 L83.629942,125.557104 L83.629942,125.557104 Z M70.9849015,128.154376 L64.7833319,121.767629 L75.7230727,120.617816 L70.9849015,128.154376 L70.9849015,128.154376 Z M58.0150985,128.154376 L53.2769273,120.617816 L64.2166681,121.767629 L58.0150985,128.154376 L58.0150985,128.154376 Z M45.370058,125.557104 L42.1569838,117.254926 L52.6763361,120.471015 L45.370058,125.557104 L45.370058,125.557104 Z M33.4502242,120.445038 L32.0334832,111.656248 L41.6542999,116.989153 L33.4502242,120.445038 L33.4502242,120.445038 Z M22.8062631,113.034113 L23.2477736,104.142822 L31.549579,111.359471 L22.8062631,113.034113 L22.8062631,113.034113 Z M13.9127834,103.677355 L16.0427205,95.033666 L22.8149968,103.701784 L13.9127834,103.677355 L13.9127834,103.677355 Z M7.05152537,92.6710428 L10.9320424,84.6590775 L15.754125,94.545812 L7.05152537,92.6710428 L7.05152537,92.6710428 Z M2.5662064,80.5663025 L7.90418244,73.4419771 L10.7511919,84.0671612 L2.5662064,80.5663025 L2.5662064,80.5663025 Z M0.598554559,67.7466337 L7.30111354,61.8878196 L7.87680906,72.8727445 L0.598554559,67.7466337 L0.598554559,67.7466337 Z M1.25669852,54.793541 L9.03090647,50.4562963 L7.31012735,61.3208681 L1.25669852,54.793541 L1.25669852,54.793541 Z M4.49219526,42.2965628 L12.9511544,39.5223944 L9.18893281,49.8590132 L4.49219526,42.2965628 L4.49219526,42.2965628 Z M10.2025404,30.6514907 L19.0534331,29.696661 L13.2243212,39.0251901 L10.2025404,30.6514907 L10.2025404,30.6514907 Z M18.144036,20.3973083 L27.0000357,21.303548 L19.3587936,29.2162858 L18.144036,20.3973083 L18.144036,20.3973083 Z M27.9399685,11.9900164 L36.4603398,14.5694103 L27.4496673,20.8787511 L27.9399685,11.9900164 L27.9399685,11.9900164 Z M39.2802717,5.69610573 L47.0781663,9.9906185 L36.9526129,14.2886609 L39.2802717,5.69610573 L39.2802717,5.69610573 Z M51.596995,1.83071914 L58.4321887,7.53423804 L47.6725651,9.82126664 L51.596995,1.83071914 L51.596995,1.83071914 Z\" id=\"lr-platinum-Triangle-2\" fill=\"#C0C0C0\"></path></g><g id=\"lr-platinum-Platinum\" transform=\"translate(0.000000, 54.000000)\" font-size=\"36\" font-family=\"Flexo-Bold, Flexo\" fill=\"#848482\" font-weight=\"bold\"><text><tspan x=\"0.16732659\" y=\"28.0956902\">Platinum</tspan></text></g><g id=\"lr-platinum-Partner\" transform=\"translate(56.000000, 87.000000)\" font-size=\"12\" font-family=\"Flexo-Bold, Flexo\" fill=\"#848482\" font-weight=\"bold\"><text><tspan x=\"0.4977047\" y=\"9.0956902\">Partner</tspan></text></g><g id=\"lr-platinum-LiveRamp-Platinum-Logo\" opacity=\"0.425489739\" transform=\"translate(62.350000, 26.200112)\"><path d=\"M8.38743866,15.7968939 L23.9481115,0.205787801 L23.9481115,10.9541281 C23.9481115,10.9541281 19.7159616,13.2630834 16.0436029,14.3869513 C12.3712442,15.5108192 8.5572587,16.0625352 8.5572587,16.0625352 L8.38743866,15.7968939 L8.38743866,15.7968939 Z\" id=\"lr-platinum-Path-44\" stroke=\"#C0C0C0\" fill=\"#C0C0C0\"></path><path d=\"M8.72260106,17.2094707 C8.72260106,17.2094707 11.9525825,16.8293111 16.3118903,15.6291238 C20.6711981,14.4289366 23.9214942,12.3666238 23.9214942,12.3666238 L23.9214942,21.9297138 C23.9214942,21.9297138 17.9240332,20.6212963 15.4280048,19.9041238 C12.8509637,19.1636743 8.70228567,17.5568479 8.70228567,17.5568479 L8.72260106,17.2094707 L8.72260106,17.2094707 Z\" id=\"lr-platinum-Path-45\" stroke=\"#91A3B0\" fill=\"#91A3B0\"></path><path d=\"M7.72242077,22.2362232 C7.49064572,21.4388337 7.08559562,19.5593752 7.08559562,19.5593752 C7.08559562,19.5593752 7.5048103,19.3285527 7.72242077,19.1506962 C7.87982955,19.0220434 8.21065335,18.6398474 8.21065335,18.6398474 C8.21065335,18.6398474 12.4485972,20.4259608 15.0459096,21.1736575 C17.6776391,21.931262 23.8977791,23.155751 23.8977791,23.155751 L23.8977791,24.0142202 L8.38047338,24.0142202 C8.38047338,24.0142202 7.92227165,22.923782 7.72242077,22.2362232 L7.72242077,22.2362232 Z\" id=\"lr-platinum-Path-46\" stroke=\"#848482\" fill=\"#848482\"></path><path d=\"M5.93931033,22.214911 C6.12548011,22.9179663 6.57613551,23.993543 6.57613551,23.993543 L0.186656669,23.993543 L4.6232051,19.5185073 C4.6232051,19.5185073 4.86581683,19.660895 5.01343709,19.7141831 C5.14885022,19.7630647 5.47230528,19.8250166 5.47230528,19.8250166 C5.47230528,19.8250166 5.7575367,21.5284575 5.93931033,22.214911 L5.93931033,22.214911 Z\" id=\"lr-platinum-Path-47\" stroke=\"#536878\" fill=\"#536878\"></path></g></g></g></g></svg>"

/***/ },
/* 76 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>plus</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-plus-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-plus-plus\" fill=\"#70C262\"><g transform=\"translate(1.000000, 1.000000)\" id=\"lr-plus-Line\"><path d=\"M20,12.5 C20.8284271,12.5 21.5,11.8284271 21.5,11 C21.5,10.1715729 20.8284271,9.5 20,9.5 L2,9.5 C1.17157288,9.5 0.5,10.1715729 0.5,11 C0.5,11.8284271 1.17157288,12.5 2,12.5 L20,12.5 Z\"></path><path d=\"M9.5,20 C9.5,20.8284271 10.1715729,21.5 11,21.5 C11.8284271,21.5 12.5,20.8284271 12.5,20 L12.5,2 C12.5,1.17157288 11.8284271,0.5 11,0.5 C10.1715729,0.5 9.5,1.17157288 9.5,2 L9.5,20 Z\"></path></g></g></g></svg>"

/***/ },
/* 77 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-postal</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-postal-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-postal-lr-postal\"><g id=\"lr-postal-postal\" transform=\"translate(2.000000, 1.000000)\"><path d=\"M1.82863551,27.5368401 C1.82863551,28.0708091 2.26004117,28.5 2.79902871,28.5 L33.6296709,28.5 C34.1603866,28.5 34.6000641,28.063247 34.6000641,27.5368401 L34.6000641,17.4069065 C34.6000641,13.6217988 31.527831,10.5555556 27.7360657,10.5555556 L8.69263389,10.5555556 C4.89884877,10.5555556 1.82863551,13.621432 1.82863551,17.4069065 L1.82863551,27.5368401 Z M8.69263389,8.97222222 L27.7360657,8.97222222 C32.4027131,8.97222222 36.1857784,12.7464658 36.1857784,17.4069065 L36.1857784,27.5368401 C36.1857784,28.9432295 35.0306038,30.0833333 33.6296709,30.0833333 L2.79902871,30.0833333 C1.38732953,30.0833333 0.242921223,28.9483083 0.242921223,27.5368401 L0.242921223,17.4069065 C0.242921223,12.748559 4.02150281,8.97222222 8.69263389,8.97222222 Z\" id=\"lr-postal-Mailbox-1\"></path><path d=\"M20.6142857,27.5368401 C20.6142857,28.0715823 21.0439784,28.5 21.5791245,28.5 L33.3923041,28.5 C33.9284757,28.5 34.3571429,28.0713345 34.3571429,27.5368401 L34.3571429,17.4069065 C34.3571429,13.6221106 31.2818955,10.5555556 27.4857143,10.5555556 C23.6962655,10.5555556 20.6142857,13.6269667 20.6142857,17.4069065 L20.6142857,27.5368401 Z M27.4857143,8.97222222 C32.1564653,8.97222222 35.9428571,12.7464658 35.9428571,17.4069065 L35.9428571,27.5368401 C35.9428571,28.9432295 34.806799,30.0833333 33.3923041,30.0833333 L21.5791245,30.0833333 C20.1704929,30.0833333 19.0285714,28.9483083 19.0285714,27.5368401 L19.0285714,17.4069065 C19.0285714,12.748559 22.8244673,8.97222222 27.4857143,8.97222222 Z\" id=\"lr-postal-Mailbox-2\"></path><g id=\"lr-postal-Flag\" transform=\"translate(5.885330, 0.888985)\"><path d=\"M4.89457143,1.84722222 L4.10171429,1.05555556 L4.10171429,15.7575912 C4.10171429,16.1948166 4.45668852,16.5492579 4.89457143,16.5492579 C5.33245434,16.5492579 5.68742857,16.1948166 5.68742857,15.7575912 L5.68742857,1.05555556 L5.68742857,0.263888889 L4.89457143,0.263888889 L1.05714286,0.263888889 C0.619259948,0.263888889 0.264285714,0.618330129 0.264285714,1.05555556 C0.264285714,1.49278098 0.619259948,1.84722222 1.05714286,1.84722222 L4.89457143,1.84722222 Z\" id=\"lr-postal-Path-3-Copy\"></path><path d=\"M7.45285714,18.2980556 C7.45285714,16.8872748 6.30747361,15.7436111 4.89457143,15.7436111 C3.48166924,15.7436111 2.33628571,16.8872748 2.33628571,18.2980556 C2.33628571,19.7088363 3.48166924,20.8525 4.89457143,20.8525 C6.30747361,20.8525 7.45285714,19.7088363 7.45285714,18.2980556 Z M3.61542857,18.2980556 C3.61542857,17.5926652 4.18812034,17.0208333 4.89457143,17.0208333 C5.60102252,17.0208333 6.17371429,17.5926652 6.17371429,18.2980556 C6.17371429,19.0034459 5.60102252,19.5752778 4.89457143,19.5752778 C4.18812034,19.5752778 3.61542857,19.0034459 3.61542857,18.2980556 Z\" id=\"lr-postal-Oval-3\"></path></g><path d=\"M15.8571429,36.4166667 C15.8571429,36.9996339 16.3304418,37.4722222 16.9142857,37.4722222 C17.4981296,37.4722222 17.9714286,36.9996339 17.9714286,36.4166667 L17.9714286,30.0833333 C17.9714286,29.5003661 17.4981296,29.0277778 16.9142857,29.0277778 C16.3304418,29.0277778 15.8571429,29.5003661 15.8571429,30.0833333 L15.8571429,36.4166667 Z\" id=\"lr-postal-Line\"></path><g id=\"lr-postal-Letter\" transform=\"translate(19.028571, 13.489999)\"><path d=\"M9.92998104,11.5319538 C10.4597691,11.5313922 10.900151,11.0917022 10.900151,10.5586257 L10.900151,2.89430883 C10.900151,2.35282713 10.4714953,1.92582596 9.93334839,1.9263965 L2.33898723,1.93444792 C2.05044608,1.93475383 1.8162519,2.16960084 1.8162519,2.46242177 L1.8162519,13.1238901 L0.230537618,11.5439182 L9.92998104,11.5319538 Z M2.33730356,0.351115479 L9.93166472,0.343064056 C11.3423108,0.341568511 12.4858653,1.47380565 12.4858653,2.89430883 L12.4858653,10.5586257 C12.4858653,11.9691348 11.3329138,13.1138007 9.93166472,13.1152863 L0.230537618,13.1255713 L0.230537618,2.46242177 C0.230537618,1.29761307 1.17184325,0.352351082 2.33730356,0.351115479 Z\" id=\"lr-postal-Rectangle-10\"></path><path d=\"M2.53989527,8.52466607 L2.99114713,8.83984919 L3.44448827,8.52766957 L10.6139085,3.59066592 C12.4179506,2.34836701 11.8911591,0.698181663 9.70531353,0.698181624 L2.14817707,0.698181488 C1.12943913,0.69818147 0.304389076,1.52012065 0.304389076,2.53850052 L0.304389076,6.55089597 L0.304389076,6.96324572 L0.642784345,7.19960259 L2.53989527,8.52466607 Z M1.89010336,6.55089597 L1.89010336,2.53850052 C1.89010336,2.39537888 2.00439838,2.28151482 2.14817704,2.28151482 L9.7053135,2.28151496 C9.96509356,2.28151496 10.1562124,2.3081728 10.2615058,2.34680793 C10.2503887,2.34272875 10.1858655,2.28742713 10.1434977,2.15470907 C10.1004099,2.01973579 10.1223563,1.93339387 10.1312348,1.92073636 C10.0681063,2.01073419 9.92709459,2.14026092 9.7136462,2.28724567 L2.54422601,7.22424933 L3.44881902,7.22725283 L1.55170809,5.90218936 L1.89010336,6.55089597 Z\" id=\"lr-postal-Triangle-2\"></path></g></g></g></g></svg>"

/***/ },
/* 78 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 11 17\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Price Icon Green</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-price-green-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2589.000000, -673.000000)\" id=\"lr-price-green-Group-8-Copy\" fill=\"#6CC457\"><g transform=\"translate(2580.027884, 603.738353)\"><g id=\"lr-price-green-Price-Icon-Green\" transform=\"translate(8.590909, 69.262615)\"><path d=\"M3.12835558,10.7476164 L0.565744668,10.7476164 C0.686908911,12.1773544 1.12915176,13.2617581 1.89248649,14.00086 C2.65582121,14.7399619 3.71599243,15.1579722 5.07303194,15.2549036 L5.07303194,16.79974 L6.14533012,16.79974 L6.14533012,15.2549036 C7.05406194,15.1943215 7.79921085,15.0125779 8.38079921,14.7096673 C8.96238758,14.4067567 9.42583385,14.0614438 9.77115194,13.6737182 C10.11647,13.2859926 10.3557658,12.8891857 10.4890465,12.4832855 C10.6223272,12.0773852 10.6889665,11.7411595 10.6889665,11.4745982 C10.6889665,11.1716876 10.6677631,10.8263747 10.6253556,10.4386491 C10.5829481,10.0509235 10.4466404,9.66320376 10.2164283,9.27547818 C9.98621624,8.88775261 9.62878709,8.51517815 9.14413012,8.15774364 C8.65947315,7.80030912 7.96884733,7.50043212 7.07223194,7.25810364 C6.902602,7.20963794 6.74206179,7.16723109 6.59060649,7.13088182 C6.43915118,7.09453255 6.29072721,7.05818382 6.14533012,7.02183455 L6.14533012,3.80494 C6.55728855,3.80494 6.90865958,3.97456739 7.19945376,4.31382727 C7.49024794,4.65308715 7.64170097,5.06503939 7.6538174,5.54969636 L10.2346029,5.54969636 C10.1982536,4.9196423 10.0649749,4.37441139 9.83476285,3.91398727 C9.60455079,3.45356315 9.30770285,3.06887245 8.94421012,2.75990364 C8.5807174,2.45093482 8.15967797,2.20860997 7.68107921,2.03292182 C7.20248046,1.85723367 6.69056921,1.7391003 6.14533012,1.67851818 L6.14533012,0.279078182 L5.07303194,0.279078182 L5.07303194,1.67851818 C4.52779285,1.71486745 4.0007363,1.82088458 3.49184649,1.99657273 C2.98295667,2.17226088 2.5346557,2.42064385 2.14693012,2.74172909 C1.75920455,3.06281433 1.4472113,3.45962127 1.21094103,3.93216182 C0.97467076,4.40470236 0.856537396,4.94993327 0.856537396,5.56787091 C0.856537396,6.17369212 0.959525457,6.67954524 1.16550467,7.08544545 C1.37148388,7.49134567 1.6471284,7.83060046 1.99244649,8.10322 C2.33776458,8.37583954 2.7285134,8.59393191 3.16470467,8.75750364 C3.60089594,8.92107536 4.04313879,9.06344121 4.49144649,9.18460545 C4.61261073,9.2088383 4.72468597,9.23609985 4.82767558,9.26639091 C4.93066518,9.29668197 5.01244982,9.32394352 5.07303194,9.34817636 L5.07303194,13.1466564 C4.51567643,13.0376085 4.04920109,12.7831675 3.67359194,12.3833255 C3.29798279,11.9834835 3.11623915,11.4382525 3.12835558,10.7476164 L3.12835558,10.7476164 Z M6.14533012,13.1466564 L6.14533012,9.65714364 C6.86019915,9.85100642 7.36605228,10.0660697 7.66290467,10.30234 C7.95975706,10.5386103 8.10818103,10.8930104 8.10818103,11.3655509 C8.10818103,11.6563451 8.04759982,11.9077571 7.92643558,12.1197945 C7.80527134,12.331832 7.65078924,12.5105465 7.46298467,12.6559436 C7.27518009,12.8013407 7.06314585,12.913416 6.82687558,12.9921727 C6.59060531,13.0709295 6.36342576,13.1224235 6.14533012,13.1466564 L6.14533012,13.1466564 Z M5.07303194,3.80494 L5.07303194,6.76739091 C4.49144358,6.63411024 4.07343321,6.45842473 3.8189883,6.24032909 C3.5645434,6.02223345 3.43732285,5.71326927 3.43732285,5.31342727 C3.43732285,5.05898236 3.48275876,4.83786094 3.57363194,4.65005636 C3.66450512,4.46225179 3.78869661,4.30474064 3.94621012,4.17751818 C4.10372364,4.05029573 4.27940915,3.95639485 4.47327194,3.89581273 C4.66713473,3.83523061 4.86705273,3.80494 5.07303194,3.80494 L5.07303194,3.80494 Z\" id=\"lr-price-green-$\"></path></g></g></g></g></svg>"

/***/ },
/* 79 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 11 17\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Price Icon White</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-price-white-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2527.000000, -673.000000)\" id=\"lr-price-white-White-Group\" fill=\"#FFFFFF\"><g transform=\"translate(2518.000000, 603.738353)\"><g id=\"lr-price-white-Price-Icon-White\" transform=\"translate(8.590909, 69.262615)\"><path d=\"M3.12835558,10.7476164 L0.565744668,10.7476164 C0.686908911,12.1773544 1.12915176,13.2617581 1.89248649,14.00086 C2.65582121,14.7399619 3.71599243,15.1579722 5.07303194,15.2549036 L5.07303194,16.79974 L6.14533012,16.79974 L6.14533012,15.2549036 C7.05406194,15.1943215 7.79921085,15.0125779 8.38079921,14.7096673 C8.96238758,14.4067567 9.42583385,14.0614438 9.77115194,13.6737182 C10.11647,13.2859926 10.3557658,12.8891857 10.4890465,12.4832855 C10.6223272,12.0773852 10.6889665,11.7411595 10.6889665,11.4745982 C10.6889665,11.1716876 10.6677631,10.8263747 10.6253556,10.4386491 C10.5829481,10.0509235 10.4466404,9.66320376 10.2164283,9.27547818 C9.98621624,8.88775261 9.62878709,8.51517815 9.14413012,8.15774364 C8.65947315,7.80030912 7.96884733,7.50043212 7.07223194,7.25810364 C6.902602,7.20963794 6.74206179,7.16723109 6.59060649,7.13088182 C6.43915118,7.09453255 6.29072721,7.05818382 6.14533012,7.02183455 L6.14533012,3.80494 C6.55728855,3.80494 6.90865958,3.97456739 7.19945376,4.31382727 C7.49024794,4.65308715 7.64170097,5.06503939 7.6538174,5.54969636 L10.2346029,5.54969636 C10.1982536,4.9196423 10.0649749,4.37441139 9.83476285,3.91398727 C9.60455079,3.45356315 9.30770285,3.06887245 8.94421012,2.75990364 C8.5807174,2.45093482 8.15967797,2.20860997 7.68107921,2.03292182 C7.20248046,1.85723367 6.69056921,1.7391003 6.14533012,1.67851818 L6.14533012,0.279078182 L5.07303194,0.279078182 L5.07303194,1.67851818 C4.52779285,1.71486745 4.0007363,1.82088458 3.49184649,1.99657273 C2.98295667,2.17226088 2.5346557,2.42064385 2.14693012,2.74172909 C1.75920455,3.06281433 1.4472113,3.45962127 1.21094103,3.93216182 C0.97467076,4.40470236 0.856537396,4.94993327 0.856537396,5.56787091 C0.856537396,6.17369212 0.959525457,6.67954524 1.16550467,7.08544545 C1.37148388,7.49134567 1.6471284,7.83060046 1.99244649,8.10322 C2.33776458,8.37583954 2.7285134,8.59393191 3.16470467,8.75750364 C3.60089594,8.92107536 4.04313879,9.06344121 4.49144649,9.18460545 C4.61261073,9.2088383 4.72468597,9.23609985 4.82767558,9.26639091 C4.93066518,9.29668197 5.01244982,9.32394352 5.07303194,9.34817636 L5.07303194,13.1466564 C4.51567643,13.0376085 4.04920109,12.7831675 3.67359194,12.3833255 C3.29798279,11.9834835 3.11623915,11.4382525 3.12835558,10.7476164 L3.12835558,10.7476164 Z M6.14533012,13.1466564 L6.14533012,9.65714364 C6.86019915,9.85100642 7.36605228,10.0660697 7.66290467,10.30234 C7.95975706,10.5386103 8.10818103,10.8930104 8.10818103,11.3655509 C8.10818103,11.6563451 8.04759982,11.9077571 7.92643558,12.1197945 C7.80527134,12.331832 7.65078924,12.5105465 7.46298467,12.6559436 C7.27518009,12.8013407 7.06314585,12.913416 6.82687558,12.9921727 C6.59060531,13.0709295 6.36342576,13.1224235 6.14533012,13.1466564 L6.14533012,13.1466564 Z M5.07303194,3.80494 L5.07303194,6.76739091 C4.49144358,6.63411024 4.07343321,6.45842473 3.8189883,6.24032909 C3.5645434,6.02223345 3.43732285,5.71326927 3.43732285,5.31342727 C3.43732285,5.05898236 3.48275876,4.83786094 3.57363194,4.65005636 C3.66450512,4.46225179 3.78869661,4.30474064 3.94621012,4.17751818 C4.10372364,4.05029573 4.27940915,3.95639485 4.47327194,3.89581273 C4.66713473,3.83523061 4.86705273,3.80494 5.07303194,3.80494 L5.07303194,3.80494 Z\" id=\"lr-price-white-$\"></path></g></g></g></g></svg>"

/***/ },
/* 80 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 80 80\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-reports</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-reports-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-reports-lr-reports\"><g id=\"lr-reports-Reports-Icon\" transform=\"translate(5.000000, 1.000000)\"><path d=\"M12,68.0036926 C12,67.4448543 11.5525695,67 11.0085302,67 L18.9914698,67 C18.4468325,67 18,67.4437012 18,68.0036926 L18,11.9963074 C18,12.5551457 18.4474305,13 18.9914698,13 L11.0085302,13 C11.5531675,13 12,12.5562988 12,11.9963074 L12,68.0036926 Z M11.0085302,10 L18.9914698,10 C20.1007504,10 21,10.8947304 21,11.9963074 L21,68.0036926 C21,69.1062227 20.0980496,70 18.9914698,70 L11.0085302,70 C9.8992496,70 9,69.1052696 9,68.0036926 L9,11.9963074 C9,10.8937773 9.90195036,10 11.0085302,10 Z\" id=\"lr-reports-Rectangle-5\"></path><path d=\"M30,68.0027084 C30,67.4462746 29.5507982,67 29.0085302,67 L36.9914698,67 C36.446504,67 36,67.4435936 36,68.0027084 L36,31.9972916 C36,32.5537254 36.4492018,33 36.9914698,33 L29.0085302,33 C29.553496,33 30,32.5564064 30,31.9972916 L30,68.0027084 Z M29.0085302,30 L36.9914698,30 C38.1007504,30 39,30.8915398 39,31.9972916 L39,68.0027084 C39,69.1057821 38.0980496,70 36.9914698,70 L29.0085302,70 C27.8992496,70 27,69.1084602 27,68.0027084 L27,31.9972916 C27,30.8942179 27.9019504,30 29.0085302,30 Z\" id=\"lr-reports-Rectangle-5-Copy\"></path><path d=\"M48,68.008383 C48,67.4431741 47.5540157,67 47.0085302,67 L54.9914698,67 C54.4483978,67 54,67.4442094 54,68.008383 L54,41.991617 C54,42.5568259 54.4459843,43 54.9914698,43 L47.0085302,43 C47.5516022,43 48,42.5557906 48,41.991617 L48,68.008383 Z M47.0085302,40 L54.9914698,40 C56.1007504,40 57,40.8978404 57,41.991617 L57,68.008383 C57,69.1083227 56.0980496,70 54.9914698,70 L47.0085302,70 C45.8992496,70 45,69.1021596 45,68.008383 L45,41.991617 C45,40.8916773 45.9019504,40 47.0085302,40 Z\" id=\"lr-reports-Rectangle-5-Copy-2\"></path><path d=\"M0.335313884,74.069534 C0.335313884,76.0006283 1.91153689,77.5662845 3.84075925,77.5662845 L69.4573009,77.5662845 C70.285728,77.5662845 70.9573009,76.8947116 70.9573009,76.0662845 C70.9573009,75.2378574 70.285728,74.5662845 69.4573009,74.5662845 L3.84075925,74.5662845 C3.56389072,74.5662845 3.33531388,74.33924 3.33531388,74.069534 L3.33531388,2.12987436 C3.33531388,1.30144724 2.66374101,0.629874361 1.83531388,0.629874361 C1.00688676,0.629874361 0.335313884,1.30144724 0.335313884,2.12987436 L0.335313884,74.069534 Z\" id=\"lr-reports-Path-4\"></path></g></g></g></svg>"

/***/ },
/* 81 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 12 17\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Restricted Use Icon Green</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-restricted-use-green-path-1\" x=\"2.03795731\" y=\"0.603437144\" width=\"6.8\" height=\"8.84\" rx=\"2.72\"></rect><mask id=\"lr-restricted-use-green-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"6.8\" height=\"8.84\" fill=\"white\"><use xlink:href=\"#lr-restricted-use-green-path-1\"></use></mask><path d=\"M5.44,16.71351 C8.44442904,16.71351 10.88,14.2779391 10.88,11.27351 C10.88,8.26908101 8.44442904,5.83351005 5.44,5.83351005 C2.43557096,5.83351005 0,8.26908101 0,11.27351 C0,14.2779391 2.43557096,16.71351 5.44,16.71351 Z\" id=\"lr-restricted-use-green-path-3\"></path><mask id=\"lr-restricted-use-green-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"10.88\" height=\"10.88\" fill=\"white\"><use xlink:href=\"#lr-restricted-use-green-path-3\"></use></mask></defs><g id=\"lr-restricted-use-green-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2588.000000, -724.000000)\" id=\"lr-restricted-use-green-Group-8-Copy\"><g transform=\"translate(2580.027884, 603.738353)\"><g id=\"lr-restricted-use-green-Restricted-Use-Icon-Green\" transform=\"translate(8.000000, 119.812615)\"><g id=\"lr-restricted-use-green-Lock-group\" transform=\"translate(0.445793, 0.100000)\"><use id=\"lr-restricted-use-green-Rectangle-37-Copy\" stroke=\"#6CC457\" mask=\"url(#lr-restricted-use-green-mask-2)\" stroke-width=\"4.08\" xlink:href=\"#lr-restricted-use-green-path-1\"></use><use id=\"lr-restricted-use-green-Oval-212-Copy\" stroke=\"#6CC457\" mask=\"url(#lr-restricted-use-green-mask-4)\" stroke-width=\"4.53333333\" fill=\"#6CC457\" xlink:href=\"#lr-restricted-use-green-path-3\"></use><path d=\"M5.91674825,11.3782852 C6.28532056,11.2001361 6.53955728,10.8227056 6.53955728,10.3858949 C6.53955728,9.77749809 6.04635417,9.28429498 5.43795731,9.28429498 C4.82956044,9.28429498 4.33635734,9.77749809 4.33635734,10.3858949 C4.33635734,10.803546 4.56878032,11.1669118 4.91133868,11.3537047 L4.67295731,13.6825793 L6.20295731,13.6825793 L5.91674825,11.3782852 Z\" id=\"lr-restricted-use-green-Combined-Shape\" stroke=\"#222222\" stroke-width=\"0.612\" fill=\"#222222\"></path></g></g></g></g></g></svg>"

/***/ },
/* 82 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 12 17\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Restricted Use Icon Grey</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-restricted-use-grey-path-1\" x=\"2.03795731\" y=\"0.603437144\" width=\"6.8\" height=\"8.84\" rx=\"2.72\"></rect><mask id=\"lr-restricted-use-grey-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"6.8\" height=\"8.84\" fill=\"white\"><use xlink:href=\"#lr-restricted-use-grey-path-1\"></use></mask><path d=\"M5.44,16.71351 C8.44442904,16.71351 10.88,14.2779391 10.88,11.27351 C10.88,8.26908101 8.44442904,5.83351005 5.44,5.83351005 C2.43557096,5.83351005 0,8.26908101 0,11.27351 C0,14.2779391 2.43557096,16.71351 5.44,16.71351 Z\" id=\"lr-restricted-use-grey-path-3\"></path><mask id=\"lr-restricted-use-grey-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"10.88\" height=\"10.88\" fill=\"white\"><use xlink:href=\"#lr-restricted-use-grey-path-3\"></use></mask></defs><g id=\"lr-restricted-use-grey-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2651.000000, -724.000000)\" id=\"lr-restricted-use-grey-Group-8-Copy-2\"><g transform=\"translate(2651.000000, 705.738353)\"><g id=\"lr-restricted-use-grey-Restricted-Use-Icon-Grey\" transform=\"translate(0.000000, 17.812615)\"><g id=\"lr-restricted-use-grey-Lock-group\" transform=\"translate(0.445793, 0.100000)\"><use id=\"lr-restricted-use-grey-Rectangle-37-Copy\" stroke=\"#9B9B9B\" mask=\"url(#lr-restricted-use-grey-mask-2)\" stroke-width=\"4.08\" xlink:href=\"#lr-restricted-use-grey-path-1\"></use><use id=\"lr-restricted-use-grey-Oval-212-Copy\" stroke=\"#9B9B9B\" mask=\"url(#lr-restricted-use-grey-mask-4)\" stroke-width=\"4.53333333\" fill=\"#9B9B9B\" xlink:href=\"#lr-restricted-use-grey-path-3\"></use><path d=\"M5.91674825,11.3782852 C6.28532056,11.2001361 6.53955728,10.8227056 6.53955728,10.3858949 C6.53955728,9.77749809 6.04635417,9.28429498 5.43795731,9.28429498 C4.82956044,9.28429498 4.33635734,9.77749809 4.33635734,10.3858949 C4.33635734,10.803546 4.56878032,11.1669118 4.91133868,11.3537047 L4.67295731,13.6825793 L6.20295731,13.6825793 L5.91674825,11.3782852 Z\" id=\"lr-restricted-use-grey-Combined-Shape\" stroke=\"#222222\" stroke-width=\"0.612\" fill=\"#222222\"></path></g></g></g></g></g></svg>"

/***/ },
/* 83 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 12 17\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Restricted Use Icon White</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-restricted-use-white-path-1\" x=\"2.03795731\" y=\"0.603437144\" width=\"6.8\" height=\"8.84\" rx=\"2.72\"></rect><mask id=\"lr-restricted-use-white-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"6.8\" height=\"8.84\" fill=\"white\"><use xlink:href=\"#lr-restricted-use-white-path-1\"></use></mask><path d=\"M5.44,16.71351 C8.44442904,16.71351 10.88,14.2779391 10.88,11.27351 C10.88,8.26908101 8.44442904,5.83351005 5.44,5.83351005 C2.43557096,5.83351005 0,8.26908101 0,11.27351 C0,14.2779391 2.43557096,16.71351 5.44,16.71351 Z\" id=\"lr-restricted-use-white-path-3\"></path><mask id=\"lr-restricted-use-white-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"10.88\" height=\"10.88\" fill=\"white\"><use xlink:href=\"#lr-restricted-use-white-path-3\"></use></mask></defs><g id=\"lr-restricted-use-white-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2526.000000, -724.000000)\" id=\"lr-restricted-use-white-White-Group\"><g transform=\"translate(2518.000000, 603.738353)\"><g id=\"lr-restricted-use-white-Restricted-Use-Icon-White\" transform=\"translate(8.000000, 119.812615)\"><g id=\"lr-restricted-use-white-Lock-group\" transform=\"translate(0.445793, 0.100000)\"><use id=\"lr-restricted-use-white-Rectangle-37-Copy\" stroke=\"#FFFFFF\" mask=\"url(#lr-restricted-use-white-mask-2)\" stroke-width=\"4.08\" xlink:href=\"#lr-restricted-use-white-path-1\"></use><use id=\"lr-restricted-use-white-Oval-212-Copy\" stroke=\"#FFFFFF\" mask=\"url(#lr-restricted-use-white-mask-4)\" stroke-width=\"4.53333333\" fill=\"#FFFFFF\" xlink:href=\"#lr-restricted-use-white-path-3\"></use><path d=\"M5.91674825,11.3782852 C6.28532056,11.2001361 6.53955728,10.8227056 6.53955728,10.3858949 C6.53955728,9.77749809 6.04635417,9.28429498 5.43795731,9.28429498 C4.82956044,9.28429498 4.33635734,9.77749809 4.33635734,10.3858949 C4.33635734,10.803546 4.56878032,11.1669118 4.91133868,11.3537047 L4.67295731,13.6825793 L6.20295731,13.6825793 L5.91674825,11.3782852 Z\" id=\"lr-restricted-use-white-Combined-Shape\" stroke=\"#222222\" stroke-width=\"0.612\" fill=\"#222222\"></path></g></g></g></g></g></svg>"

/***/ },
/* 84 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 18 18\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>search</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-search-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-search-search\"><g transform=\"translate(1.000000, 1.000000)\"><path d=\"M13.863961,15.2781746 C14.2544853,15.6686989 14.8876503,15.6686989 15.2781746,15.2781746 C15.6686989,14.8876503 15.6686989,14.2544853 15.2781746,13.863961 L12.7071068,11.2928932 C12.3165825,10.9023689 11.6834175,10.9023689 11.2928932,11.2928932 C10.9023689,11.6834175 10.9023689,12.3165825 11.2928932,12.7071068 L13.863961,15.2781746 Z\" id=\"lr-search-Line\"></path><path d=\"M12,7 C12,4.23857625 9.76142375,2 7,2 C4.23857625,2 2,4.23857625 2,7 C2,9.76142375 4.23857625,12 7,12 C9.76142375,12 12,9.76142375 12,7 Z M0,7 C0,3.13400675 3.13400675,0 7,0 C10.8659932,0 14,3.13400675 14,7 C14,10.8659932 10.8659932,14 7,14 C3.13400675,14 0,10.8659932 0,7 Z\" id=\"lr-search-Oval\"></path></g></g></g></svg>"

/***/ },
/* 85 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 31 22\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Active Pill</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-segment-active-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-1538.000000, -204.000000)\" id=\"lr-segment-active-Active-Pill\"><g transform=\"translate(1538.500000, 204.990437)\"><rect id=\"lr-segment-active-Rectangle-223\" fill=\"#70C262\" x=\"9.09494702e-13\" y=\"0\" width=\"30\" height=\"21\" rx=\"10.5\"></rect><path d=\"M20.4235117,11.0367963 L12.1775927,16.3966437 C11.7208308,16.6935389 11.3505522,16.4912055 11.3505522,15.9457027 L11.3505522,5.05273729 C11.3505522,4.50679426 11.726555,4.3086218 12.1775927,4.60179629 L20.4235117,9.96164368 C20.8802736,10.2585389 20.8745494,10.7436218 20.4235117,11.0367963 Z\" id=\"lr-segment-active-Triangle-3\" fill=\"#FFFFFF\"></path></g></g></g></svg>"

/***/ },
/* 86 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Segment Distributing</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-segment-distributing-path-1\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-segment-distributing-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-segment-distributing-path-1\"></use></mask><circle id=\"lr-segment-distributing-path-3\" cx=\"4\" cy=\"12\" r=\"1\"></circle><mask id=\"lr-segment-distributing-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"-1.5\" y=\"-1.5\" width=\"5\" height=\"5\"><rect x=\"1.5\" y=\"9.5\" width=\"5\" height=\"5\" fill=\"white\"></rect><use xlink:href=\"#lr-segment-distributing-path-3\" fill=\"black\"></use></mask><circle id=\"lr-segment-distributing-path-5\" cx=\"4\" cy=\"10\" r=\"1\"></circle><mask id=\"lr-segment-distributing-mask-6\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"-1.5\" y=\"-1.5\" width=\"5\" height=\"5\"><rect x=\"1.5\" y=\"7.5\" width=\"5\" height=\"5\" fill=\"white\"></rect><use xlink:href=\"#lr-segment-distributing-path-5\" fill=\"black\"></use></mask><circle id=\"lr-segment-distributing-path-7\" cx=\"4\" cy=\"10\" r=\"1\"></circle><mask id=\"lr-segment-distributing-mask-8\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"-1.5\" y=\"-1.5\" width=\"5\" height=\"5\"><rect x=\"1.5\" y=\"7.5\" width=\"5\" height=\"5\" fill=\"white\"></rect><use xlink:href=\"#lr-segment-distributing-path-7\" fill=\"black\"></use></mask></defs><g id=\"lr-segment-distributing-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-682.000000, -127.000000)\" id=\"lr-segment-distributing-Segment-Distributing\"><g transform=\"translate(682.000000, 127.000000)\"><g id=\"lr-segment-distributing-Set-For-Distribution-Copy-4\" transform=\"translate(0.500000, 0.000000)\"><use id=\"lr-segment-distributing-Rectangle-223\" stroke=\"#70C262\" mask=\"url(#lr-segment-distributing-mask-2)\" stroke-width=\"4\" fill=\"#70C262\" xlink:href=\"#lr-segment-distributing-path-1\"></use><g id=\"lr-segment-distributing-Dsit-Arrow\" transform=\"translate(10.500000, 3.000000)\"><g id=\"lr-segment-distributing-Arrow-Middle\" transform=\"translate(0.727273, 0.000000)\" stroke=\"#FFFFFF\" stroke-width=\"1.6\" stroke-linecap=\"round\"><path d=\"M3.27272727,0.865021485 L3.27272727,10.3290214\" id=\"lr-segment-distributing-Path-270\"></path><polyline id=\"lr-segment-distributing-Path-267-Copy-2\" transform=\"translate(3.294982, 3.616026) rotate(315.000000) translate(-3.294982, -3.616026) \" points=\"5.33265248 5.6142091 5.33265248 1.61784298 1.25731191 1.61784298\"></polyline></g><g id=\"lr-segment-distributing-Oval-14\"><use fill=\"#70C262\" fill-rule=\"nonzero\" xlink:href=\"#lr-segment-distributing-path-3\"></use><use stroke=\"#FFFFFF\" mask=\"url(#lr-segment-distributing-mask-4)\" stroke-width=\"3\" xlink:href=\"#lr-segment-distributing-path-3\"></use></g></g><g id=\"lr-segment-distributing-Dsit-Arrow-Copy-2\" transform=\"translate(18.346549, 12.655556) rotate(59.000000) translate(-18.346549, -12.655556) translate(14.346549, 7.155556)\"><g id=\"lr-segment-distributing-Arrow-Middle\" transform=\"translate(0.727273, -0.000000)\" stroke=\"#FFFFFF\" stroke-width=\"1.6\" stroke-linecap=\"round\"><path d=\"M3.27272733,2.50145884 L3.27272727,8.32902142\" id=\"lr-segment-distributing-Path-270\"></path><polyline id=\"lr-segment-distributing-Path-267-Copy-2\" transform=\"translate(3.267298, 3.586485) rotate(315.000000) translate(-3.267298, -3.586485) \" points=\"5.30496862 5.58466818 5.30496862 1.58830206 1.22962805 1.58830206\"></polyline></g><g id=\"lr-segment-distributing-Oval-14\"><use fill=\"#70C262\" fill-rule=\"nonzero\" xlink:href=\"#lr-segment-distributing-path-5\"></use><use stroke=\"#FFFFFF\" mask=\"url(#lr-segment-distributing-mask-6)\" stroke-width=\"3\" xlink:href=\"#lr-segment-distributing-path-5\"></use></g></g><g id=\"lr-segment-distributing-Dsit-Arrow-Copy-3\" transform=\"translate(10.650523, 12.688380) rotate(-59.000000) translate(-10.650523, -12.688380) translate(6.650523, 7.188380)\"><g id=\"lr-segment-distributing-Arrow-Middle\" transform=\"translate(0.727273, -0.000000)\" stroke=\"#FFFFFF\" stroke-width=\"1.6\" stroke-linecap=\"round\"><path d=\"M3.27272733,2.50145884 L3.27272727,8.32902142\" id=\"lr-segment-distributing-Path-270\"></path><polyline id=\"lr-segment-distributing-Path-267-Copy-2\" transform=\"translate(3.267298, 3.586485) rotate(315.000000) translate(-3.267298, -3.586485) \" points=\"5.30496862 5.58466818 5.30496862 1.58830206 1.22962805 1.58830206\"></polyline></g><g id=\"lr-segment-distributing-Oval-14\"><use fill=\"#70C262\" fill-rule=\"nonzero\" xlink:href=\"#lr-segment-distributing-path-7\"></use><use stroke=\"#FFFFFF\" mask=\"url(#lr-segment-distributing-mask-8)\" stroke-width=\"3\" xlink:href=\"#lr-segment-distributing-path-7\"></use></g></g></g></g></g></g></svg>"

/***/ },
/* 87 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Segment No Longer Distributing</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-segment-not-distributing-path-1\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-segment-not-distributing-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-segment-not-distributing-path-1\"></use></mask><circle id=\"lr-segment-not-distributing-path-3\" cx=\"4\" cy=\"12\" r=\"1\"></circle><mask id=\"lr-segment-not-distributing-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"-1.5\" y=\"-1.5\" width=\"5\" height=\"5\"><rect x=\"1.5\" y=\"9.5\" width=\"5\" height=\"5\" fill=\"white\"></rect><use xlink:href=\"#lr-segment-not-distributing-path-3\" fill=\"black\"></use></mask><circle id=\"lr-segment-not-distributing-path-5\" cx=\"4\" cy=\"10\" r=\"1\"></circle><mask id=\"lr-segment-not-distributing-mask-6\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"-1.5\" y=\"-1.5\" width=\"5\" height=\"5\"><rect x=\"1.5\" y=\"7.5\" width=\"5\" height=\"5\" fill=\"white\"></rect><use xlink:href=\"#lr-segment-not-distributing-path-5\" fill=\"black\"></use></mask><circle id=\"lr-segment-not-distributing-path-7\" cx=\"4\" cy=\"10\" r=\"1\"></circle><mask id=\"lr-segment-not-distributing-mask-8\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"-1.5\" y=\"-1.5\" width=\"5\" height=\"5\"><rect x=\"1.5\" y=\"7.5\" width=\"5\" height=\"5\" fill=\"white\"></rect><use xlink:href=\"#lr-segment-not-distributing-path-7\" fill=\"black\"></use></mask></defs><g id=\"lr-segment-not-distributing-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-531.000000, -127.000000)\" id=\"lr-segment-not-distributing-Segment-No-Longer-Distrbuting\"><g transform=\"translate(531.000000, 127.000000)\"><g id=\"lr-segment-not-distributing-Set-For-Distribution-Copy-3\" transform=\"translate(0.500000, 0.000000)\"><use id=\"lr-segment-not-distributing-Rectangle-223\" stroke=\"#70C262\" mask=\"url(#lr-segment-not-distributing-mask-2)\" stroke-width=\"4\" fill=\"#FFFFFF\" xlink:href=\"#lr-segment-not-distributing-path-1\"></use><g id=\"lr-segment-not-distributing-Dsit-Arrow\" transform=\"translate(10.500000, 3.000000)\"><g id=\"lr-segment-not-distributing-Arrow-Middle\" transform=\"translate(0.727273, 0.000000)\" stroke=\"#70C262\" stroke-width=\"1.6\" stroke-linecap=\"round\"><path d=\"M3.27272727,0.865021485 L3.27272727,10.3290214\" id=\"lr-segment-not-distributing-Path-270\"></path><polyline id=\"lr-segment-not-distributing-Path-267-Copy-2\" transform=\"translate(3.294982, 3.616026) rotate(315.000000) translate(-3.294982, -3.616026) \" points=\"5.33265248 5.6142091 5.33265248 1.61784298 1.25731191 1.61784298\"></polyline></g><g id=\"lr-segment-not-distributing-Oval-14\"><use fill=\"#FFFFFF\" fill-rule=\"nonzero\" xlink:href=\"#lr-segment-not-distributing-path-3\"></use><use stroke=\"#D0021B\" mask=\"url(#lr-segment-not-distributing-mask-4)\" stroke-width=\"3\" xlink:href=\"#lr-segment-not-distributing-path-3\"></use></g></g><g id=\"lr-segment-not-distributing-Dsit-Arrow-Copy-2\" transform=\"translate(18.346549, 12.655556) rotate(59.000000) translate(-18.346549, -12.655556) translate(14.346549, 7.155556)\"><g id=\"lr-segment-not-distributing-Arrow-Middle\" transform=\"translate(0.727273, -0.000000)\" stroke=\"#70C262\" stroke-width=\"1.6\" stroke-linecap=\"round\"><path d=\"M3.27272733,2.50145884 L3.27272727,8.32902142\" id=\"lr-segment-not-distributing-Path-270\"></path><polyline id=\"lr-segment-not-distributing-Path-267-Copy-2\" transform=\"translate(3.267298, 3.586485) rotate(315.000000) translate(-3.267298, -3.586485) \" points=\"5.30496862 5.58466818 5.30496862 1.58830206 1.22962805 1.58830206\"></polyline></g><g id=\"lr-segment-not-distributing-Oval-14\"><use fill=\"#FFFFFF\" fill-rule=\"nonzero\" xlink:href=\"#lr-segment-not-distributing-path-5\"></use><use stroke=\"#70C262\" mask=\"url(#lr-segment-not-distributing-mask-6)\" stroke-width=\"3\" xlink:href=\"#lr-segment-not-distributing-path-5\"></use></g></g><g id=\"lr-segment-not-distributing-Dsit-Arrow-Copy-3\" transform=\"translate(10.650523, 12.688380) rotate(-59.000000) translate(-10.650523, -12.688380) translate(6.650523, 7.188380)\"><g id=\"lr-segment-not-distributing-Arrow-Middle\" transform=\"translate(0.727273, -0.000000)\" stroke=\"#70C262\" stroke-width=\"1.6\" stroke-linecap=\"round\"><path d=\"M3.27272733,2.50145884 L3.27272727,8.32902142\" id=\"lr-segment-not-distributing-Path-270\"></path><polyline id=\"lr-segment-not-distributing-Path-267-Copy-2\" transform=\"translate(3.267298, 3.586485) rotate(315.000000) translate(-3.267298, -3.586485) \" points=\"5.30496862 5.58466818 5.30496862 1.58830206 1.22962805 1.58830206\"></polyline></g><g id=\"lr-segment-not-distributing-Oval-14\"><use fill=\"#FFFFFF\" fill-rule=\"nonzero\" xlink:href=\"#lr-segment-not-distributing-path-7\"></use><use stroke=\"#70C262\" mask=\"url(#lr-segment-not-distributing-mask-8)\" stroke-width=\"3\" xlink:href=\"#lr-segment-not-distributing-path-7\"></use></g></g></g></g></g></g></svg>"

/***/ },
/* 88 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 29 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Segment I&#x27;ve Purchased</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-segment-purchased-path-1\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-segment-purchased-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-segment-purchased-path-1\"></use></mask></defs><g id=\"lr-segment-purchased-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-1255.000000, -807.000000)\" id=\"lr-segment-purchased-Segment-I&#x27;ve-Purchased\"><g transform=\"translate(1255.000000, 807.000000)\"><use id=\"lr-segment-purchased-Rectangle-223\" stroke=\"#70C262\" mask=\"url(#lr-segment-purchased-mask-2)\" stroke-width=\"4\" fill=\"#FFFFFF\" xlink:href=\"#lr-segment-purchased-path-1\"></use><path d=\"M12.3574602,11.752 L10.3834602,11.752 C10.476794,12.8533388 10.8174572,13.6886638 11.4054602,14.258 C11.9934631,14.8273362 12.8101216,15.149333 13.8554602,15.224 L13.8554602,16.414 L14.6814602,16.414 L14.6814602,15.224 C15.3814637,15.1773331 15.9554579,15.0373345 16.4034602,14.804 C16.8514624,14.5706655 17.2084588,14.3046682 17.4744602,14.006 C17.7404615,13.7073318 17.924793,13.4016682 18.0274602,13.089 C18.1301273,12.7763318 18.1814602,12.5173344 18.1814602,12.312 C18.1814602,12.0786655 18.165127,11.8126682 18.1324602,11.514 C18.0997933,11.2153318 17.9947944,10.9166682 17.8174602,10.618 C17.6401259,10.3193318 17.3647954,10.0323347 16.9914602,9.757 C16.618125,9.48166529 16.0861303,9.2506676 15.3954602,9.064 C15.2647928,9.02666648 15.1411274,8.99400014 15.0244602,8.966 C14.9077929,8.93799986 14.7934607,8.91000014 14.6814602,8.882 L14.6814602,6.404 C14.9987951,6.404 15.269459,6.53466536 15.4934602,6.796 C15.7174613,7.05733464 15.8341268,7.3746648 15.8434602,7.748 L17.8314602,7.748 C17.80346,7.26266424 17.7007944,6.84266844 17.5234602,6.488 C17.3461259,6.13333156 17.1174616,5.83700119 16.8374602,5.599 C16.5574588,5.36099881 16.2331287,5.17433401 15.8644602,5.039 C15.4957916,4.90366599 15.1014623,4.8126669 14.6814602,4.766 L14.6814602,3.688 L13.8554602,3.688 L13.8554602,4.766 C13.4354581,4.79400014 13.0294621,4.87566599 12.6374602,5.011 C12.2454582,5.14633401 11.9001283,5.33766543 11.6014602,5.585 C11.302792,5.83233457 11.0624611,6.13799818 10.8804602,6.502 C10.6984592,6.86600182 10.6074602,7.28599762 10.6074602,7.762 C10.6074602,8.228669 10.6867927,8.61833177 10.8454602,8.931 C11.0041276,9.24366823 11.2164588,9.50499895 11.4824602,9.715 C11.7484615,9.92500105 12.0494585,10.0929994 12.3854602,10.219 C12.7214618,10.3450006 13.0621251,10.4546662 13.4074602,10.548 C13.500794,10.5666668 13.5871264,10.5876665 13.6664602,10.611 C13.7457939,10.6343334 13.8087933,10.6553332 13.8554602,10.674 L13.8554602,13.6 C13.4261247,13.5159996 13.0667949,13.3200015 12.7774602,13.012 C12.4881254,12.7039985 12.3481268,12.2840027 12.3574602,11.752 L12.3574602,11.752 Z M14.6814602,13.6 L14.6814602,10.912 C15.2321296,11.0613341 15.6217923,11.2269991 15.8504602,11.409 C16.079128,11.5910009 16.1934602,11.8639982 16.1934602,12.228 C16.1934602,12.4520011 16.146794,12.6456659 16.0534602,12.809 C15.9601264,12.9723342 15.8411275,13.1099994 15.6964602,13.222 C15.5517928,13.3340006 15.3884611,13.420333 15.2064602,13.481 C15.0244592,13.541667 14.849461,13.5813332 14.6814602,13.6 L14.6814602,13.6 Z M13.8554602,6.404 L13.8554602,8.686 C13.4074579,8.58333282 13.0854611,8.44800084 12.8894602,8.28 C12.6934592,8.11199916 12.5954602,7.87400154 12.5954602,7.566 C12.5954602,7.36999902 12.6304598,7.19966739 12.7004602,7.055 C12.7704605,6.91033261 12.8661262,6.78900049 12.9874602,6.691 C13.1087941,6.59299951 13.2441261,6.5206669 13.3934602,6.474 C13.5427942,6.4273331 13.6967927,6.404 13.8554602,6.404 L13.8554602,6.404 Z\" id=\"lr-segment-purchased-$\" fill=\"#70C262\"></path></g></g></g></svg>"

/***/ },
/* 89 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Segment Requested</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-segment-requested-path-1\" x=\"0.896573225\" y=\"0.804002746\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-segment-requested-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-segment-requested-path-1\"></use></mask></defs><g id=\"lr-segment-requested-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-7346.000000, -135.000000)\" id=\"lr-segment-requested-Segment-Requested\" stroke=\"#6EC35D\"><g transform=\"translate(7345.564213, 135.182238)\"><use id=\"lr-segment-requested-Rectangle-223\" mask=\"url(#lr-segment-requested-mask-2)\" stroke-width=\"4\" fill=\"#FFFFFF\" xlink:href=\"#lr-segment-requested-path-1\"></use><g id=\"lr-segment-requested-Arrow-Middle\" transform=\"translate(16.396573, 7.728971) scale(1, -1) translate(-16.396573, -7.728971) translate(12.896573, 4.228971)\" stroke-width=\"1.6\" stroke-linecap=\"round\"><path d=\"M3.27272727,0.865021485 L3.27272727,6.86502148\" id=\"lr-segment-requested-Path-270\"></path><polyline id=\"lr-segment-requested-Path-267-Copy-2\" transform=\"translate(3.294982, 3.616026) rotate(315.000000) translate(-3.294982, -3.616026) \" points=\"5.33265248 5.6142091 5.33265248 1.61784298 1.25731191 1.61784298\"></polyline></g><g id=\"lr-segment-requested-Shopping-Cart\" transform=\"translate(6.937827, 6.728971)\"><polyline id=\"lr-segment-requested-Path-2\" stroke-width=\"2\" stroke-linecap=\"round\" points=\"0.25 0.0158830669 3.24842258 0.0158830669 5.63199599 6.78051291 11.9128288 6.78051291 14.6700001 2.88698279\"></polyline><circle id=\"lr-segment-requested-Oval-2\" stroke-width=\"0.5\" fill=\"#6EC35D\" cx=\"6.43045205\" cy=\"9.75\" r=\"1.25\"></circle><circle id=\"lr-segment-requested-Oval-2-Copy\" stroke-width=\"0.5\" fill=\"#6EC35D\" cx=\"11.8704567\" cy=\"9.75\" r=\"1.25\"></circle></g></g></g></g></svg>"

/***/ },
/* 90 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Stopped Pill</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-segment-stopped-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-1603.000000, -205.000000)\" id=\"lr-segment-stopped-Stopped-Pill\"><g transform=\"translate(1603.000000, 204.990437)\"><g transform=\"translate(0.500000, 0.665606)\"><rect id=\"lr-segment-stopped-Rectangle-223\" fill=\"#D0021B\" x=\"9.09494702e-13\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><rect id=\"lr-segment-stopped-Rectangle-13\" fill=\"#FFFFFF\" x=\"9.5\" y=\"5\" width=\"10\" height=\"10\" rx=\"1\"></rect></g></g></g></g></svg>"

/***/ },
/* 91 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 29 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Segment Under Review Status Change</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-segment-under-review-change-path-1\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-segment-under-review-change-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-segment-under-review-change-path-1\"></use></mask></defs><g id=\"lr-segment-under-review-change-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-1255.000000, -908.000000)\" id=\"lr-segment-under-review-change-Segment-Under-Review-Status-Change\"><g transform=\"translate(1255.000000, 908.738353)\"><use id=\"lr-segment-under-review-change-Rectangle-223\" stroke=\"#2492F2\" mask=\"url(#lr-segment-under-review-change-mask-2)\" stroke-width=\"4\" fill=\"#FFFFFF\" xlink:href=\"#lr-segment-under-review-change-path-1\"></use><path d=\"M12.3574602,11.752 L10.3834602,11.752 C10.476794,12.8533388 10.8174572,13.6886638 11.4054602,14.258 C11.9934631,14.8273362 12.8101216,15.149333 13.8554602,15.224 L13.8554602,16.414 L14.6814602,16.414 L14.6814602,15.224 C15.3814637,15.1773331 15.9554579,15.0373345 16.4034602,14.804 C16.8514624,14.5706655 17.2084588,14.3046682 17.4744602,14.006 C17.7404615,13.7073318 17.924793,13.4016682 18.0274602,13.089 C18.1301273,12.7763318 18.1814602,12.5173344 18.1814602,12.312 C18.1814602,12.0786655 18.165127,11.8126682 18.1324602,11.514 C18.0997933,11.2153318 17.9947944,10.9166682 17.8174602,10.618 C17.6401259,10.3193318 17.3647954,10.0323347 16.9914602,9.757 C16.618125,9.48166529 16.0861303,9.2506676 15.3954602,9.064 C15.2647928,9.02666648 15.1411274,8.99400014 15.0244602,8.966 C14.9077929,8.93799986 14.7934607,8.91000014 14.6814602,8.882 L14.6814602,6.404 C14.9987951,6.404 15.269459,6.53466536 15.4934602,6.796 C15.7174613,7.05733464 15.8341268,7.3746648 15.8434602,7.748 L17.8314602,7.748 C17.80346,7.26266424 17.7007944,6.84266844 17.5234602,6.488 C17.3461259,6.13333156 17.1174616,5.83700119 16.8374602,5.599 C16.5574588,5.36099881 16.2331287,5.17433401 15.8644602,5.039 C15.4957916,4.90366599 15.1014623,4.8126669 14.6814602,4.766 L14.6814602,3.688 L13.8554602,3.688 L13.8554602,4.766 C13.4354581,4.79400014 13.0294621,4.87566599 12.6374602,5.011 C12.2454582,5.14633401 11.9001283,5.33766543 11.6014602,5.585 C11.302792,5.83233457 11.0624611,6.13799818 10.8804602,6.502 C10.6984592,6.86600182 10.6074602,7.28599762 10.6074602,7.762 C10.6074602,8.228669 10.6867927,8.61833177 10.8454602,8.931 C11.0041276,9.24366823 11.2164588,9.50499895 11.4824602,9.715 C11.7484615,9.92500105 12.0494585,10.0929994 12.3854602,10.219 C12.7214618,10.3450006 13.0621251,10.4546662 13.4074602,10.548 C13.500794,10.5666668 13.5871264,10.5876665 13.6664602,10.611 C13.7457939,10.6343334 13.8087933,10.6553332 13.8554602,10.674 L13.8554602,13.6 C13.4261247,13.5159996 13.0667949,13.3200015 12.7774602,13.012 C12.4881254,12.7039985 12.3481268,12.2840027 12.3574602,11.752 L12.3574602,11.752 Z M14.6814602,13.6 L14.6814602,10.912 C15.2321296,11.0613341 15.6217923,11.2269991 15.8504602,11.409 C16.079128,11.5910009 16.1934602,11.8639982 16.1934602,12.228 C16.1934602,12.4520011 16.146794,12.6456659 16.0534602,12.809 C15.9601264,12.9723342 15.8411275,13.1099994 15.6964602,13.222 C15.5517928,13.3340006 15.3884611,13.420333 15.2064602,13.481 C15.0244592,13.541667 14.849461,13.5813332 14.6814602,13.6 L14.6814602,13.6 Z M13.8554602,6.404 L13.8554602,8.686 C13.4074579,8.58333282 13.0854611,8.44800084 12.8894602,8.28 C12.6934592,8.11199916 12.5954602,7.87400154 12.5954602,7.566 C12.5954602,7.36999902 12.6304598,7.19966739 12.7004602,7.055 C12.7704605,6.91033261 12.8661262,6.78900049 12.9874602,6.691 C13.1087941,6.59299951 13.2441261,6.5206669 13.3934602,6.474 C13.5427942,6.4273331 13.6967927,6.404 13.8554602,6.404 L13.8554602,6.404 Z\" id=\"lr-segment-under-review-change-$\" fill=\"#2492F2\"></path></g></g></g></svg>"

/***/ },
/* 92 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 29 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Segment Under Review</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-segment-under-review-path-1\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-segment-under-review-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-segment-under-review-path-1\"></use></mask></defs><g id=\"lr-segment-under-review-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-1255.000000, -857.000000)\" id=\"lr-segment-under-review-Segment-Under-Review\"><g transform=\"translate(1255.000000, 857.738353)\"><use id=\"lr-segment-under-review-Rectangle-223\" stroke=\"#686768\" mask=\"url(#lr-segment-under-review-mask-2)\" stroke-width=\"4\" fill=\"#FFFFFF\" xlink:href=\"#lr-segment-under-review-path-1\"></use><path d=\"M12.3574602,11.752 L10.3834602,11.752 C10.476794,12.8533388 10.8174572,13.6886638 11.4054602,14.258 C11.9934631,14.8273362 12.8101216,15.149333 13.8554602,15.224 L13.8554602,16.414 L14.6814602,16.414 L14.6814602,15.224 C15.3814637,15.1773331 15.9554579,15.0373345 16.4034602,14.804 C16.8514624,14.5706655 17.2084588,14.3046682 17.4744602,14.006 C17.7404615,13.7073318 17.924793,13.4016682 18.0274602,13.089 C18.1301273,12.7763318 18.1814602,12.5173344 18.1814602,12.312 C18.1814602,12.0786655 18.165127,11.8126682 18.1324602,11.514 C18.0997933,11.2153318 17.9947944,10.9166682 17.8174602,10.618 C17.6401259,10.3193318 17.3647954,10.0323347 16.9914602,9.757 C16.618125,9.48166529 16.0861303,9.2506676 15.3954602,9.064 C15.2647928,9.02666648 15.1411274,8.99400014 15.0244602,8.966 C14.9077929,8.93799986 14.7934607,8.91000014 14.6814602,8.882 L14.6814602,6.404 C14.9987951,6.404 15.269459,6.53466536 15.4934602,6.796 C15.7174613,7.05733464 15.8341268,7.3746648 15.8434602,7.748 L17.8314602,7.748 C17.80346,7.26266424 17.7007944,6.84266844 17.5234602,6.488 C17.3461259,6.13333156 17.1174616,5.83700119 16.8374602,5.599 C16.5574588,5.36099881 16.2331287,5.17433401 15.8644602,5.039 C15.4957916,4.90366599 15.1014623,4.8126669 14.6814602,4.766 L14.6814602,3.688 L13.8554602,3.688 L13.8554602,4.766 C13.4354581,4.79400014 13.0294621,4.87566599 12.6374602,5.011 C12.2454582,5.14633401 11.9001283,5.33766543 11.6014602,5.585 C11.302792,5.83233457 11.0624611,6.13799818 10.8804602,6.502 C10.6984592,6.86600182 10.6074602,7.28599762 10.6074602,7.762 C10.6074602,8.228669 10.6867927,8.61833177 10.8454602,8.931 C11.0041276,9.24366823 11.2164588,9.50499895 11.4824602,9.715 C11.7484615,9.92500105 12.0494585,10.0929994 12.3854602,10.219 C12.7214618,10.3450006 13.0621251,10.4546662 13.4074602,10.548 C13.500794,10.5666668 13.5871264,10.5876665 13.6664602,10.611 C13.7457939,10.6343334 13.8087933,10.6553332 13.8554602,10.674 L13.8554602,13.6 C13.4261247,13.5159996 13.0667949,13.3200015 12.7774602,13.012 C12.4881254,12.7039985 12.3481268,12.2840027 12.3574602,11.752 L12.3574602,11.752 Z M14.6814602,13.6 L14.6814602,10.912 C15.2321296,11.0613341 15.6217923,11.2269991 15.8504602,11.409 C16.079128,11.5910009 16.1934602,11.8639982 16.1934602,12.228 C16.1934602,12.4520011 16.146794,12.6456659 16.0534602,12.809 C15.9601264,12.9723342 15.8411275,13.1099994 15.6964602,13.222 C15.5517928,13.3340006 15.3884611,13.420333 15.2064602,13.481 C15.0244592,13.541667 14.849461,13.5813332 14.6814602,13.6 L14.6814602,13.6 Z M13.8554602,6.404 L13.8554602,8.686 C13.4074579,8.58333282 13.0854611,8.44800084 12.8894602,8.28 C12.6934592,8.11199916 12.5954602,7.87400154 12.5954602,7.566 C12.5954602,7.36999902 12.6304598,7.19966739 12.7004602,7.055 C12.7704605,6.91033261 12.8661262,6.78900049 12.9874602,6.691 C13.1087941,6.59299951 13.2441261,6.5206669 13.3934602,6.474 C13.5427942,6.4273331 13.6967927,6.404 13.8554602,6.404 L13.8554602,6.404 Z\" id=\"lr-segment-under-review-$\" fill=\"#686768\"></path></g></g></g></svg>"

/***/ },
/* 93 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 90 90\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-sftp</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-sftp-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-sftp-lr-sftp\"><g id=\"lr-sftp-SFTP-II\" transform=\"translate(3.000000, 8.000000)\"><g id=\"lr-sftp-Pipe\" transform=\"translate(10.125000, 49.000000)\"><path d=\"M33.1500505,18.6672166 C33.1500505,19.4956437 33.8216233,20.1672166 34.6500505,20.1672166 C35.4784776,20.1672166 36.1500505,19.4956437 36.1500505,18.6672166 L36.1500505,2.43533294 C36.1500505,1.60690582 35.4784776,0.935332941 34.6500505,0.935332941 C33.8216233,0.935332941 33.1500505,1.60690582 33.1500505,2.43533294 L33.1500505,18.6672166 Z\" id=\"lr-sftp-Path-270\"></path><path d=\"M66.9475188,20.1454346 C67.7759459,20.1454346 68.4475188,19.4738618 68.4475188,18.6454346 C68.4475188,17.8170075 67.7759459,17.1454346 66.9475188,17.1454346 L2.3525821,17.1454346 C1.52415498,17.1454346 0.852582104,17.8170075 0.852582104,18.6454346 C0.852582104,19.4738618 1.52415498,20.1454346 2.3525821,20.1454346 L66.9475188,20.1454346 Z\" id=\"lr-sftp-Path-270-Copy\"></path><path d=\"M27.9343468,15.1164923 L41.3657541,15.1164923 C42.4700399,15.1164923 43.3652403,16.0158958 43.3652403,17.1135401 L43.3652403,20.2208938 C43.3652403,21.3238329 42.4769019,22.2179416 41.3657541,22.2179416 L27.9343468,22.2179416 C26.830061,22.2179416 25.9348606,21.3185382 25.9348606,20.2208938 L25.9348606,17.1135401 C25.9348606,16.0106011 26.823199,15.1164923 27.9343468,15.1164923 Z\" id=\"lr-sftp-Rectangle-9\"></path></g><g id=\"lr-sftp-Cloud-Icon\"><path d=\"M48.6518987,0.5 C40.5875094,0.5 33.2164995,4.54742061 28.9005736,11.1186992 C28.4457922,11.8111335 28.638448,12.7411357 29.3308824,13.1959171 C30.0233167,13.6506985 30.9533189,13.4580428 31.4081003,12.7656084 C35.1738332,7.03203441 41.6062412,3.5 48.6518987,3.5 C60.424479,3.5 69.1795522,12.065629 69.1795522,24.3709189 C69.1795522,25.1993461 69.8511251,25.8709189 70.6795522,25.8709189 C71.5079794,25.8709189 72.1795522,25.1993461 72.1795522,24.3709189 C72.1795522,10.3939084 62.0668223,0.5 48.6518987,0.5 Z\" id=\"lr-sftp-Oval-3\"></path><path d=\"M24.556962,9.63043478 C17.0979816,9.63043478 11.7572663,14.8788877 11.7572663,23.0356781 C11.7572663,23.8641053 12.4288391,24.5356781 13.2572663,24.5356781 C14.0856934,24.5356781 14.7572663,23.8641053 14.7572663,23.0356781 C14.7572663,16.5475565 18.7432469,12.6304348 24.556962,12.6304348 C29.9610105,12.6304348 34.335443,16.9586889 34.335443,22.2898551 C34.335443,23.1182822 35.0070159,23.7898551 35.835443,23.7898551 C36.6638702,23.7898551 37.335443,23.1182822 37.335443,22.2898551 C37.335443,15.294666 31.6107797,9.63043478 24.556962,9.63043478 Z\" id=\"lr-sftp-Oval-3-Copy\"></path><path d=\"M0.5,38.5217391 C0.5,48.3183726 8.51991239,56.2536232 18.4050633,56.2536232 C19.2334904,56.2536232 19.9050633,55.5820503 19.9050633,54.7536232 C19.9050633,53.9251961 19.2334904,53.2536232 18.4050633,53.2536232 C10.1696816,53.2536232 3.5,46.6543497 3.5,38.5217391 C3.5,32.0713386 7.62695551,26.5067199 13.7052974,24.5604561 C14.4942664,24.307831 14.929059,23.4634522 14.6764339,22.6744832 C14.4238088,21.8855142 13.57943,21.4507216 12.790461,21.7033467 C5.47860203,24.0445783 0.5,30.7575225 0.5,38.5217391 Z\" id=\"lr-sftp-Oval-3-Copy-2\"></path><path d=\"M84.5,39.5362319 C84.5,30.2998873 76.9391374,22.8188406 67.6202532,22.8188406 L62.5042718,22.8188406 C61.6758447,22.8188406 61.0042718,23.4904135 61.0042718,24.3188406 C61.0042718,25.1472677 61.6758447,25.8188406 62.5042718,25.8188406 L67.6202532,25.8188406 C75.2893682,25.8188406 81.5,31.9639102 81.5,39.5362319 C81.5,47.1085536 75.2893682,53.2536232 67.6202532,53.2536232 C66.791826,53.2536232 66.1202532,53.9251961 66.1202532,54.7536232 C66.1202532,55.5820503 66.791826,56.2536232 67.6202532,56.2536232 C76.9391374,56.2536232 84.5,48.7725765 84.5,39.5362319 Z\" id=\"lr-sftp-Oval-3-Copy-3\"></path><path d=\"M67.6202532,56.2536232 C68.4486803,56.2536232 69.1202532,55.5820503 69.1202532,54.7536232 C69.1202532,53.9251961 68.4486803,53.2536232 67.6202532,53.2536232 L55.5477808,53.2536232 C54.7193537,53.2536232 54.0477808,53.9251961 54.0477808,54.7536232 C54.0477808,55.5820503 54.7193537,56.2536232 55.5477808,56.2536232 L67.6202532,56.2536232 Z\" id=\"lr-sftp-Line\"></path><path d=\"M34.0372162,56.2536232 C34.8656434,56.2536232 35.5372162,55.5820503 35.5372162,54.7536232 C35.5372162,53.9251961 34.8656434,53.2536232 34.0372162,53.2536232 L18.4050633,53.2536232 C17.5766362,53.2536232 16.9050633,53.9251961 16.9050633,54.7536232 C16.9050633,55.5820503 17.5766362,56.2536232 18.4050633,56.2536232 L34.0372162,56.2536232 Z\" id=\"lr-sftp-Line-Copy-2\"></path></g></g></g></g></svg>"

/***/ },
/* 94 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 150 150\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-silver</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-silver-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"lr-silver-lr-silver\"><g id=\"lr-silver-Silver-Badge\" transform=\"translate(-3.600088, -5.483873)\"><g id=\"lr-silver-Silver-Badge-Parts\" transform=\"translate(0.706378, 0.000000)\" fill=\"#848482\"><path d=\"M74.3190094,18.842202 C76.3519644,17.6684749 79.655127,17.6725691 81.6809906,18.842202 L129.123711,46.2332697 C131.156666,47.4069968 132.804702,50.2696666 132.804702,52.6089324 L132.804702,107.391068 C132.804702,109.738522 131.149575,112.597097 129.123711,113.76673 L81.6809906,141.157798 C79.6480356,142.331525 76.344873,142.327431 74.3190094,141.157798 L26.8762886,113.76673 C24.8433337,112.593003 23.195298,109.730333 23.195298,107.391068 L23.195298,52.6089324 C23.195298,50.2614782 24.850425,47.4029026 26.8762886,46.2332697 L74.3190094,18.842202 L74.3190094,18.842202 Z\" id=\"lr-silver-Polygon-2-Copy-3\"></path><path d=\"M74.1906539,19.9980691 C76.2944976,18.7834143 79.7011276,18.7808885 81.8093461,19.9980691 L128.058523,46.700044 C130.162367,47.9146987 131.867869,50.8636639 131.867869,53.298025 L131.867869,106.701975 C131.867869,109.131284 130.166742,112.082775 128.058523,113.299956 L81.8093461,140.001931 C79.7055024,141.216586 76.2988724,141.219111 74.1906539,140.001931 L27.9414767,113.299956 C25.8376329,112.085301 24.1321305,109.136336 24.1321305,106.701975 L24.1321305,53.298025 C24.1321305,50.8687155 25.8332582,47.9172245 27.9414767,46.700044 L74.1906539,19.9980691 L74.1906539,19.9980691 Z\" id=\"lr-silver-Polygon-2-Copy-2\" transform=\"translate(78.000000, 80.000000) rotate(30.000000) translate(-78.000000, -80.000000) \"></path></g><g id=\"lr-silver-Badge\" transform=\"translate(23.000000, 24.000000)\"><ellipse id=\"lr-silver-Oval-6\" stroke=\"#BFC1C2\" stroke-width=\"4.437801\" fill=\"#E5E4E2\" cx=\"56\" cy=\"55.8242685\" rx=\"55.4666667\" ry=\"55.4666667\"></ellipse><ellipse id=\"lr-silver-Oval-6-Copy\" stroke=\"#848482\" stroke-width=\"2.13333333\" cx=\"56\" cy=\"55.8242685\" rx=\"50.1333333\" ry=\"50.1333333\"></ellipse><ellipse id=\"lr-silver-Oval-6-Copy-2\" stroke=\"#C0C0C0\" stroke-width=\"1.99716312\" fill=\"#FFFFFF\" cx=\"56\" cy=\"55.8242685\" rx=\"46.9333333\" ry=\"46.9333333\"></ellipse></g><g id=\"lr-silver-Silver\" transform=\"translate(37.000000, 69.000000)\" font-size=\"29.8666667\" font-family=\"Flexo-Bold, Flexo\" fill=\"#9B9B9B\" font-weight=\"bold\"><text><tspan x=\"0.6770517\" y=\"24.6250225\">Silver</tspan></text></g><g id=\"lr-silver-Partner\" transform=\"translate(55.000000, 99.000000)\" font-size=\"12.8\" font-family=\"Flexo-Bold, Flexo\" fill=\"#9B9B9B\" font-weight=\"bold\"><text><tspan x=\"0.530885\" y=\"10.343824\">Partner</tspan></text></g><g id=\"lr-silver-LiveRamp-Silver-Logo\" opacity=\"0.774778451\" transform=\"translate(66.436540, 40.111622)\"><path d=\"M8.67666068,15.6879498 L24.7739085,0.204368575 L24.7739085,10.8785824 C24.7739085,10.8785824 20.3958223,13.1716139 16.5968306,14.2877309 C12.7978389,15.403848 8.85233658,15.9517591 8.85233658,15.9517591 L8.67666068,15.6879498 L8.67666068,15.6879498 Z\" id=\"lr-silver-Path-44\" stroke=\"#E5E4E2\" fill=\"#E5E4E2\"></path><path d=\"M9.0233804,17.0907847 C9.0233804,17.0907847 12.3647405,16.7132469 16.8743693,15.5213368 C21.383998,14.3294267 24.7463734,12.2813368 24.7463734,12.2813368 L24.7463734,21.7784744 C24.7463734,21.7784744 18.5421033,20.4790805 15.960005,19.766854 C13.2941003,19.0315111 9.00236449,17.4357662 9.00236449,17.4357662 L9.0233804,17.0907847 L9.0233804,17.0907847 Z\" id=\"lr-silver-Path-45\" stroke=\"#C0C0C0\" fill=\"#C0C0C0\"></path><path d=\"M7.98871114,22.0828699 C7.74894385,21.2909797 7.3299265,19.424483 7.3299265,19.424483 C7.3299265,19.424483 7.76359686,19.1952524 7.98871114,19.0186224 C8.15154781,18.8908569 8.49377933,18.5112967 8.49377933,18.5112967 C8.49377933,18.5112967 12.8778592,20.2850921 15.564734,21.0276323 C18.2872129,21.7800119 24.7218405,22.9960561 24.7218405,22.9960561 L24.7218405,23.8486049 L8.66945523,23.8486049 C8.66945523,23.8486049 8.19545343,22.765687 7.98871114,22.0828699 L7.98871114,22.0828699 Z\" id=\"lr-silver-Path-46\" stroke=\"#91A3B0\" fill=\"#91A3B0\"></path><path d=\"M6.14411413,22.0617048 C6.33670356,22.7599114 6.8028988,23.8280703 6.8028988,23.8280703 L0.193093106,23.8280703 L4.78262596,19.3838969 C4.78262596,19.3838969 5.03360362,19.5253026 5.18631424,19.5782232 C5.32639678,19.6267677 5.66100546,19.6882924 5.66100546,19.6882924 C5.66100546,19.6882924 5.95607245,21.3799854 6.14411413,22.0617048 L6.14411413,22.0617048 Z\" id=\"lr-silver-Path-47\" stroke=\"#848482\" fill=\"#848482\"></path></g></g></g></g></svg>"

/***/ },
/* 95 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 28 28\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Small Spinner Thick</title><desc>Created with Sketch.</desc><defs><circle id=\"lr-small-dashed-ring-path-1\" cx=\"14\" cy=\"14\" r=\"10\"></circle><mask id=\"lr-small-dashed-ring-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"20\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-small-dashed-ring-path-1\"></use></mask><circle id=\"lr-small-dashed-ring-path-3\" cx=\"14\" cy=\"14\" r=\"10\"></circle><mask id=\"lr-small-dashed-ring-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"20\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-small-dashed-ring-path-3\"></use></mask></defs><g id=\"lr-small-dashed-ring-Spinners\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\" stroke-dasharray=\"6,15\"><g id=\"lr-small-dashed-ring-Small-Spinner-Thick\" stroke-width=\"10\"><g id=\"lr-small-dashed-ring-Small-Nondeterminate-Spinner\"><g id=\"lr-small-dashed-ring-Small-Dashed-Ring\"><use id=\"lr-small-dashed-ring-Green\" stroke=\"#70C262\" mask=\"url(#lr-small-dashed-ring-mask-2)\" transform=\"translate(14.000000, 14.000000) rotate(60.000000) translate(-14.000000, -14.000000) \" xlink:href=\"#lr-small-dashed-ring-path-1\"></use><use id=\"lr-small-dashed-ring-Blue\" stroke=\"#7FA1B7\" mask=\"url(#lr-small-dashed-ring-mask-4)\" xlink:href=\"#lr-small-dashed-ring-path-3\"></use></g></g></g></g></svg>"

/***/ },
/* 96 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 112 112\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-source</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-source-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-source-lr-source\"><g id=\"lr-source-Source-Icon\" transform=\"translate(0.500000, 17.000000)\"><path d=\"M67.6571429,59.94 C67.6571429,53.5261331 62.0031388,48.3266667 55.0285714,48.3266667 C48.054004,48.3266667 42.4,53.5261331 42.4,59.94 C42.4,66.3538669 48.054004,71.5533333 55.0285714,71.5533333 C62.0031388,71.5533333 67.6571429,66.3538669 67.6571429,59.94 Z M35.3090909,59.94 C35.3090909,49.4710722 44.2643371,41.2357576 55.0285714,41.2357576 C65.7928058,41.2357576 74.7480519,49.4710722 74.7480519,59.94 C74.7480519,70.4089278 65.7928058,78.6442424 55.0285714,78.6442424 C44.2643371,78.6442424 35.3090909,70.4089278 35.3090909,59.94 Z\" id=\"lr-source-Oval-14\"></path><g id=\"lr-source-Arrow2\" transform=\"translate(38.942857, 0.000000)\"><path d=\"M13.0857143,33.58685 C13.0857143,35.2437043 14.42886,36.58685 16.0857143,36.58685 C17.7425685,36.58685 19.0857143,35.2437043 19.0857143,33.58685 L19.0857143,5.93974685 C19.0857143,4.2828926 17.7425685,2.93974685 16.0857143,2.93974685 C14.42886,2.93974685 13.0857143,4.2828926 13.0857143,5.93974685 L13.0857143,33.58685 Z\" id=\"lr-source-Path-270\"></path><path d=\"M18.8512231,2.39346675 L16.6646124,0.0364837518 L14.4644156,2.38078951 L0.825367979,16.9131705 C-0.308483663,18.1212874 -0.248279772,20.019828 0.959837134,21.1536796 C2.16795404,22.2875313 4.06649466,22.2273274 5.20034631,21.0192105 L18.8393939,6.48682953 L14.4525864,6.4741523 L26.9202054,19.9131999 C28.0470556,21.1278499 29.9452166,21.1990257 31.1598666,20.0721755 C32.3745166,18.9453253 32.4456924,17.0471644 31.3188422,15.8325144 L18.8512231,2.39346675 Z\" id=\"lr-source-Path-267-Copy-2\"></path></g><g id=\"lr-source-Arrow3\" transform=\"translate(89.667030, 44.117980) rotate(-301.000000) translate(-89.667030, -44.117980) translate(72.667030, 29.617980)\"><g id=\"lr-source-Arrow-Middle\" transform=\"translate(0.195220, 0.343017)\"><path d=\"M13.5714286,24.6533333 C13.5714286,26.3101876 14.9145743,27.6533333 16.5714286,27.6533333 C18.2282828,27.6533333 19.5714286,26.3101876 19.5714286,24.6533333 L19.5714286,5 C19.5714286,3.34314575 18.2282828,2 16.5714286,2 C14.9145743,2 13.5714286,3.34314575 13.5714286,5 L13.5714286,24.6533333 Z\" id=\"lr-source-Path-270\"></path><path d=\"M19.3369374,2.39346675 L17.1503267,0.0364837518 L14.9501299,2.38078951 L1.31108226,16.9131705 C0.177230623,18.1212874 0.237434514,20.019828 1.44555142,21.1536796 C2.65366833,22.2875313 4.55220895,22.2273274 5.68606059,21.0192105 L19.3251082,6.48682953 L14.9383007,6.4741523 L27.4059197,19.9131999 C28.5327699,21.1278499 30.4309309,21.1990257 31.6455809,20.0721755 C32.8602309,18.9453253 32.9314067,17.0471644 31.8045565,15.8325144 L19.3369374,2.39346675 Z\" id=\"lr-source-Path-267-Copy-2\"></path></g></g><g id=\"lr-source-Arrow1\" transform=\"translate(21.677119, 43.698071) scale(-1, 1) rotate(-300.000000) translate(-21.677119, -43.698071) translate(5.177119, 29.198071)\"><g id=\"lr-source-Arrow-Middle\" transform=\"translate(0.000000, -0.000000)\"><path d=\"M13.5714286,25.5466667 C13.5714286,27.2035209 14.9145743,28.5466667 16.5714286,28.5466667 C18.2282828,28.5466667 19.5714286,27.2035209 19.5714286,25.5466667 L19.5714286,5.89333333 C19.5714286,4.23647908 18.2282828,2.89333333 16.5714286,2.89333333 C14.9145743,2.89333333 13.5714286,4.23647908 13.5714286,5.89333333 L13.5714286,25.5466667 Z\" id=\"lr-source-Path-270\"></path><path d=\"M19.3369374,2.39346675 L17.1503267,0.0364837518 L14.9501299,2.38078951 L1.31108226,16.9131705 C0.177230623,18.1212874 0.237434514,20.019828 1.44555142,21.1536796 C2.65366833,22.2875313 4.55220895,22.2273274 5.68606059,21.0192105 L19.3251082,6.48682953 L14.9383007,6.4741523 L27.4059197,19.9131999 C28.5327699,21.1278499 30.4309309,21.1990257 31.6455809,20.0721755 C32.8602309,18.9453253 32.9314067,17.0471644 31.8045565,15.8325144 L19.3369374,2.39346675 Z\" id=\"lr-source-Path-267-Copy-2\"></path></g></g></g></g></g></svg>"

/***/ },
/* 97 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 15 19\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Statistics Icon Green</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-statistics-green-path-1\" x=\"7.0744018\" y=\"4.5927\" width=\"2.6244\" height=\"9.8415\" rx=\"0.6561\"></rect><mask id=\"lr-statistics-green-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"2.6244\" height=\"9.8415\" fill=\"white\"><use xlink:href=\"#lr-statistics-green-path-1\"></use></mask><rect id=\"lr-statistics-green-path-3\" x=\"3.0744018\" y=\"7.37657896\" width=\"2.6244\" height=\"7.05762104\" rx=\"0.6561\"></rect><mask id=\"lr-statistics-green-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"2.6244\" height=\"7.05762104\" fill=\"white\"><use xlink:href=\"#lr-statistics-green-path-3\"></use></mask></defs><g id=\"lr-statistics-green-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2587.000000, -874.000000)\" id=\"lr-statistics-green-Group-8-Copy\" stroke=\"#6CC457\"><g transform=\"translate(2580.027884, 603.738353)\"><g id=\"lr-statistics-green-Statistics-Icon-Green\" transform=\"translate(8.350000, 270.974842)\"><use id=\"lr-statistics-green-Rectangle-38\" mask=\"url(#lr-statistics-green-mask-2)\" stroke-width=\"1.3122\" fill=\"#6CC457\" xlink:href=\"#lr-statistics-green-path-1\"></use><use id=\"lr-statistics-green-Rectangle-38-Copy-2\" mask=\"url(#lr-statistics-green-mask-4)\" stroke-width=\"1.3122\" fill=\"#6CC457\" xlink:href=\"#lr-statistics-green-path-3\"></use><path d=\"M0.360198398,0.343092308 L0.360198398,15.0371768 C0.360198398,15.7604782 0.942727809,16.3468298 1.67136477,16.3468298 L11.7901987,16.3468298\" id=\"lr-statistics-green-Path-11\" stroke-width=\"2\" stroke-linecap=\"round\"></path></g></g></g></g></svg>"

/***/ },
/* 98 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 15 19\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Statistics Icon White</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-statistics-white-path-1\" x=\"7.0744018\" y=\"4.5927\" width=\"2.6244\" height=\"9.8415\" rx=\"0.6561\"></rect><mask id=\"lr-statistics-white-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"2.6244\" height=\"9.8415\" fill=\"white\"><use xlink:href=\"#lr-statistics-white-path-1\"></use></mask><rect id=\"lr-statistics-white-path-3\" x=\"3.0744018\" y=\"7.37657896\" width=\"2.6244\" height=\"7.05762104\" rx=\"0.6561\"></rect><mask id=\"lr-statistics-white-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"2.6244\" height=\"7.05762104\" fill=\"white\"><use xlink:href=\"#lr-statistics-white-path-3\"></use></mask></defs><g id=\"lr-statistics-white-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2525.000000, -874.000000)\" id=\"lr-statistics-white-White-Group\" stroke=\"#FFFFFF\"><g transform=\"translate(2518.000000, 603.738353)\"><g id=\"lr-statistics-white-Statistics-Icon-White\" transform=\"translate(8.350000, 270.974842)\"><use id=\"lr-statistics-white-Rectangle-38\" mask=\"url(#lr-statistics-white-mask-2)\" stroke-width=\"1.3122\" fill=\"#FFFFFF\" xlink:href=\"#lr-statistics-white-path-1\"></use><use id=\"lr-statistics-white-Rectangle-38-Copy-2\" mask=\"url(#lr-statistics-white-mask-4)\" stroke-width=\"1.3122\" fill=\"#FFFFFF\" xlink:href=\"#lr-statistics-white-path-3\"></use><path d=\"M0.360198398,0.343092308 L0.360198398,15.0371768 C0.360198398,15.7604782 0.942727809,16.3468298 1.67136477,16.3468298 L11.7901987,16.3468298\" id=\"lr-statistics-white-Path-11\" stroke-width=\"2\" stroke-linecap=\"round\"></path></g></g></g></g></svg>"

/***/ },
/* 99 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-status-active</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-status-active-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-status-active-lr-status-active\" fill=\"#70C262\"><g id=\"lr-status-active-Active-Circle\" transform=\"translate(1.000000, 1.000000)\"><path d=\"M14,28 C21.7319865,28 28,21.7319865 28,14 C28,6.2680135 21.7319865,0 14,0 C6.2680135,0 9.09494702e-13,6.2680135 9.09494702e-13,14 C9.09494702e-13,21.7319865 6.2680135,28 14,28 Z M19.8825229,14.5367963 L11.6366038,19.8966437 C11.179842,20.1935389 10.8095633,19.9912055 10.8095633,19.4457027 L10.8095633,8.55273729 C10.8095633,8.00679426 11.1855661,7.8086218 11.6366038,8.10179629 L19.8825229,13.4616437 C20.3392847,13.7585389 20.3335605,14.2436218 19.8825229,14.5367963 Z\" id=\"lr-status-active-Combined-Shape\"></path></g></g></g></svg>"

/***/ },
/* 100 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Cancelled Pill Copy</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-status-cancelled-path-1\" x=\"9.09494702e-13\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-status-cancelled-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-status-cancelled-path-1\"></use></mask></defs><g id=\"lr-status-cancelled-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-755.000000, -793.000000)\" id=\"lr-status-cancelled-Cancelled-Pill-Copy\"><g transform=\"translate(755.500000, 793.762919)\"><use id=\"lr-status-cancelled-Rectangle-223\" stroke=\"#000000\" mask=\"url(#lr-status-cancelled-mask-2)\" stroke-width=\"4\" fill=\"#FFFFFF\" xlink:href=\"#lr-status-cancelled-path-1\"></use><rect id=\"lr-status-cancelled-Rectangle-13\" fill=\"#000000\" x=\"8.21666667\" y=\"8.57142857\" width=\"12.5666667\" height=\"2.85714286\" rx=\"1\"></rect></g></g></g></svg>"

/***/ },
/* 101 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Failed and Rejected Pill Copy</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-status-error-path-1\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-status-error-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-status-error-path-1\"></use></mask></defs><g id=\"lr-status-error-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-880.000000, -793.000000)\" id=\"lr-status-error-Failed-and-Rejected-Pill-Copy\" stroke=\"#D0021B\"><g transform=\"translate(880.500000, 793.762919)\"><use id=\"lr-status-error-Rectangle-223\" mask=\"url(#lr-status-error-mask-2)\" stroke-width=\"4\" fill=\"#FFFFFF\" xlink:href=\"#lr-status-error-path-1\"></use><g id=\"lr-status-error-X\" transform=\"translate(14.500000, 10.000000) rotate(-45.000000) translate(-14.500000, -10.000000) translate(8.000000, 3.000000)\" stroke-width=\"2\" stroke-linecap=\"round\"><path d=\"M2.84217094e-14,7 L13,7\" id=\"lr-status-error-Path-230\"></path><path d=\"M6.5,13.5 L6.5,0.5\" id=\"lr-status-error-Path-230-Copy\"></path></g></g></g></g></svg>"

/***/ },
/* 102 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>No Longer Active Pill Copy</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-status-inactive-path-1\" x=\"9.09494702e-13\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-status-inactive-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-status-inactive-path-1\"></use></mask><rect id=\"lr-status-inactive-path-3\" x=\"9.32758621\" y=\"4.75\" width=\"10.3448276\" height=\"10.5\" rx=\"1\"></rect><mask id=\"lr-status-inactive-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"10.3448276\" height=\"10.5\" fill=\"white\"><use xlink:href=\"#lr-status-inactive-path-3\"></use></mask></defs><g id=\"lr-status-inactive-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-1057.000000, -792.000000)\" id=\"lr-status-inactive-No-Longer-Active-Pill-Copy\"><g transform=\"translate(1057.500000, 792.762919)\"><use id=\"lr-status-inactive-Rectangle-223\" stroke=\"#A1A1A1\" mask=\"url(#lr-status-inactive-mask-2)\" stroke-width=\"4\" fill=\"#FFFFFF\" xlink:href=\"#lr-status-inactive-path-1\"></use><use id=\"lr-status-inactive-Rectangle-13\" stroke=\"#979797\" mask=\"url(#lr-status-inactive-mask-4)\" stroke-width=\"2\" fill=\"#A1A1A1\" xlink:href=\"#lr-status-inactive-path-3\"></use></g></g></g></svg>"

/***/ },
/* 103 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 29 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>In Progress Pill Copy</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-status-inprogress-path-1\" x=\"9.09494702e-13\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-status-inprogress-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-status-inprogress-path-1\"></use></mask><path d=\"M19.742728,10.5112346 L11.7716729,15.6158511 C11.3301365,15.8986085 10.9722005,15.70591 10.9722005,15.1863835 L10.9722005,4.81213075 C10.9722005,4.29218501 11.3356698,4.10344933 11.7716729,4.38266313 L19.742728,9.4872797 C20.1842644,9.77003702 20.1787311,10.2320208 19.742728,10.5112346 Z\" id=\"lr-status-inprogress-path-3\"></path><mask id=\"lr-status-inprogress-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"9.09960814\" height=\"11.4923564\" fill=\"white\"><use xlink:href=\"#lr-status-inprogress-path-3\"></use></mask></defs><g id=\"lr-status-inprogress-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-503.000000, -800.000000)\" id=\"lr-status-inprogress-In-Progress-Pill-Copy\" stroke=\"#2492F2\" stroke-width=\"4\"><g transform=\"translate(503.000000, 800.000000)\"><use id=\"lr-status-inprogress-Rectangle-223\" mask=\"url(#lr-status-inprogress-mask-2)\" fill=\"#FFFFFF\" xlink:href=\"#lr-status-inprogress-path-1\"></use><use id=\"lr-status-inprogress-Triangle-3\" mask=\"url(#lr-status-inprogress-mask-4)\" fill=\"#2492F2\" xlink:href=\"#lr-status-inprogress-path-3\"></use></g></g></g></svg>"

/***/ },
/* 104 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Pending Approval Copy 4</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-status-pending-path-1\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-status-pending-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-status-pending-path-1\"></use></mask><path d=\"M16.2133187,10 L19.0902019,4.79610509 C19.3821209,4.26806277 19.1249458,3.83999989 18.5230734,3.83999989 L10.4760013,3.83999989 C9.87086579,3.83999989 9.62035143,4.2742088 9.90887275,4.79610509 L12.7857559,10 L9.90887275,15.2038949 C9.62035143,15.7257912 9.87086579,16.1600001 10.4760013,16.1600001 L18.5230734,16.1600001 C19.1249458,16.1600001 19.3821209,15.7319372 19.0902019,15.2038949 L16.2133187,10 Z\" id=\"lr-status-pending-path-3\"></path><mask id=\"lr-status-pending-mask-4\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"9.42150833\" height=\"12.3200002\" fill=\"white\"><use xlink:href=\"#lr-status-pending-path-3\"></use></mask></defs><g id=\"lr-status-pending-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-394.000000, -821.000000)\" id=\"lr-status-pending-Pending-Approval-Copy-4\" stroke=\"#686768\" stroke-width=\"4\"><g transform=\"translate(394.597694, 821.000000)\"><use id=\"lr-status-pending-Rectangle-223\" mask=\"url(#lr-status-pending-mask-2)\" fill=\"#FFFFFF\" xlink:href=\"#lr-status-pending-path-1\"></use><use id=\"lr-status-pending-Combined-Shape\" mask=\"url(#lr-status-pending-mask-4)\" xlink:href=\"#lr-status-pending-path-3\"></use></g></g></g></svg>"

/***/ },
/* 105 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 30 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-status-stopped</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-status-stopped-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-status-stopped-lr-status-stopped\" fill=\"#D0021B\"><g id=\"lr-status-stopped-Stopped-Circle\" transform=\"translate(1.000000, 1.000000)\"><path d=\"M14,28 C21.7319865,28 28,21.7319865 28,14 C28,6.2680135 21.7319865,0 14,0 C6.2680135,0 0,6.2680135 0,14 C0,21.7319865 6.2680135,28 14,28 Z M9,9.99719572 C9,9.44645973 9.446875,9 9.99719572,9 L18.4028043,9 C18.9535403,9 19.4,9.446875 19.4,9.99719572 L19.4,18.4028043 C19.4,18.9535403 18.953125,19.4 18.4028043,19.4 L9.99719572,19.4 C9.44645973,19.4 9,18.953125 9,18.4028043 L9,9.99719572 Z\" id=\"lr-status-stopped-Combined-Shape\"></path></g></g></g></svg>"

/***/ },
/* 106 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 29 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Done and Approved Pill Copy</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-status-success-path-1\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-status-success-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-status-success-path-1\"></use></mask></defs><g id=\"lr-status-success-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g transform=\"translate(-608.000000, -800.000000)\" id=\"lr-status-success-Done-and-Approved-Pill-Copy\" stroke=\"#70C262\"><g transform=\"translate(608.000000, 800.000000)\"><use id=\"lr-status-success-Rectangle-223\" mask=\"url(#lr-status-success-mask-2)\" stroke-width=\"4\" fill=\"#FFFFFF\" xlink:href=\"#lr-status-success-path-1\"></use><polyline id=\"lr-status-success-Path-229\" stroke-width=\"2\" stroke-linecap=\"round\" points=\"9.17488803 11.2346611 13.4747321 15 20 6\"></polyline></g></g></g></svg>"

/***/ },
/* 107 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 29 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Waiting Approval Pill 37x37 Lt</title><desc>Created with Sketch.</desc><defs><rect id=\"lr-status-waiting-approval-path-1\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" rx=\"10\"></rect><mask id=\"lr-status-waiting-approval-mask-2\" maskContentUnits=\"userSpaceOnUse\" maskUnits=\"objectBoundingBox\" x=\"0\" y=\"0\" width=\"29\" height=\"20\" fill=\"white\"><use xlink:href=\"#lr-status-waiting-approval-path-1\"></use></mask></defs><g id=\"lr-status-waiting-approval-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-status-waiting-approval-Waiting-Approval-Pill-37x37-Lt\"><g id=\"lr-status-waiting-approval-Cancelled-Pill-Copy\"><use id=\"lr-status-waiting-approval-Rectangle-223\" stroke=\"#D8D8D8\" mask=\"url(#lr-status-waiting-approval-mask-2)\" stroke-width=\"4\" fill=\"#FFFFFF\" xlink:href=\"#lr-status-waiting-approval-path-1\"></use><rect id=\"lr-status-waiting-approval-Rectangle-13\" fill=\"#D8D8D8\" x=\"8.21666667\" y=\"8.57142857\" width=\"12.5666667\" height=\"2.85714286\" rx=\"1\"></rect></g></g></g></svg>"

/***/ },
/* 108 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 108 108\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-success</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-success-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-success-lr-success\"><g id=\"lr-success-Success-Icon\" transform=\"translate(11.000000, 10.000000)\"><path d=\"M83.25745,60.1497383 C92.1599682,38.1152324 81.5143889,13.0358191 59.479883,4.1333008 C37.4453771,-4.76921745 12.3659638,5.87636191 3.4634455,27.9108678 C-5.43907275,49.9453737 5.2065066,75.024787 27.2410125,83.9273053 C49.2755184,92.8298235 74.3549317,82.1842442 83.25745,60.1497383 Z M8.09936477,29.7839008 C15.9674355,10.3097424 38.1326916,0.901149366 57.60685,8.76922008 C77.0810084,16.6372908 86.4896014,38.8025469 78.6215307,58.2767053 C70.75346,77.7508637 48.5882038,87.1594567 29.1140455,79.291386 C9.63988709,71.4233153 0.231294064,49.2580591 8.09936477,29.7839008 Z\" id=\"lr-success-Oval-44-Copy\"></path><path d=\"M35.0973586,67.834719 L38.5307328,71.0463337 L41.150997,67.1429066 L66.1512669,29.899819 C67.3825195,28.0656129 66.8937291,25.5805676 65.059523,24.349315 C63.2253168,23.1180624 60.7402715,23.6068528 59.5090189,25.4410589 L34.508749,62.6841466 L40.5623875,61.9923342 L24.6410646,47.0993593 C23.0277347,45.5902333 20.4964839,45.6747073 18.9873578,47.2880372 C17.4782318,48.9013672 17.5627058,51.432618 19.1760358,52.9417441 L35.0973586,67.834719 Z\" id=\"lr-success-Path-138\"></path></g></g></g></svg>"

/***/ },
/* 109 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Artboard</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-test-Artboard\" stroke=\"#70C262\" stroke-width=\"3\" fill=\"none\" fill-rule=\"nonzero\" stroke-linecap=\"round\"><g id=\"lr-test-plus\"><path d=\"M3.92574862e-13,9 L18,9\" id=\"lr-test-Line\"></path><path d=\"M9,8.2600593e-13 L9,18\" id=\"lr-test-Line\"></path></g></g></svg>"

/***/ },
/* 110 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 20 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>Artboard</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-trash-Distribution-Flow\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-trash-Artboard\"><g id=\"lr-trash-Trash-Icon\" transform=\"translate(0.500000, 0.500000)\"><path d=\"M3.90417923,17.1410495 C3.90676669,17.1690348 3.96648259,17.2235489 3.99850233,17.2235489 L15.0014977,17.2235489 C15.0368711,17.2235489 15.0928984,17.1726573 15.0958208,17.1410495 L16.4126733,2.89836833 C16.4085807,2.94263268 16.4609505,3 16.4991283,3 L2.50087166,3 C2.53350405,3 2.59092527,2.93728961 2.58732667,2.89836833 L3.90417923,17.1410495 Z M2.50087166,2 L16.4991283,2 C17.0518945,2 17.4583159,2.45084316 17.4084263,2.99043384 L16.0915737,17.233115 C16.040999,17.7801166 15.5525106,18.2235489 15.0014977,18.2235489 L3.99850233,18.2235489 C3.44704472,18.2235489 2.95831586,17.7727057 2.90842628,17.233115 L1.59157372,2.99043384 C1.54099895,2.44343234 1.94463086,2 2.50087166,2 Z\" id=\"lr-trash-Rectangle\"></path><g id=\"lr-trash-Group-2\" transform=\"translate(6.500000, 4.000000)\"><path d=\"M2.5,11 C2.5,11.2761424 2.72385763,11.5 3,11.5 C3.27614237,11.5 3.5,11.2761424 3.5,11 L3.5,1 C3.5,0.723857625 3.27614237,0.5 3,0.5 C2.72385763,0.5 2.5,0.723857625 2.5,1 L2.5,11 Z\" id=\"lr-trash-Line\"></path><path d=\"M0,11 C0,11.2761424 0.223857625,11.5 0.5,11.5 C0.776142375,11.5 1,11.2761424 1,11 L1,1 C1,0.723857625 0.776142375,0.5 0.5,0.5 C0.223857625,0.5 0,0.723857625 0,1 L0,11 Z\" id=\"lr-trash-Line\"></path><path d=\"M5,11 C5,11.2761424 5.22385763,11.5 5.5,11.5 C5.77614237,11.5 6,11.2761424 6,11 L6,1 C6,0.723857625 5.77614237,0.5 5.5,0.5 C5.22385763,0.5 5,0.723857625 5,1 L5,11 Z\" id=\"lr-trash-Line\"></path></g><g id=\"lr-trash-Group-3\"><path d=\"M18.5,3 C18.7761424,3 19,2.77614237 19,2.5 C19,2.22385763 18.7761424,2 18.5,2 L0.5,2 C0.223857625,2 0,2.22385763 0,2.5 C0,2.77614237 0.223857625,3 0.5,3 L18.5,3 Z\" id=\"lr-trash-Line\"></path><path d=\"M7.75,2.24297333 C7.75,2.11091872 7.64183274,2 7.49175447,2 L11.5082455,2 C11.3629973,2 11.25,2.11581087 11.25,2.24297333 L11.25,0.757026672 C11.25,0.889081284 11.3581673,1 11.5082455,1 L7.49175447,1 C7.63700268,1 7.75,0.884189131 7.75,0.757026672 L7.75,2.24297333 Z M7.49175447,0 L11.5082455,0 C11.9179052,0 12.25,0.344138145 12.25,0.757026672 L12.25,2.24297333 C12.25,2.66106761 11.922421,3 11.5082455,3 L7.49175447,3 C7.08209479,3 6.75,2.65586185 6.75,2.24297333 L6.75,0.757026672 C6.75,0.338932386 7.07757902,0 7.49175447,0 Z\" id=\"lr-trash-Rectangle-2\"></path></g></g></g></g></svg>"

/***/ },
/* 111 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 46 46\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-unidentified-pel</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-unidentified-pel-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-unidentified-pel-lr-unidentified-pel\"><g id=\"lr-unidentified-pel-PEL\" transform=\"translate(14.000000, 2.000000)\"><g id=\"lr-unidentified-pel-User-Icon\" transform=\"translate(0.874655, 0.730000)\"><g id=\"lr-unidentified-pel-PL-Person-Icon\"><path d=\"M2.30492113,11.8652344 C2.30492113,15.2517248 5.05127582,18 8.43606868,18 C11.8163744,18 14.5672162,15.2500688 14.5672162,11.8652344 L14.5672162,8.13476563 C14.5672162,4.74827524 11.8208615,2 8.43606868,2 C5.05576298,2 2.30492113,4.74993124 2.30492113,8.13476563 L2.30492113,11.8652344 Z M8.43606868,0 C12.9267775,0 16.5672162,3.64505265 16.5672162,8.13476563 L16.5672162,11.8652344 C16.5672162,16.3579414 12.9176398,20 8.43606868,20 C3.94535989,20 0.304921135,16.3549474 0.304921135,11.8652344 L0.304921135,8.13476563 C0.304921135,3.64205863 3.95449758,0 8.43606868,0 Z\" id=\"lr-unidentified-pel-Rectangle-308\"></path><path d=\"M26.9252035,31.1436872 L27.9252034,31.1436872 L27.9252035,30.1436873 C27.9252035,29.7902557 27.8736553,29.214702 27.7221905,28.4843746 C27.4726076,27.2809446 27.0236012,26.0653771 26.3229831,24.9093739 C25.0062968,22.7368729 23.0977112,21.5077329 20.895565,20.75279 C20.5542741,20.6357881 20.0112499,20.5027655 19.2779771,20.3482937 C19.0363788,20.2973984 18.7766072,20.244778 18.5011705,20.19076 C17.9408892,20.080879 17.3419896,19.9702276 16.7432846,19.8641464 C16.3841373,19.8005111 16.1043769,19.7524552 15.943361,19.72545 L15.4151028,19.6368516 L15.0486344,20.0275015 C14.9984945,20.0809498 14.8718889,20.1997548 14.6704868,20.362736 C14.3187651,20.6473607 13.8948912,20.9349571 13.4004995,21.2049664 C11.9731542,21.9845033 10.2767208,22.4535392 8.30929574,22.4535392 C6.36783781,22.4535392 4.89295375,21.9998841 3.80387771,21.2566284 C3.18500333,20.8342687 2.83664843,20.4338605 2.71133949,20.2149269 L2.33675493,19.560471 L1.60452116,19.7406369 L0.267297032,20.0696606 L0.745144524,22.0117373 L2.08236865,21.6827136 L0.97555032,21.2084237 C1.24257491,21.674956 1.7887526,22.3027468 2.67647539,22.9085861 C4.09839466,23.8789954 5.96630154,24.4535392 8.30929574,24.4535392 C10.6263228,24.4535392 12.6487329,23.8943762 14.3591372,22.9602481 C15.4007387,22.3913831 16.1174387,21.811406 16.5072724,21.395849 L15.6125458,21.6979006 C15.7678756,21.7239521 16.0417202,21.7709918 16.3943507,21.8334724 C16.9819421,21.9375845 17.5693388,22.0461106 18.1162674,22.153373 C18.3830154,22.205687 18.6337781,22.2564825 18.8657041,22.3053402 C19.5212296,22.4434337 20.0069762,22.5624252 20.2469768,22.6447026 C22.0476451,23.2620103 23.5865836,24.2530955 24.6125941,25.9459883 C25.187214,26.8940975 25.5580035,27.8979132 25.7638628,28.890518 C25.8856633,29.4778116 25.9252035,29.9192913 25.9252035,30.1436872 L26.9252035,29.1436872 L4.29628581,29.1436872 L4.29628581,31.1436872 L26.9252035,31.1436872 Z\" id=\"lr-unidentified-pel-Path-2\"></path></g></g></g><g id=\"lr-unidentified-pel-Group\" transform=\"translate(2.000000, 23.000000)\"><path d=\"M7.03844273,2.68192376 C9.3879083,2.60661854 10.8,4.18526271 10.8,5.64444433 C10.8,6.77456328 10.6134413,7.39917618 9.73542637,8.25182626 C9.07317778,8.89494322 8.95957538,8.97131899 7.85089703,9.61730891 C7.45155676,9.84999117 7.16989914,10.0495875 6.87828351,10.3327786 C5.84667381,11.3345863 5.08571429,13.0588642 5.08571429,14.6619044 C5.08571429,15.3246461 5.62297259,15.8619044 6.28571429,15.8619044 C6.94845599,15.8619044 7.48571429,15.3246461 7.48571429,14.6619044 C7.48571429,13.7215584 7.97475476,12.613429 8.55028792,12.0545223 C8.67930721,11.9292302 8.81365488,11.8340249 9.05915588,11.6909797 C9.45830964,11.466592 9.72870713,11.3090404 10.0240217,11.1104981 C10.4773377,10.8057303 10.9237196,10.4433072 11.4074308,9.97356993 C12.8334528,8.58874411 13.2,7.36151563 13.2,5.64444433 C13.2,2.90119097 10.7495724,0.161741916 6.96155727,0.283155609 C2.76002235,0.417823464 0.8,2.74995573 0.8,5.64444442 C0.8,6.30718612 1.3372583,6.84444442 2,6.84444442 C2.6627417,6.84444442 3.2,6.30718612 3.2,5.64444442 C3.2,3.9769855 4.212294,2.77250765 7.03844273,2.68192376 Z\" id=\"lr-unidentified-pel-Path-28\"></path></g><path d=\"M8.29999995,41.3999984a0,0 0 1,0 0,0a0,0 0 1,0 0,0\"></path></g></g></svg>"

/***/ },
/* 112 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 90 90\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-upload-box</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-upload-box-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-upload-box-lr-upload-box\"><g transform=\"translate(15.000000, 6.000000)\"><g id=\"lr-upload-box-Upload-Box\" transform=\"translate(0.000000, 21.000000)\"><path d=\"M0.5,56L3.5 56 3.5 0 0.5 0z\"></path><path d=\"M53.5,56L56.5 56 56.5 0 53.5 0z\"></path><path d=\"M56.5,56L56.5 53 0.5 53 0.5 56z\"></path><path d=\"M19.5,3 C20.3284271,3 21,2.32842712 21,1.5 C21,0.671572875 20.3284271,0 19.5,0 L2,0 C1.17157288,0 0.5,0.671572875 0.5,1.5 C0.5,2.32842712 1.17157288,3 2,3 L19.5,3 Z\" id=\"lr-upload-box-Line\"></path><path d=\"M55,3 C55.8284271,3 56.5,2.32842712 56.5,1.5 C56.5,0.671572875 55.8284271,0 55,0 L37.2,0 C36.3715729,0 35.7,0.671572875 35.7,1.5 C35.7,2.32842712 36.3715729,3 37.2,3 L55,3 Z\" id=\"lr-upload-box-Line\"></path></g><g id=\"lr-upload-box-Upload-Arrow\" transform=\"translate(16.000000, 0.000000)\"><path d=\"M11.0000002,51.5000009 C11.0000002,52.328428 11.6715731,53.0000009 12.5000002,53.0000009 C13.3284273,53.0000009 14.0000002,52.328428 14.0000002,51.5000009 L14.0000002,3.79591837 C14.0000002,2.96749125 13.3284273,2.29591837 12.5000002,2.29591837 C11.6715731,2.29591837 11.0000002,2.96749125 11.0000002,3.79591837 L11.0000002,51.5000009 Z\" id=\"lr-upload-box-Path-270\"></path><path d=\"M13.6737071,1.90088856 L12.5776533,0.72547161 L11.4805354,1.89989543 L0.962676178,13.158872 C0.397152843,13.7642437 0.4294563,14.7134416 1.03482797,15.278965 C1.64019964,15.8444883 2.58939758,15.8121848 3.15492092,15.2068132 L13.6727801,3.94783659 L11.4796085,3.94684346 L21.8503476,15.0685079 C22.4153224,15.6743915 23.3644907,15.7075546 23.9703743,15.1425798 C24.5762579,14.5776049 24.609421,13.6284366 24.0444462,13.022553 L13.6737071,1.90088856 Z\" id=\"lr-upload-box-Shape\"></path></g></g></g></g></svg>"

/***/ },
/* 113 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 90 90\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-upload</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-upload-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-upload-lr-upload\" fill=\"#70C262\"><g id=\"lr-upload-Upload-Icon\" transform=\"translate(4.000000, 10.000000)\"><g id=\"lr-upload-Upload-Arrow\" transform=\"translate(30.000000, 33.000000)\"><g id=\"lr-upload-Dsit-Arrow1\"><g id=\"lr-upload-Arrow-Middle\" transform=\"translate(0.403226, 0.000000)\"><path d=\"M11.5967742,34.4559182 C11.5967742,35.2843453 12.2683471,35.9559182 13.0967742,35.9559182 C13.9252013,35.9559182 14.5967742,35.2843453 14.5967742,34.4559182 L14.5967742,3.79591837 C14.5967742,2.96749124 13.9252013,2.29591837 13.0967742,2.29591837 C12.2683471,2.29591837 11.5967742,2.96749124 11.5967742,3.79591837 L11.5967742,34.4559182 Z\" id=\"lr-upload-Path-270\"></path><path d=\"M14.2701895,1.90065652 L13.1741357,0.725239572 L12.0770179,1.89966339 L0.78142865,13.991171 C0.215905314,14.5965426 0.248208771,15.5457406 0.853580441,16.1112639 C1.45895211,16.6767872 2.40815006,16.6444838 2.97367339,16.0391121 L14.2692626,3.94760455 L12.0760909,3.94661142 L23.2136815,15.8906536 C23.7786563,16.4965371 24.7278246,16.5297002 25.3337082,15.9647254 C25.9395918,15.3997505 25.9727549,14.4505822 25.40778,13.8446987 L14.2701895,1.90065652 Z\" id=\"lr-upload-Path-267-Copy-2\"></path></g></g></g><g id=\"lr-upload-Cloud-Icon\"><path d=\"M47.5,0.5 C39.6183658,0.5 32.4163245,4.49683231 28.2014182,10.9827705 C27.7500069,11.6774066 27.9471795,12.6064616 28.6418156,13.0578729 C29.3364517,13.5092843 30.2655067,13.3121116 30.7169181,12.6174755 C34.3841234,6.97434478 40.6446749,3.5 47.5,3.5 C58.9581263,3.5 67.4837608,11.9301474 67.4837608,24.0513344 C67.4837608,24.8797615 68.1553337,25.5513344 68.9837608,25.5513344 C69.812188,25.5513344 70.4837608,24.8797615 70.4837608,24.0513344 C70.4837608,10.2656824 60.6074639,0.5 47.5,0.5 Z\" id=\"lr-upload-Oval-3\"></path><path d=\"M24,9.5 C16.7013648,9.5 11.4793091,14.6865953 11.4793091,22.7351685 C11.4793091,23.5635956 12.150882,24.2351685 12.9793091,24.2351685 C13.8077362,24.2351685 14.4793091,23.5635956 14.4793091,22.7351685 C14.4793091,16.3480426 18.3536605,12.5 24,12.5 C29.2467051,12.5 33.5,16.7532949 33.5,22 C33.5,22.8284271 34.1715729,23.5 35,23.5 C35.8284271,23.5 36.5,22.8284271 36.5,22 C36.5,15.0964406 30.9035594,9.5 24,9.5 Z\" id=\"lr-upload-Oval-3-Copy\"></path><path d=\"M0.5,38 C0.5,47.6649831 8.33501688,55.5 18,55.5 C18.8284271,55.5 19.5,54.8284271 19.5,54 C19.5,53.1715729 18.8284271,52.5 18,52.5 C9.99187113,52.5 3.5,46.0081289 3.5,38 C3.5,31.647247 7.51871752,26.1707597 13.4319918,24.2571491 C14.2201751,24.002083 14.6523519,23.1563623 14.3972858,22.3681791 C14.1422197,21.5799958 13.296499,21.147819 12.5083158,21.4028851 C5.36201143,23.71552 0.5,30.3412018 0.5,38 Z\" id=\"lr-upload-Oval-3-Copy-2\"></path><path d=\"M82.5,39 C82.5,29.8873016 75.1126984,22.5 66,22.5 L61.0103392,22.5 C60.181912,22.5 59.5103392,23.1715729 59.5103392,24 C59.5103392,24.8284271 60.181912,25.5 61.0103392,25.5 L66,25.5 C73.4558441,25.5 79.5,31.5441559 79.5,39 C79.5,46.4558441 73.4558441,52.5 66,52.5 C65.1715729,52.5 64.5,53.1715729 64.5,54 C64.5,54.8284271 65.1715729,55.5 66,55.5 C75.1126984,55.5 82.5,48.1126984 82.5,39 Z\" id=\"lr-upload-Oval-3-Copy-3\"></path><path d=\"M66,55.5 C66.8284271,55.5 67.5,54.8284271 67.5,54 C67.5,53.1715729 66.8284271,52.5 66,52.5 L60.4773195,52.5 C59.6488924,52.5 58.9773195,53.1715729 58.9773195,54 C58.9773195,54.8284271 59.6488924,55.5 60.4773195,55.5 L66,55.5 Z\" id=\"lr-upload-Line\"></path><path d=\"M26,55.5 C26.8284271,55.5 27.5,54.8284271 27.5,54 C27.5,53.1715729 26.8284271,52.5 26,52.5 L18,52.5 C17.1715729,52.5 16.5,53.1715729 16.5,54 C16.5,54.8284271 17.1715729,55.5 18,55.5 L26,55.5 Z\" id=\"lr-upload-Line-Copy-2\"></path></g></g></g></g></svg>"

/***/ },
/* 114 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-user</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-user-large-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-user-large-lr-user\" fill=\"#70C262\"><g id=\"lr-user-large-user\" transform=\"translate(1.500000, 5.000000)\"><path d=\"M1.65986492,27.6406154 C1.47795136,28.5192599 1.46279932,29.4939614 1.55007946,30.3883311 C1.56814001,30.5733997 1.58519454,30.7004845 1.59428881,30.7555409 L0.114342946,29.5 L37.1143429,29.5 L35.6654491,30.6117906 C35.6773819,30.5672545 35.7037865,30.4457425 35.7326714,30.2625766 C35.8806983,29.3239019 35.8478406,28.2982505 35.5223299,27.3797702 C35.4669655,27.2235504 35.4035767,27.072515 35.3319089,26.9269134 C34.4602765,25.1560876 33.5636205,24.2512889 32.0160096,23.4127486 C31.3878792,23.0724094 30.3997973,22.7189338 29.1722025,22.3826911 C28.2704398,22.135695 27.2968107,21.912642 26.3221606,21.7184708 C25.9802958,21.650364 25.66316,21.5908275 25.3793087,21.540335 C25.2110442,21.5104034 25.0928315,21.4903843 25.0331566,21.4807241 L26.4463831,20.9342568 C26.0758742,21.3996556 25.4061347,22.0225341 24.4192035,22.6267245 C22.8156118,23.6084287 20.875661,24.1948335 18.6143429,24.1948335 C16.3430033,24.1948335 14.4350544,23.6021635 12.8973116,22.6065446 C11.9434709,21.9889759 11.3125852,21.3493042 10.9708588,20.8660547 L12.5391391,21.4601264 C12.4775869,21.4746092 12.3586284,21.5031192 12.1905347,21.5442448 C11.9084683,21.613255 11.5936937,21.6920819 11.2545229,21.7792992 C10.2867391,22.0281634 9.31955245,22.2937856 8.42092591,22.564148 C7.56235896,22.8224579 6.81322285,23.0713646 6.20920837,23.3029564 C5.81391476,23.4545202 5.49052658,23.595113 5.2526084,23.7184807 C3.08911278,24.8403179 2.45514258,25.3899046 1.90068506,26.810024 C1.80244412,27.0616463 1.72214103,27.339821 1.65986492,27.6406154 Z M4.56212069,22.3868551 C6.64786645,21.3053336 12.195583,20 12.195583,20 C12.195583,20 14.1012147,22.6948335 18.6143429,22.6948335 C23.1274712,22.6948335 25.2728567,20 25.2728567,20 C25.2728567,20 30.3970253,20.8295023 32.7305997,22.0939002 C34.3441874,22.9681886 35.5733973,24.0209354 36.6777127,26.2644844 C37.7820281,28.5080334 37.1143429,31 37.1143429,31 L0.114342946,31 C0.114342946,31 -0.319657203,28.3725796 0.503406811,26.2644844 C1.32647083,24.1563892 2.62078643,23.393495 4.56212069,22.3868551 Z\" id=\"lr-user-large-Rectangle-309\"></path><path d=\"M12.5,12.0092465 C12.5,15.5948426 15.4090178,18.5 19,18.5 C22.5846138,18.5 25.5,15.5902421 25.5,12.0092465 L25.5,7.99075354 C25.5,4.40515742 22.5909822,1.5 19,1.5 C15.4153862,1.5 12.5,4.40975792 12.5,7.99075354 L12.5,12.0092465 Z M19,0 C23.418278,0 27,3.57559919 27,7.99075354 L27,12.0092465 C27,16.4224178 23.4092877,20 19,20 C14.581722,20 11,16.4244008 11,12.0092465 L11,7.99075354 C11,3.57758222 14.5907123,0 19,0 Z\" id=\"lr-user-large-Rectangle-17\"></path></g></g></g></svg>"

/***/ },
/* 115 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 40 40\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>lr-user</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-user-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"nonzero\"><g id=\"lr-user-lr-user\" fill=\"#70C262\"><g id=\"lr-user-user\" transform=\"translate(1.500000, 5.000000)\"><path d=\"M1.65986492,27.6406154 C1.47795136,28.5192599 1.46279932,29.4939614 1.55007946,30.3883311 C1.56814001,30.5733997 1.58519454,30.7004845 1.59428881,30.7555409 L0.114342946,29.5 L37.1143429,29.5 L35.6654491,30.6117906 C35.6773819,30.5672545 35.7037865,30.4457425 35.7326714,30.2625766 C35.8806983,29.3239019 35.8478406,28.2982505 35.5223299,27.3797702 C35.4669655,27.2235504 35.4035767,27.072515 35.3319089,26.9269134 C34.4602765,25.1560876 33.5636205,24.2512889 32.0160096,23.4127486 C31.3878792,23.0724094 30.3997973,22.7189338 29.1722025,22.3826911 C28.2704398,22.135695 27.2968107,21.912642 26.3221606,21.7184708 C25.9802958,21.650364 25.66316,21.5908275 25.3793087,21.540335 C25.2110442,21.5104034 25.0928315,21.4903843 25.0331566,21.4807241 L26.4463831,20.9342568 C26.0758742,21.3996556 25.4061347,22.0225341 24.4192035,22.6267245 C22.8156118,23.6084287 20.875661,24.1948335 18.6143429,24.1948335 C16.3430033,24.1948335 14.4350544,23.6021635 12.8973116,22.6065446 C11.9434709,21.9889759 11.3125852,21.3493042 10.9708588,20.8660547 L12.5391391,21.4601264 C12.4775869,21.4746092 12.3586284,21.5031192 12.1905347,21.5442448 C11.9084683,21.613255 11.5936937,21.6920819 11.2545229,21.7792992 C10.2867391,22.0281634 9.31955245,22.2937856 8.42092591,22.564148 C7.56235896,22.8224579 6.81322285,23.0713646 6.20920837,23.3029564 C5.81391476,23.4545202 5.49052658,23.595113 5.2526084,23.7184807 C3.08911278,24.8403179 2.45514258,25.3899046 1.90068506,26.810024 C1.80244412,27.0616463 1.72214103,27.339821 1.65986492,27.6406154 Z M4.56212069,22.3868551 C6.64786645,21.3053336 12.195583,20 12.195583,20 C12.195583,20 14.1012147,22.6948335 18.6143429,22.6948335 C23.1274712,22.6948335 25.2728567,20 25.2728567,20 C25.2728567,20 30.3970253,20.8295023 32.7305997,22.0939002 C34.3441874,22.9681886 35.5733973,24.0209354 36.6777127,26.2644844 C37.7820281,28.5080334 37.1143429,31 37.1143429,31 L0.114342946,31 C0.114342946,31 -0.319657203,28.3725796 0.503406811,26.2644844 C1.32647083,24.1563892 2.62078643,23.393495 4.56212069,22.3868551 Z\" id=\"lr-user-Rectangle-309\"></path><path d=\"M12.5,12.0092465 C12.5,15.5948426 15.4090178,18.5 19,18.5 C22.5846138,18.5 25.5,15.5902421 25.5,12.0092465 L25.5,7.99075354 C25.5,4.40515742 22.5909822,1.5 19,1.5 C15.4153862,1.5 12.5,4.40975792 12.5,7.99075354 L12.5,12.0092465 Z M19,0 C23.418278,0 27,3.57559919 27,7.99075354 L27,12.0092465 C27,16.4224178 23.4092877,20 19,20 C14.581722,20 11,16.4244008 11,12.0092465 L11,7.99075354 C11,3.57758222 14.5907123,0 19,0 Z\" id=\"lr-user-Rectangle-17\"></path></g></g></g></svg>"

/***/ },
/* 116 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 14 13\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>White List Icon Green</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-whitelist-green-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2588.000000, -776.000000)\" id=\"lr-whitelist-green-Group-8-Copy\"><g transform=\"translate(2580.027884, 603.738353)\"><g id=\"lr-whitelist-green-White-List-Icon-Green\" transform=\"translate(8.000000, 171.262615)\"><g id=\"lr-whitelist-green-Permitted\"><circle id=\"lr-whitelist-green-Oval-13\" fill=\"#6CC457\" cx=\"6.57019986\" cy=\"7.48944258\" r=\"6.5\"></circle><polyline id=\"lr-whitelist-green-Path-13\" stroke=\"#333333\" stroke-width=\"2\" stroke-linecap=\"round\" points=\"3.10185718 8.02071665 5.94694745 10.4230211 9.44544228 4.89619166\"></polyline></g></g></g></g></g></svg>"

/***/ },
/* 117 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 14 13\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>White List Icon Grey</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-whitelist-grey-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2651.000000, -776.000000)\" id=\"lr-whitelist-grey-Group-8-Copy-2\"><g transform=\"translate(2651.000000, 705.738353)\"><g id=\"lr-whitelist-grey-White-List-Icon-Grey\" transform=\"translate(0.000000, 69.262615)\"><g id=\"lr-whitelist-grey-Permitted\"><circle id=\"lr-whitelist-grey-Oval-13\" fill=\"#9B9B9B\" cx=\"6.57019986\" cy=\"7.48944258\" r=\"6.5\"></circle><polyline id=\"lr-whitelist-grey-Path-13\" stroke=\"#333333\" stroke-width=\"2\" stroke-linecap=\"round\" points=\"3.10185718 8.02071665 5.94694745 10.4230211 9.44544228 4.89619166\"></polyline></g></g></g></g></g></svg>"

/***/ },
/* 118 */
/***/ function(module, exports) {

	module.exports = "<svg viewBox=\"0 0 14 13\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><title>White List Icon White</title><desc>Created with Sketch.</desc><defs></defs><g id=\"lr-whitelist-white-Icons\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-2526.000000, -776.000000)\" id=\"lr-whitelist-white-White-Group\"><g transform=\"translate(2518.000000, 603.738353)\"><g id=\"lr-whitelist-white-White-List-Icon-White\" transform=\"translate(8.000000, 171.262615)\"><g id=\"lr-whitelist-white-Permitted\"><circle id=\"lr-whitelist-white-Oval-13\" fill=\"#FFFFFF\" cx=\"6.57019986\" cy=\"7.48944258\" r=\"6.5\"></circle><polyline id=\"lr-whitelist-white-Path-13\" stroke=\"#333333\" stroke-width=\"2\" stroke-linecap=\"round\" points=\"3.10185718 8.02071665 5.94694745 10.4230211 9.44544228 4.89619166\"></polyline></g></g></g></g></g></svg>"

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = UiHeader;
	var docs = {
	  title: "UiHeader",
	  propDetails: [{ title: "textTitle",
	    required: true,
	    type: "string",
	    description: "The title for the header." }, { title: "subHeader",
	    required: false,
	    type: "string",
	    description: "An optional text or component placed to the right of the header." }, { title: "rightSideContent",
	    required: false,
	    type: "component",
	    description: "Content to go on the right side of the header." }, { title: "helpText",
	    required: false,
	    type: "string",
	    description: "Help text to go underneath the header." }]
	};
	
	function UiHeader(props) {
	  // User provides:
	  //  - a title for the header (textTitle) : string
	  //  - an optional text or component to go to the right of the header (subHeader) : string or component
	  //  - optional text or content to go on the right side of the header (rightSideContent) : string or component
	  //  - optional help text underneath the header (helpText) : string
	
	  var textTitle = props.textTitle,
	      subHeader = props.subHeader,
	      rightSideContent = props.rightSideContent,
	      helpText = props.helpText;
	
	
	  return React.createElement(
	    "div",
	    { className: "lr-ui-header" },
	    React.createElement(
	      "h1",
	      { className: "lr-ui-header-text-title" },
	      textTitle,
	      subHeader ? React.createElement(
	        "div",
	        { className: "lr-ui-header-subheader" },
	        subHeader
	      ) : null,
	      rightSideContent ? React.createElement(
	        "div",
	        { className: "lr-ui-header-right-side-content" },
	        rightSideContent
	      ) : null
	    ),
	    helpText !== undefined ? React.createElement(
	      "div",
	      { className: "lr-ui-header-help-text" },
	      helpText
	    ) : null
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	exports.default = UiInput;
	
	var _reactTooltip = __webpack_require__(121);
	
	var _reactTooltip2 = _interopRequireDefault(_reactTooltip);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var docs = {
	  title: "UiInput",
	  propDetails: [{ title: "inputValue",
	    required: true,
	    type: "string",
	    description: "The value for the text field." }, { title: "handleChange",
	    required: true,
	    type: "function",
	    description: "A function to update the state of the parent component that takes in the event of the change." }, { title: "placeholder",
	    required: false,
	    type: "string",
	    description: "An optional placeholder value for the input field." }, { title: "label",
	    required: false,
	    type: "string",
	    description: "A label for the text field." }, { title: "tooltipText",
	    required: false,
	    type: "string",
	    description: "What to display in the react tooltip." }, { title: "tooltipId",
	    required: false,
	    type: "integer",
	    description: "A unique element id for the tooltip to prevent conflicts" }, { title: "tooltipEffect",
	    required: false,
	    type: "string",
	    description: "'solid' or 'float' (defaults to 'solid')." }, { title: "valid",
	    required: false,
	    type: "boolean",
	    description: "Whether or not the input is `valid` - invalid inputs have red underlines." }, { title: "labelShift",
	    required: false,
	    type: "boolean",
	    description: "Dictates the behavior of the label. If true, the label begins as a placeholder and moves to a label on focus." }, { title: "handleEnter",
	    required: false,
	    type: "function",
	    description: "A function to handle the user pressing enter. Takes in the event of the key press." }, { title: "handleBlur",
	    required: false,
	    type: "function",
	    description: "A function that handles the user focusing outside of the search field." }, { title: "size",
	    required: false,
	    type: "integer",
	    description: "A number that sets the width of the input field in characters." }, { title: "formText",
	    required: false,
	    type: "boolean",
	    description: "Whether or not this input is meant for a form (i.e. has a persistent underline.)" }, { title: "disabled",
	    required: false,
	    type: "boolean",
	    description: "Whether or not this input is disabled." }, { title: "isPassword",
	    required: false,
	    type: "boolean",
	    description: "Whether or not this input is of type password (defaults to false)." }, { title: "customAttributes",
	    required: false,
	    type: "object",
	    description: "Allows for passing custom attributes as javascript object." }, { title: "tooltipOnOverflow",
	    required: false,
	    type: "boolean",
	    description: "Whether or not to tooltip only when the input is overflowing.  If 'true', 'tooltipId' is required and tooltip content will be 'tooltipText'." }]
	};
	
	function UiInput(props) {
	  var _extends2;
	
	  // User must pass in:
	  //  - inputValue    : string   : the value of the text field
	  //  - handleChange  : function : updates state in the parent component that takes in the change event
	  // User may pass in:
	  //  - placeholder  : string   : placeholder value for the input field when it's empty
	  //  - disabled     : boolean  : a boolean telling whether or not the input should be disabled (defaults to false)
	  //  - label        : string   : a label for the text field
	  //  - tooltipText  : string   : what to display in the react tooltip
	  //  - tooltipId    : string   : a unique element id for the tooltip to prevent conflicts
	  //  - tooltipEffect: string   : 'solid' or 'float' (defaults to 'solid')
	  //  - valid        : boolean  : a boolean telling whether or not the input is valid
	  //  - labelShift   : boolean  : a boolean telling whether the behavior should change to placeholder shifting into label
	  //  - handleEnter  : function : a function that handles the user pressing 'enter' in the search field
	  //  - handleBlur   : function : a function that handles the user focusing outside of the search field
	  //  - size         : integer  : a number that sets the width of the input field in characters
	  //  - formtext     : boolean  : a boolean telling whether or not this input is meant for a form (i.e. has a persistent underline. This is just a styling change)
	  //  - isPassword   : boolean  : a boolean denoting whether or not this input is of type password (defaults to false)
	
	  var label = props.label,
	      inputValue = props.inputValue,
	      placeholder = props.placeholder,
	      tooltipText = props.tooltipText,
	      tooltipId = props.tooltipId,
	      _props$tooltipEffect = props.tooltipEffect,
	      tooltipEffect = _props$tooltipEffect === undefined ? 'solid' : _props$tooltipEffect,
	      valid = props.valid,
	      labelShift = props.labelShift,
	      handleChange = props.handleChange,
	      handleEnter = props.handleEnter,
	      handleBlur = props.handleBlur,
	      size = props.size,
	      _props$formtext = props.formtext,
	      formtext = _props$formtext === undefined ? false : _props$formtext,
	      disabled = props.disabled,
	      _props$isPassword = props.isPassword,
	      isPassword = _props$isPassword === undefined ? false : _props$isPassword,
	      _props$customAttribut = props.customAttributes,
	      customAttributes = _props$customAttribut === undefined ? {} : _props$customAttribut,
	      _props$tooltipOnOverf = props.tooltipOnOverflow,
	      tooltipOnOverflow = _props$tooltipOnOverf === undefined ? false : _props$tooltipOnOverf;
	
	
	  if (labelShift && placeholder) {
	    console.warn("Placeholder text " + placeholder + " will not be used with shift functionality");
	  };
	
	  // Based on the value of the "valid" prop, the input field will have two states:
	  // "lr-ui-input-input valid" corresponds to the inputValue being valid.
	  // "lr-ui-input-input invalid" corresponds to the inputValue being invalid.
	  // Therefore, all validations must be done in the parent component
	
	  var keyDown = function keyDown(e) {
	    if (e.keyCode === 13 || e.which === 13) {
	      if (handleEnter) {
	        handleEnter(e);
	      }
	    }
	  };
	  // prevent inifinite loops in edge cases. see CJ if you want more details
	  var debouncedBlur = function debouncedBlur(blurFn) {
	    var canBeCalled = true;
	    return function () {
	      if (canBeCalled) {
	        blurFn();
	        canBeCalled = false;
	        setTimeout(function () {
	          canBeCalled = true;
	        }, 0);
	      }
	    };
	  };
	
	  var getInputClasses = function getInputClasses() {
	    var className = "lr-ui-input-input";
	    var populated = inputValue && inputValue.length > 0;
	    className += valid ? " valid" : " invalid";
	    className += populated ? " populated" : "";
	    className += size ? " set-size" : "";
	    className += formtext ? " formtext" : "";
	    className += disabled ? " disabled" : "";
	    return className;
	  };
	
	  var createReactTooltipComponent = function createReactTooltipComponent() {
	    return React.createElement(_reactTooltip2.default, { id: tooltipId, place: "top", type: "dark", effect: tooltipEffect });
	  };
	
	  var getTooltip = function getTooltip() {
	    if (tooltipOnOverflow) {
	      // Find the input we need to check overflow for
	      var query = "[data-for=" + tooltipId + "]";
	      var elem = document.querySelector(query);
	
	      // Overflowing when scrollWidth is greater than the offsetWidth
	      if (elem && elem.offsetWidth < elem.scrollWidth) {
	        return createReactTooltipComponent();
	      }
	    } else if (tooltipText) {
	      return createReactTooltipComponent();
	    } else {
	      return null;
	    }
	  };
	
	  return React.createElement(
	    "div",
	    { className: labelShift ? "lr-ui-input labelShift" : "lr-ui-input", id: "lr-ui-input" },
	    label && !labelShift ? React.createElement(
	      "div",
	      { className: "lr-ui-input-label" },
	      label
	    ) : null,
	    React.createElement("input", _extends({}, customAttributes, (_extends2 = {
	      type: isPassword ? 'password' : 'text',
	      id: "lr-ui-input-input",
	      className: getInputClasses(),
	      placeholder: placeholder,
	      "data-tip": tooltipText,
	      "data-for": tooltipId,
	      size: size ? size : null,
	      value: inputValue
	    }, _defineProperty(_extends2, "placeholder", labelShift ? null : placeholder), _defineProperty(_extends2, "onChange", handleChange), _defineProperty(_extends2, "onKeyDown", keyDown), _defineProperty(_extends2, "onBlur", handleBlur ? debouncedBlur(handleBlur) : null), _defineProperty(_extends2, "disabled", !!disabled), _extends2))),
	    labelShift ? React.createElement(
	      "div",
	      { className: "lr-ui-input-label labelShift", htmlFor: "lr-ui-input-input" },
	      label
	    ) : null,
	    getTooltip()
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};
	
	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();
	
	var _class, _class2, _temp;
	
	/* Decoraters */
	
	/* Utils */
	
	/* CSS */
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(13);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _classnames = __webpack_require__(9);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _staticMethods = __webpack_require__(122);
	
	var _staticMethods2 = _interopRequireDefault(_staticMethods);
	
	var _windowListener = __webpack_require__(124);
	
	var _windowListener2 = _interopRequireDefault(_windowListener);
	
	var _customEvent = __webpack_require__(125);
	
	var _customEvent2 = _interopRequireDefault(_customEvent);
	
	var _isCapture = __webpack_require__(126);
	
	var _isCapture2 = _interopRequireDefault(_isCapture);
	
	var _getPosition = __webpack_require__(127);
	
	var _getPosition2 = _interopRequireDefault(_getPosition);
	
	var _getTipContent = __webpack_require__(128);
	
	var _getTipContent2 = _interopRequireDefault(_getTipContent);
	
	var _aria = __webpack_require__(129);
	
	var _style = __webpack_require__(130);
	
	var _style2 = _interopRequireDefault(_style);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}
	
	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}
	
	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}
	
	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	
	var ReactTooltip = (0, _staticMethods2.default)(_class = (0, _windowListener2.default)(_class = (0, _customEvent2.default)(_class = (0, _isCapture2.default)(_class = (_temp = _class2 = function (_Component) {
	  _inherits(ReactTooltip, _Component);
	
	  function ReactTooltip(props) {
	    _classCallCheck(this, ReactTooltip);
	
	    var _this = _possibleConstructorReturn(this, (ReactTooltip.__proto__ || Object.getPrototypeOf(ReactTooltip)).call(this, props));
	
	    _this.state = {
	      place: 'top', // Direction of tooltip
	      type: 'dark', // Color theme of tooltip
	      effect: 'float', // float or fixed
	      show: false,
	      border: false,
	      placeholder: '',
	      offset: {},
	      extraClass: '',
	      html: false,
	      delayHide: 0,
	      delayShow: 0,
	      event: props.event || null,
	      eventOff: props.eventOff || null,
	      currentEvent: null, // Current mouse event
	      currentTarget: null, // Current target of mouse event
	      ariaProps: (0, _aria.parseAria)(props), // aria- and role attributes
	      isEmptyTip: false,
	      disable: false
	    };
	
	    _this.bind(['showTooltip', 'updateTooltip', 'hideTooltip', 'globalRebuild', 'globalShow', 'globalHide', 'onWindowResize']);
	
	    _this.mount = true;
	    _this.delayShowLoop = null;
	    _this.delayHideLoop = null;
	    _this.intervalUpdateContent = null;
	    return _this;
	  }
	
	  /**
	   * For unify the bind and unbind listener
	   */
	
	  _createClass(ReactTooltip, [{
	    key: 'bind',
	    value: function bind(methodArray) {
	      var _this2 = this;
	
	      methodArray.forEach(function (method) {
	        _this2[method] = _this2[method].bind(_this2);
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _props = this.props;
	      var insecure = _props.insecure;
	      var resizeHide = _props.resizeHide;
	
	      if (insecure) {
	        this.setStyleHeader(); // Set the style to the <link>
	      }
	      this.bindListener(); // Bind listener for tooltip
	      this.bindWindowEvents(resizeHide); // Bind global event for static method
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(props) {
	      var ariaProps = this.state.ariaProps;
	
	      var newAriaProps = (0, _aria.parseAria)(props);
	
	      var isChanged = Object.keys(newAriaProps).some(function (props) {
	        return newAriaProps[props] !== ariaProps[props];
	      });
	      if (isChanged) {
	        this.setState({ ariaProps: newAriaProps });
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.mount = false;
	
	      this.clearTimer();
	
	      this.unbindListener();
	      this.removeScrollListener();
	      this.unbindWindowEvents();
	    }
	
	    /**
	     * Pick out corresponded target elements
	     */
	
	  }, {
	    key: 'getTargetArray',
	    value: function getTargetArray(id) {
	      var targetArray = void 0;
	
	      if (!id) {
	        targetArray = document.querySelectorAll('[data-tip]:not([data-for])');
	      } else {
	        targetArray = document.querySelectorAll('[data-tip][data-for="' + id + '"]');
	      }
	
	      // targetArray is a NodeList, convert it to a real array
	      // I hope I can use Object.values...
	      return Object.keys(targetArray).filter(function (key) {
	        return key !== 'length';
	      }).map(function (key) {
	        return targetArray[key];
	      });
	    }
	
	    /**
	     * Bind listener to the target elements
	     * These listeners used to trigger showing or hiding the tooltip
	     */
	
	  }, {
	    key: 'bindListener',
	    value: function bindListener() {
	      var _this3 = this;
	
	      var _props2 = this.props;
	      var id = _props2.id;
	      var globalEventOff = _props2.globalEventOff;
	
	      var targetArray = this.getTargetArray(id);
	
	      targetArray.forEach(function (target) {
	        var isCaptureMode = _this3.isCapture(target);
	        if (target.getAttribute('currentItem') === null) {
	          target.setAttribute('currentItem', 'false');
	        }
	        _this3.unbindBasicListener(target);
	
	        if (_this3.isCustomEvent(target)) {
	          _this3.customBindListener(target);
	          return;
	        }
	
	        target.addEventListener('mouseenter', _this3.showTooltip, isCaptureMode);
	        if (_this3.state.effect === 'float') {
	          target.addEventListener('mousemove', _this3.updateTooltip, isCaptureMode);
	        }
	        target.addEventListener('mouseleave', _this3.hideTooltip, isCaptureMode);
	      });
	
	      // Global event to hide tooltip
	      if (globalEventOff) {
	        window.removeEventListener(globalEventOff, this.hideTooltip);
	        window.addEventListener(globalEventOff, this.hideTooltip, false);
	      }
	    }
	
	    /**
	     * Unbind listeners on target elements
	     */
	
	  }, {
	    key: 'unbindListener',
	    value: function unbindListener() {
	      var _this4 = this;
	
	      var _props3 = this.props;
	      var id = _props3.id;
	      var globalEventOff = _props3.globalEventOff;
	
	      var targetArray = this.getTargetArray(id);
	      targetArray.forEach(function (target) {
	        _this4.unbindBasicListener(target);
	        if (_this4.isCustomEvent(target)) _this4.customUnbindListener(target);
	      });
	
	      if (globalEventOff) window.removeEventListener(globalEventOff, this.hideTooltip);
	    }
	
	    /**
	     * Invoke this before bind listener and ummount the compont
	     * it is necessary to invloke this even when binding custom event
	     * so that the tooltip can switch between custom and default listener
	     */
	
	  }, {
	    key: 'unbindBasicListener',
	    value: function unbindBasicListener(target) {
	      var isCaptureMode = this.isCapture(target);
	      target.removeEventListener('mouseenter', this.showTooltip, isCaptureMode);
	      target.removeEventListener('mousemove', this.updateTooltip, isCaptureMode);
	      target.removeEventListener('mouseleave', this.hideTooltip, isCaptureMode);
	    }
	
	    /**
	     * When mouse enter, show the tooltip
	     */
	
	  }, {
	    key: 'showTooltip',
	    value: function showTooltip(e, isGlobalCall) {
	      var _this5 = this;
	
	      if (isGlobalCall) {
	        // Don't trigger other elements belongs to other ReactTooltip
	        var targetArray = this.getTargetArray(this.props.id);
	        var isMyElement = targetArray.some(function (ele) {
	          return ele === e.currentTarget;
	        });
	        if (!isMyElement || this.state.show) return;
	      }
	      // Get the tooltip content
	      // calculate in this phrase so that tip width height can be detected
	      var _props4 = this.props;
	      var children = _props4.children;
	      var multiline = _props4.multiline;
	      var getContent = _props4.getContent;
	
	      var originTooltip = e.currentTarget.getAttribute('data-tip');
	      var isMultiline = e.currentTarget.getAttribute('data-multiline') || multiline || false;
	
	      // Generate tootlip content
	      var content = void 0;
	      if (getContent) {
	        if (Array.isArray(getContent)) {
	          content = getContent[0] && getContent[0]();
	        } else {
	          content = getContent();
	        }
	      }
	      var placeholder = (0, _getTipContent2.default)(originTooltip, children, content, isMultiline);
	      var isEmptyTip = typeof placeholder === 'string' && placeholder === '' || placeholder === null;
	
	      // If it is focus event or called by ReactTooltip.show, switch to `solid` effect
	      var switchToSolid = e instanceof window.FocusEvent || isGlobalCall;
	
	      // if it need to skip adding hide listener to scroll
	      var scrollHide = true;
	      if (e.currentTarget.getAttribute('data-scroll-hide')) {
	        scrollHide = e.currentTarget.getAttribute('data-scroll-hide') === 'true';
	      } else if (this.props.scrollHide != null) {
	        scrollHide = this.props.scrollHide;
	      }
	
	      this.setState({
	        placeholder: placeholder,
	        isEmptyTip: isEmptyTip,
	        place: e.currentTarget.getAttribute('data-place') || this.props.place || 'top',
	        type: e.currentTarget.getAttribute('data-type') || this.props.type || 'dark',
	        effect: switchToSolid && 'solid' || e.currentTarget.getAttribute('data-effect') || this.props.effect || 'float',
	        offset: e.currentTarget.getAttribute('data-offset') || this.props.offset || {},
	        html: e.currentTarget.getAttribute('data-html') ? e.currentTarget.getAttribute('data-html') === 'true' : this.props.html || false,
	        delayShow: e.currentTarget.getAttribute('data-delay-show') || this.props.delayShow || 0,
	        delayHide: e.currentTarget.getAttribute('data-delay-hide') || this.props.delayHide || 0,
	        border: e.currentTarget.getAttribute('data-border') ? e.currentTarget.getAttribute('data-border') === 'true' : this.props.border || false,
	        extraClass: e.currentTarget.getAttribute('data-class') || this.props.class || '',
	        disable: e.currentTarget.getAttribute('data-tip-disable') ? e.currentTarget.getAttribute('data-tip-disable') === 'true' : this.props.disable || false
	      }, function () {
	        if (scrollHide) _this5.addScrollListener(e);
	        _this5.updateTooltip(e);
	
	        if (getContent && Array.isArray(getContent)) {
	          _this5.intervalUpdateContent = setInterval(function () {
	            if (_this5.mount) {
	              var _getContent = _this5.props.getContent;
	
	              var _placeholder = (0, _getTipContent2.default)(originTooltip, _getContent[0](), isMultiline);
	              var _isEmptyTip = typeof _placeholder === 'string' && _placeholder === '';
	              _this5.setState({
	                placeholder: _placeholder,
	                isEmptyTip: _isEmptyTip
	              });
	            }
	          }, getContent[1]);
	        }
	      });
	    }
	
	    /**
	     * When mouse hover, updatetooltip
	     */
	
	  }, {
	    key: 'updateTooltip',
	    value: function updateTooltip(e) {
	      var _this6 = this;
	
	      var _state = this.state;
	      var delayShow = _state.delayShow;
	      var show = _state.show;
	      var isEmptyTip = _state.isEmptyTip;
	      var disable = _state.disable;
	      var afterShow = this.props.afterShow;
	      var placeholder = this.state.placeholder;
	
	      var delayTime = show ? 0 : parseInt(delayShow, 10);
	      var eventTarget = e.currentTarget;
	
	      if (isEmptyTip || disable) return; // if the tooltip is empty, disable the tooltip
	      var updateState = function updateState() {
	        if (Array.isArray(placeholder) && placeholder.length > 0 || placeholder) {
	          (function () {
	            var isInvisible = !_this6.state.show;
	            _this6.setState({
	              currentEvent: e,
	              currentTarget: eventTarget,
	              show: true
	            }, function () {
	              _this6.updatePosition();
	              if (isInvisible && afterShow) afterShow();
	            });
	          })();
	        }
	      };
	
	      clearTimeout(this.delayShowLoop);
	      if (delayShow) {
	        this.delayShowLoop = setTimeout(updateState, delayTime);
	      } else {
	        updateState();
	      }
	    }
	
	    /**
	     * When mouse leave, hide tooltip
	     */
	
	  }, {
	    key: 'hideTooltip',
	    value: function hideTooltip(e, hasTarget) {
	      var _this7 = this;
	
	      var _state2 = this.state;
	      var delayHide = _state2.delayHide;
	      var isEmptyTip = _state2.isEmptyTip;
	      var disable = _state2.disable;
	      var afterHide = this.props.afterHide;
	
	      if (!this.mount) return;
	      if (isEmptyTip || disable) return; // if the tooltip is empty, disable the tooltip
	      if (hasTarget) {
	        // Don't trigger other elements belongs to other ReactTooltip
	        var targetArray = this.getTargetArray(this.props.id);
	        var isMyElement = targetArray.some(function (ele) {
	          return ele === e.currentTarget;
	        });
	        if (!isMyElement || !this.state.show) return;
	      }
	      var resetState = function resetState() {
	        var isVisible = _this7.state.show;
	        _this7.setState({
	          show: false
	        }, function () {
	          _this7.removeScrollListener();
	          if (isVisible && afterHide) afterHide();
	        });
	      };
	
	      this.clearTimer();
	      if (delayHide) {
	        this.delayHideLoop = setTimeout(resetState, parseInt(delayHide, 10));
	      } else {
	        resetState();
	      }
	    }
	
	    /**
	     * Add scroll eventlistener when tooltip show
	     * automatically hide the tooltip when scrolling
	     */
	
	  }, {
	    key: 'addScrollListener',
	    value: function addScrollListener(e) {
	      var isCaptureMode = this.isCapture(e.currentTarget);
	      window.addEventListener('scroll', this.hideTooltip, isCaptureMode);
	    }
	  }, {
	    key: 'removeScrollListener',
	    value: function removeScrollListener() {
	      window.removeEventListener('scroll', this.hideTooltip);
	    }
	
	    // Calculation the position
	
	  }, {
	    key: 'updatePosition',
	    value: function updatePosition() {
	      var _this8 = this;
	
	      var _state3 = this.state;
	      var currentEvent = _state3.currentEvent;
	      var currentTarget = _state3.currentTarget;
	      var place = _state3.place;
	      var effect = _state3.effect;
	      var offset = _state3.offset;
	
	      var node = _reactDom2.default.findDOMNode(this);
	      var result = (0, _getPosition2.default)(currentEvent, currentTarget, node, place, effect, offset);
	
	      if (result.isNewState) {
	        // Switch to reverse placement
	        return this.setState(result.newState, function () {
	          _this8.updatePosition();
	        });
	      }
	      // Set tooltip position
	      node.style.left = result.position.left + 'px';
	      node.style.top = result.position.top + 'px';
	    }
	
	    /**
	     * Set style tag in header
	     * in this way we can insert default css
	     */
	
	  }, {
	    key: 'setStyleHeader',
	    value: function setStyleHeader() {
	      if (!document.getElementsByTagName('head')[0].querySelector('style[id="react-tooltip"]')) {
	        var tag = document.createElement('style');
	        tag.id = 'react-tooltip';
	        tag.innerHTML = _style2.default;
	        document.getElementsByTagName('head')[0].appendChild(tag);
	      }
	    }
	
	    /**
	     * CLear all kinds of timeout of interval
	     */
	
	  }, {
	    key: 'clearTimer',
	    value: function clearTimer() {
	      clearTimeout(this.delayShowLoop);
	      clearTimeout(this.delayHideLoop);
	      clearInterval(this.intervalUpdateContent);
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _state4 = this.state;
	      var placeholder = _state4.placeholder;
	      var extraClass = _state4.extraClass;
	      var html = _state4.html;
	      var ariaProps = _state4.ariaProps;
	      var disable = _state4.disable;
	      var isEmptyTip = _state4.isEmptyTip;
	
	      var tooltipClass = (0, _classnames2.default)('__react_component_tooltip', { 'show': this.state.show && !disable && !isEmptyTip }, { 'border': this.state.border }, { 'place-top': this.state.place === 'top' }, { 'place-bottom': this.state.place === 'bottom' }, { 'place-left': this.state.place === 'left' }, { 'place-right': this.state.place === 'right' }, { 'type-dark': this.state.type === 'dark' }, { 'type-success': this.state.type === 'success' }, { 'type-warning': this.state.type === 'warning' }, { 'type-error': this.state.type === 'error' }, { 'type-info': this.state.type === 'info' }, { 'type-light': this.state.type === 'light' });
	      if (html) {
	        return _react2.default.createElement('div', _extends({ className: tooltipClass + ' ' + extraClass
	        }, ariaProps, {
	          'data-id': 'tooltip',
	          dangerouslySetInnerHTML: { __html: placeholder } }));
	      } else {
	        return _react2.default.createElement('div', _extends({ className: tooltipClass + ' ' + extraClass
	        }, ariaProps, {
	          'data-id': 'tooltip' }), placeholder);
	      }
	    }
	  }]);
	
	  return ReactTooltip;
	}(_react.Component), _class2.propTypes = {
	  children: _react.PropTypes.any,
	  place: _react.PropTypes.string,
	  type: _react.PropTypes.string,
	  effect: _react.PropTypes.string,
	  offset: _react.PropTypes.object,
	  multiline: _react.PropTypes.bool,
	  border: _react.PropTypes.bool,
	  insecure: _react.PropTypes.bool,
	  class: _react.PropTypes.string,
	  id: _react.PropTypes.string,
	  html: _react.PropTypes.bool,
	  delayHide: _react.PropTypes.number,
	  delayShow: _react.PropTypes.number,
	  event: _react.PropTypes.string,
	  eventOff: _react.PropTypes.string,
	  watchWindow: _react.PropTypes.bool,
	  isCapture: _react.PropTypes.bool,
	  globalEventOff: _react.PropTypes.string,
	  getContent: _react.PropTypes.any,
	  afterShow: _react.PropTypes.func,
	  afterHide: _react.PropTypes.func,
	  disable: _react.PropTypes.bool,
	  scrollHide: _react.PropTypes.bool,
	  resizeHide: _react.PropTypes.bool
	}, _class2.defaultProps = {
	  insecure: true,
	  resizeHide: true
	}, _temp)) || _class) || _class) || _class) || _class;
	
	/* export default not fit for standalone, it will exports {default:...} */
	
	module.exports = ReactTooltip;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports.default = function (target) {
	  /**
	   * Hide all tooltip
	   * @trigger ReactTooltip.hide()
	   */
	  target.hide = function (target) {
	    dispatchGlobalEvent(_constant2.default.GLOBAL.HIDE, { target: target });
	  };
	
	  /**
	   * Rebuild all tooltip
	   * @trigger ReactTooltip.rebuild()
	   */
	  target.rebuild = function () {
	    dispatchGlobalEvent(_constant2.default.GLOBAL.REBUILD);
	  };
	
	  /**
	   * Show specific tooltip
	   * @trigger ReactTooltip.show()
	   */
	  target.show = function (target) {
	    dispatchGlobalEvent(_constant2.default.GLOBAL.SHOW, { target: target });
	  };
	
	  target.prototype.globalRebuild = function () {
	    if (this.mount) {
	      this.unbindListener();
	      this.bindListener();
	    }
	  };
	
	  target.prototype.globalShow = function (event) {
	    if (this.mount) {
	      // Create a fake event, specific show will limit the type to `solid`
	      // only `float` type cares e.clientX e.clientY
	      var e = { currentTarget: event.detail.target };
	      this.showTooltip(e, true);
	    }
	  };
	
	  target.prototype.globalHide = function (event) {
	    if (this.mount) {
	      var hasTarget = event && event.detail && event.detail.target && true || false;
	      this.hideTooltip({ currentTarget: hasTarget && event.detail.target }, hasTarget);
	    }
	  };
	};
	
	var _constant = __webpack_require__(123);
	
	var _constant2 = _interopRequireDefault(_constant);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}
	
	var dispatchGlobalEvent = function dispatchGlobalEvent(eventName, opts) {
	  // Compatibale with IE
	  // @see http://stackoverflow.com/questions/26596123/internet-explorer-9-10-11-event-constructor-doesnt-work
	  var event = void 0;
	
	  if (typeof window.CustomEvent === 'function') {
	    event = new window.CustomEvent(eventName, { detail: opts });
	  } else {
	    event = document.createEvent('Event');
	    event.initEvent(eventName, false, true);
	    event.detail = opts;
	  }
	
	  window.dispatchEvent(event);
	}; /**
	    * Static methods for react-tooltip
	    */

/***/ },
/* 123 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = {
	
	  GLOBAL: {
	    HIDE: '__react_tooltip_hide_event',
	    REBUILD: '__react_tooltip_rebuild_event',
	    SHOW: '__react_tooltip_show_event'
	  }
	};

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports.default = function (target) {
	  target.prototype.bindWindowEvents = function (resizeHide) {
	    // ReactTooltip.hide
	    window.removeEventListener(_constant2.default.GLOBAL.HIDE, this.globalHide);
	    window.addEventListener(_constant2.default.GLOBAL.HIDE, this.globalHide, false);
	
	    // ReactTooltip.rebuild
	    window.removeEventListener(_constant2.default.GLOBAL.REBUILD, this.globalRebuild);
	    window.addEventListener(_constant2.default.GLOBAL.REBUILD, this.globalRebuild, false);
	
	    // ReactTooltip.show
	    window.removeEventListener(_constant2.default.GLOBAL.SHOW, this.globalShow);
	    window.addEventListener(_constant2.default.GLOBAL.SHOW, this.globalShow, false);
	
	    // Resize
	    if (resizeHide) {
	      window.removeEventListener('resize', this.onWindowResize);
	      window.addEventListener('resize', this.onWindowResize, false);
	    }
	  };
	
	  target.prototype.unbindWindowEvents = function () {
	    window.removeEventListener(_constant2.default.GLOBAL.HIDE, this.globalHide);
	    window.removeEventListener(_constant2.default.GLOBAL.REBUILD, this.globalRebuild);
	    window.removeEventListener(_constant2.default.GLOBAL.SHOW, this.globalShow);
	    window.removeEventListener('resize', this.onWindowResize);
	  };
	
	  /**
	   * invoked by resize event of window
	   */
	  target.prototype.onWindowResize = function () {
	    if (!this.mount) return;
	    this.hideTooltip();
	  };
	};
	
	var _constant = __webpack_require__(123);
	
	var _constant2 = _interopRequireDefault(_constant);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

/***/ },
/* 125 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports.default = function (target) {
	  target.prototype.isCustomEvent = function (ele) {
	    var event = this.state.event;
	
	    return event || !!ele.getAttribute('data-event');
	  };
	
	  /* Bind listener for custom event */
	  target.prototype.customBindListener = function (ele) {
	    var _this = this;
	
	    var _state = this.state;
	    var event = _state.event;
	    var eventOff = _state.eventOff;
	
	    var dataEvent = ele.getAttribute('data-event') || event;
	    var dataEventOff = ele.getAttribute('data-event-off') || eventOff;
	
	    dataEvent.split(' ').forEach(function (event) {
	      ele.removeEventListener(event, customListener);
	      customListener = checkStatus.bind(_this, dataEventOff);
	      ele.addEventListener(event, customListener, false);
	    });
	    if (dataEventOff) {
	      dataEventOff.split(' ').forEach(function (event) {
	        ele.removeEventListener(event, _this.hideTooltip);
	        ele.addEventListener(event, _this.hideTooltip, false);
	      });
	    }
	  };
	
	  /* Unbind listener for custom event */
	  target.prototype.customUnbindListener = function (ele) {
	    var _state2 = this.state;
	    var event = _state2.event;
	    var eventOff = _state2.eventOff;
	
	    var dataEvent = event || ele.getAttribute('data-event');
	    var dataEventOff = eventOff || ele.getAttribute('data-event-off');
	
	    ele.removeEventListener(dataEvent, customListener);
	    if (dataEventOff) ele.removeEventListener(dataEventOff, this.hideTooltip);
	  };
	};
	
	/**
	 * Custom events to control showing and hiding of tooltip
	 *
	 * @attributes
	 * - `event` {String}
	 * - `eventOff` {String}
	 */
	
	var checkStatus = function checkStatus(dataEventOff, e) {
	  var show = this.state.show;
	  var id = this.props.id;
	
	  var dataIsCapture = e.currentTarget.getAttribute('data-iscapture');
	  var isCapture = dataIsCapture && dataIsCapture === 'true' || this.props.isCapture;
	  var currentItem = e.currentTarget.getAttribute('currentItem');
	
	  if (!isCapture) e.stopPropagation();
	  if (show && currentItem === 'true') {
	    if (!dataEventOff) this.hideTooltip(e);
	  } else {
	    e.currentTarget.setAttribute('currentItem', 'true');
	    setUntargetItems(e.currentTarget, this.getTargetArray(id));
	    this.showTooltip(e);
	  }
	};
	
	var setUntargetItems = function setUntargetItems(currentTarget, targetArray) {
	  for (var i = 0; i < targetArray.length; i++) {
	    if (currentTarget !== targetArray[i]) {
	      targetArray[i].setAttribute('currentItem', 'false');
	    } else {
	      targetArray[i].setAttribute('currentItem', 'true');
	    }
	  }
	};
	
	var customListener = void 0;

/***/ },
/* 126 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports.default = function (target) {
	  target.prototype.isCapture = function (currentTarget) {
	    var dataIsCapture = currentTarget.getAttribute('data-iscapture');
	    return dataIsCapture && dataIsCapture === 'true' || this.props.isCapture || false;
	  };
	};

/***/ },
/* 127 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports.default = function (e, target, node, place, effect, offset) {
	  var tipWidth = node.clientWidth;
	  var tipHeight = node.clientHeight;
	
	  var _getCurrentOffset = getCurrentOffset(e, target, effect);
	
	  var mouseX = _getCurrentOffset.mouseX;
	  var mouseY = _getCurrentOffset.mouseY;
	
	  var defaultOffset = getDefaultPosition(effect, target.clientWidth, target.clientHeight, tipWidth, tipHeight);
	
	  var _calculateOffset = calculateOffset(offset);
	
	  var extraOffset_X = _calculateOffset.extraOffset_X;
	  var extraOffset_Y = _calculateOffset.extraOffset_Y;
	
	  var windowWidth = window.innerWidth;
	  var windowHeight = window.innerHeight;
	
	  var _getParent = getParent(node);
	
	  var parentTop = _getParent.parentTop;
	  var parentLeft = _getParent.parentLeft;
	
	  // Get the edge offset of the tooltip
	
	  var getTipOffsetLeft = function getTipOffsetLeft(place) {
	    var offset_X = defaultOffset[place].l;
	    return mouseX + offset_X + extraOffset_X;
	  };
	  var getTipOffsetRight = function getTipOffsetRight(place) {
	    var offset_X = defaultOffset[place].r;
	    return mouseX + offset_X + extraOffset_X;
	  };
	  var getTipOffsetTop = function getTipOffsetTop(place) {
	    var offset_Y = defaultOffset[place].t;
	    return mouseY + offset_Y + extraOffset_Y;
	  };
	  var getTipOffsetBottom = function getTipOffsetBottom(place) {
	    var offset_Y = defaultOffset[place].b;
	    return mouseY + offset_Y + extraOffset_Y;
	  };
	
	  // Judge if the tooltip has over the window(screen)
	  var outsideVertical = function outsideVertical() {
	    var result = false;
	    var newPlace = void 0;
	    if (getTipOffsetTop('left') < 0 && getTipOffsetBottom('left') <= windowHeight && getTipOffsetBottom('bottom') <= windowHeight) {
	      result = true;
	      newPlace = 'bottom';
	    } else if (getTipOffsetBottom('left') > windowHeight && getTipOffsetTop('left') >= 0 && getTipOffsetTop('top') >= 0) {
	      result = true;
	      newPlace = 'top';
	    }
	    return { result: result, newPlace: newPlace };
	  };
	  var outsideLeft = function outsideLeft() {
	    var _outsideVertical = outsideVertical();
	
	    var result = _outsideVertical.result;
	    var newPlace = _outsideVertical.newPlace; // Deal with vertical as first priority
	
	    if (result && outsideHorizontal().result) {
	      return { result: false }; // No need to change, if change to vertical will out of space
	    }
	    if (!result && getTipOffsetLeft('left') < 0 && getTipOffsetRight('right') <= windowWidth) {
	      result = true; // If vertical ok, but let out of side and right won't out of side
	      newPlace = 'right';
	    }
	    return { result: result, newPlace: newPlace };
	  };
	  var outsideRight = function outsideRight() {
	    var _outsideVertical2 = outsideVertical();
	
	    var result = _outsideVertical2.result;
	    var newPlace = _outsideVertical2.newPlace;
	
	    if (result && outsideHorizontal().result) {
	      return { result: false }; // No need to change, if change to vertical will out of space
	    }
	    if (!result && getTipOffsetRight('right') > windowWidth && getTipOffsetLeft('left') >= 0) {
	      result = true;
	      newPlace = 'left';
	    }
	    return { result: result, newPlace: newPlace };
	  };
	
	  var outsideHorizontal = function outsideHorizontal() {
	    var result = false;
	    var newPlace = void 0;
	    if (getTipOffsetLeft('top') < 0 && getTipOffsetRight('top') <= windowWidth && getTipOffsetRight('right') <= windowWidth) {
	      result = true;
	      newPlace = 'right';
	    } else if (getTipOffsetRight('top') > windowWidth && getTipOffsetLeft('top') >= 0 && getTipOffsetLeft('left') >= 0) {
	      result = true;
	      newPlace = 'left';
	    }
	    return { result: result, newPlace: newPlace };
	  };
	  var outsideTop = function outsideTop() {
	    var _outsideHorizontal = outsideHorizontal();
	
	    var result = _outsideHorizontal.result;
	    var newPlace = _outsideHorizontal.newPlace;
	
	    if (result && outsideVertical().result) {
	      return { result: false };
	    }
	    if (!result && getTipOffsetTop('top') < 0 && getTipOffsetBottom('bottom') <= windowHeight) {
	      result = true;
	      newPlace = 'bottom';
	    }
	    return { result: result, newPlace: newPlace };
	  };
	  var outsideBottom = function outsideBottom() {
	    var _outsideHorizontal2 = outsideHorizontal();
	
	    var result = _outsideHorizontal2.result;
	    var newPlace = _outsideHorizontal2.newPlace;
	
	    if (result && outsideVertical().result) {
	      return { result: false };
	    }
	    if (!result && getTipOffsetBottom('bottom') > windowHeight && getTipOffsetTop('top') >= 0) {
	      result = true;
	      newPlace = 'top';
	    }
	    return { result: result, newPlace: newPlace };
	  };
	
	  // Return new state to change the placement to the reverse if possible
	  var outsideLeftResult = outsideLeft();
	  var outsideRightResult = outsideRight();
	  var outsideTopResult = outsideTop();
	  var outsideBottomResult = outsideBottom();
	
	  if (place === 'left' && outsideLeftResult.result) {
	    return {
	      isNewState: true,
	      newState: { place: outsideLeftResult.newPlace }
	    };
	  } else if (place === 'right' && outsideRightResult.result) {
	    return {
	      isNewState: true,
	      newState: { place: outsideRightResult.newPlace }
	    };
	  } else if (place === 'top' && outsideTopResult.result) {
	    return {
	      isNewState: true,
	      newState: { place: outsideTopResult.newPlace }
	    };
	  } else if (place === 'bottom' && outsideBottomResult.result) {
	    return {
	      isNewState: true,
	      newState: { place: outsideBottomResult.newPlace }
	    };
	  }
	
	  // Return tooltip offset position
	  return {
	    isNewState: false,
	    position: {
	      left: parseInt(getTipOffsetLeft(place) - parentLeft, 10),
	      top: parseInt(getTipOffsetTop(place) - parentTop, 10)
	    }
	  };
	};
	
	// Get current mouse offset
	var getCurrentOffset = function getCurrentOffset(e, currentTarget, effect) {
	  var boundingClientRect = currentTarget.getBoundingClientRect();
	  var targetTop = boundingClientRect.top;
	  var targetLeft = boundingClientRect.left;
	  var targetWidth = currentTarget.clientWidth;
	  var targetHeight = currentTarget.clientHeight;
	
	  if (effect === 'float') {
	    return {
	      mouseX: e.clientX,
	      mouseY: e.clientY
	    };
	  }
	  return {
	    mouseX: targetLeft + targetWidth / 2,
	    mouseY: targetTop + targetHeight / 2
	  };
	};
	
	// List all possibility of tooltip final offset
	// This is useful in judging if it is necessary for tooltip to switch position when out of window
	/**
	 * Calculate the position of tooltip
	 *
	 * @params
	 * - `e` {Event} the event of current mouse
	 * - `target` {Element} the currentTarget of the event
	 * - `node` {DOM} the react-tooltip object
	 * - `place` {String} top / right / bottom / left
	 * - `effect` {String} float / solid
	 * - `offset` {Object} the offset to default position
	 *
	 * @return {Object
	 * - `isNewState` {Bool} required
	 * - `newState` {Object}
	 * - `position` {OBject} {left: {Number}, top: {Number}}
	 */
	var getDefaultPosition = function getDefaultPosition(effect, targetWidth, targetHeight, tipWidth, tipHeight) {
	  var top = void 0;
	  var right = void 0;
	  var bottom = void 0;
	  var left = void 0;
	  var disToMouse = 3;
	  var triangleHeight = 2;
	  var cursorHeight = 12; // Optimize for float bottom only, cause the cursor will hide the tooltip
	
	  if (effect === 'float') {
	    top = {
	      l: -(tipWidth / 2),
	      r: tipWidth / 2,
	      t: -(tipHeight + disToMouse + triangleHeight),
	      b: -disToMouse
	    };
	    bottom = {
	      l: -(tipWidth / 2),
	      r: tipWidth / 2,
	      t: disToMouse + cursorHeight,
	      b: tipHeight + disToMouse + triangleHeight + cursorHeight
	    };
	    left = {
	      l: -(tipWidth + disToMouse + triangleHeight),
	      r: -disToMouse,
	      t: -(tipHeight / 2),
	      b: tipHeight / 2
	    };
	    right = {
	      l: disToMouse,
	      r: tipWidth + disToMouse + triangleHeight,
	      t: -(tipHeight / 2),
	      b: tipHeight / 2
	    };
	  } else if (effect === 'solid') {
	    top = {
	      l: -(tipWidth / 2),
	      r: tipWidth / 2,
	      t: -(targetHeight / 2 + tipHeight + triangleHeight),
	      b: -(targetHeight / 2)
	    };
	    bottom = {
	      l: -(tipWidth / 2),
	      r: tipWidth / 2,
	      t: targetHeight / 2,
	      b: targetHeight / 2 + tipHeight + triangleHeight
	    };
	    left = {
	      l: -(tipWidth + targetWidth / 2 + triangleHeight),
	      r: -(targetWidth / 2),
	      t: -(tipHeight / 2),
	      b: tipHeight / 2
	    };
	    right = {
	      l: targetWidth / 2,
	      r: tipWidth + targetWidth / 2 + triangleHeight,
	      t: -(tipHeight / 2),
	      b: tipHeight / 2
	    };
	  }
	
	  return { top: top, bottom: bottom, left: left, right: right };
	};
	
	// Consider additional offset into position calculation
	var calculateOffset = function calculateOffset(offset) {
	  var extraOffset_X = 0;
	  var extraOffset_Y = 0;
	
	  if (Object.prototype.toString.apply(offset) === '[object String]') {
	    offset = JSON.parse(offset.toString().replace(/\'/g, '\"'));
	  }
	  for (var key in offset) {
	    if (key === 'top') {
	      extraOffset_Y -= parseInt(offset[key], 10);
	    } else if (key === 'bottom') {
	      extraOffset_Y += parseInt(offset[key], 10);
	    } else if (key === 'left') {
	      extraOffset_X -= parseInt(offset[key], 10);
	    } else if (key === 'right') {
	      extraOffset_X += parseInt(offset[key], 10);
	    }
	  }
	
	  return { extraOffset_X: extraOffset_X, extraOffset_Y: extraOffset_Y };
	};
	
	// Get the offset of the parent elements
	var getParent = function getParent(currentTarget) {
	  var currentParent = currentTarget;
	  while (currentParent) {
	    if (window.getComputedStyle(currentParent).getPropertyValue('transform') !== 'none') break;
	    currentParent = currentParent.parentElement;
	  }
	
	  var parentTop = currentParent && currentParent.getBoundingClientRect().top || 0;
	  var parentLeft = currentParent && currentParent.getBoundingClientRect().left || 0;
	
	  return { parentTop: parentTop, parentLeft: parentLeft };
	};

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports.default = function (tip, children, getContent, multiline) {
	  if (children) return children;
	  if (getContent !== undefined && getContent !== null) return getContent; // getContent can be 0, '', etc.
	  if (getContent === null) return null; // Tip not exist and childern is null or undefined
	
	  var regexp = /<br\s*\/?>/;
	  if (!multiline || multiline === 'false' || !regexp.test(tip)) {
	    // No trim(), so that user can keep their input
	    return tip;
	  }
	
	  // Multiline tooltip content
	  return tip.split(regexp).map(function (d, i) {
	    return _react2.default.createElement('span', { key: i, className: 'multi-line' }, d);
	  });
	};
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}

/***/ },
/* 129 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.parseAria = parseAria;
	/**
	 * Support aria- and role in ReactTooltip
	 *
	 * @params props {Object}
	 * @return {Object}
	 */
	function parseAria(props) {
	  var ariaObj = {};
	  Object.keys(props).filter(function (prop) {
	    // aria-xxx and role is acceptable
	    return (/(^aria-\w+$|^role$)/.test(prop)
	    );
	  }).forEach(function (prop) {
	    ariaObj[prop] = props[prop];
	  });
	
	  return ariaObj;
	}

/***/ },
/* 130 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = '.__react_component_tooltip{border-radius:3px;display:inline-block;font-size:13px;left:-999em;opacity:0;padding:8px 21px;position:fixed;pointer-events:none;transition:opacity 0.3s ease-out;top:-999em;visibility:hidden;z-index:999}.__react_component_tooltip:before,.__react_component_tooltip:after{content:"";width:0;height:0;position:absolute}.__react_component_tooltip.show{opacity:0.9;margin-top:0px;margin-left:0px;visibility:visible}.__react_component_tooltip.type-dark{color:#fff;background-color:#222}.__react_component_tooltip.type-dark.place-top:after{border-top-color:#222;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-dark.place-bottom:after{border-bottom-color:#222;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-dark.place-left:after{border-left-color:#222;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-dark.place-right:after{border-right-color:#222;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-dark.border{border:1px solid #fff}.__react_component_tooltip.type-dark.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-dark.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-dark.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-dark.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-success{color:#fff;background-color:#8DC572}.__react_component_tooltip.type-success.place-top:after{border-top-color:#8DC572;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-success.place-bottom:after{border-bottom-color:#8DC572;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-success.place-left:after{border-left-color:#8DC572;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-success.place-right:after{border-right-color:#8DC572;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-success.border{border:1px solid #fff}.__react_component_tooltip.type-success.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-success.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-success.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-success.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-warning{color:#fff;background-color:#F0AD4E}.__react_component_tooltip.type-warning.place-top:after{border-top-color:#F0AD4E;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-warning.place-bottom:after{border-bottom-color:#F0AD4E;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-warning.place-left:after{border-left-color:#F0AD4E;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-warning.place-right:after{border-right-color:#F0AD4E;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-warning.border{border:1px solid #fff}.__react_component_tooltip.type-warning.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-warning.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-warning.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-warning.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-error{color:#fff;background-color:#BE6464}.__react_component_tooltip.type-error.place-top:after{border-top-color:#BE6464;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-error.place-bottom:after{border-bottom-color:#BE6464;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-error.place-left:after{border-left-color:#BE6464;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-error.place-right:after{border-right-color:#BE6464;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-error.border{border:1px solid #fff}.__react_component_tooltip.type-error.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-error.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-error.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-error.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-info{color:#fff;background-color:#337AB7}.__react_component_tooltip.type-info.place-top:after{border-top-color:#337AB7;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-info.place-bottom:after{border-bottom-color:#337AB7;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-info.place-left:after{border-left-color:#337AB7;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-info.place-right:after{border-right-color:#337AB7;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-info.border{border:1px solid #fff}.__react_component_tooltip.type-info.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-info.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-info.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-info.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-light{color:#222;background-color:#fff}.__react_component_tooltip.type-light.place-top:after{border-top-color:#fff;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-light.place-bottom:after{border-bottom-color:#fff;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-light.place-left:after{border-left-color:#fff;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-light.place-right:after{border-right-color:#fff;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-light.border{border:1px solid #222}.__react_component_tooltip.type-light.border.place-top:before{border-top:8px solid #222}.__react_component_tooltip.type-light.border.place-bottom:before{border-bottom:8px solid #222}.__react_component_tooltip.type-light.border.place-left:before{border-left:8px solid #222}.__react_component_tooltip.type-light.border.place-right:before{border-right:8px solid #222}.__react_component_tooltip.place-top{margin-top:-10px}.__react_component_tooltip.place-top:before{border-left:10px solid transparent;border-right:10px solid transparent;bottom:-8px;left:50%;margin-left:-10px}.__react_component_tooltip.place-top:after{border-left:8px solid transparent;border-right:8px solid transparent;bottom:-6px;left:50%;margin-left:-8px}.__react_component_tooltip.place-bottom{margin-top:10px}.__react_component_tooltip.place-bottom:before{border-left:10px solid transparent;border-right:10px solid transparent;top:-8px;left:50%;margin-left:-10px}.__react_component_tooltip.place-bottom:after{border-left:8px solid transparent;border-right:8px solid transparent;top:-6px;left:50%;margin-left:-8px}.__react_component_tooltip.place-left{margin-left:-10px}.__react_component_tooltip.place-left:before{border-top:6px solid transparent;border-bottom:6px solid transparent;right:-8px;top:50%;margin-top:-5px}.__react_component_tooltip.place-left:after{border-top:5px solid transparent;border-bottom:5px solid transparent;right:-6px;top:50%;margin-top:-4px}.__react_component_tooltip.place-right{margin-left:10px}.__react_component_tooltip.place-right:before{border-top:6px solid transparent;border-bottom:6px solid transparent;left:-8px;top:50%;margin-top:-5px}.__react_component_tooltip.place-right:after{border-top:5px solid transparent;border-bottom:5px solid transparent;left:-6px;top:50%;margin-top:-4px}.__react_component_tooltip .multi-line{display:block;padding:2px 0px;text-align:center}';

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	exports.default = UiLabel;
	
	var _uiSelect = __webpack_require__(11);
	
	var _uiSelect2 = _interopRequireDefault(_uiSelect);
	
	var _uiSwitch = __webpack_require__(132);
	
	var _uiSwitch2 = _interopRequireDefault(_uiSwitch);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var docs = {
	  title: "UiLabel",
	  propDetails: [{ title: "label",
	    required: true,
	    type: "string",
	    description: "The label." }, { title: "showSwitch",
	    required: false,
	    type: "boolean",
	    description: "Whether or not there should be a switch." }, { title: "showSelect",
	    required: false,
	    type: "boolean",
	    description: "Whether or not a select should be shown." }, { title: "labelSelectOptions",
	    required: false,
	    type: "object",
	    description: "Options for the select field, in a similar format as the options in UiFilterGroup. The option should consist of a name, selectOptions, isMulti, selected, and allowCreate." }, { title: "handleSelectChange",
	    required: false,
	    type: "function",
	    description: "Handles change to the select field." }, { title: "handleSwitchChange",
	    required: false,
	    type: "function",
	    description: "Handles change to the switch." }]
	};
	
	function UiLabel(props) {
	  // user should pass in:
	  // - a label (label) : string
	  // - a boolean to determine whether or not there should be a switch (showSwitch) : boolean
	  // - whether switch should default to on or off (switchOn) : boolean
	  // - optional boolean for whether or not a select should be shown (showSelect) : boolean
	  // - options for the select field, in a similar format as the uiSelect inputs in uiFilterGroup (labelSelectOptions) : object
	  //      - name: the filter's unique name, to be used as placeholder text
	  //      - selectOptions: a list of option hashes, formatted like [ { label: 'Option1', value: 1 }, { ... } ]
	  //      - isMulti: a boolean that determines if the input is a multi-select
	  //      - selected: a value, or list of values, that are selected
	  //      - allowCreate: an optional boolean which determines if the user can create options within the group
	  // - a function that handles changes to the select field in the parent component (handleSelectChange) : function
	  // - a function that changes the switch state in the parent component (handleSwitchChange) : function
	
	  var label = props.label,
	      showSwitch = props.showSwitch,
	      switchOn = props.switchOn,
	      showSelect = props.showSelect,
	      labelSelectOptions = props.labelSelectOptions,
	      handleSelectChange = props.handleSelectChange,
	      handleSwitchChange = props.handleSwitchChange;
	
	
	  var selectComponent = showSelect ? React.createElement(
	    'div',
	    { className: 'lr-ui-label-select' },
	    React.createElement(_uiSelect2.default, {
	      placeholder: labelSelectOptions.name,
	      selectOptions: labelSelectOptions.selectOptions,
	      isMulti: labelSelectOptions.isMulti,
	      selected: labelSelectOptions.selected,
	      handleChange: handleSelectChange,
	      allowCreate: labelSelectOptions.allowCreate,
	      clearable: false
	    })
	  ) : null;
	
	  var getSwitch = function getSwitch() {
	    return React.createElement(_uiSwitch2.default, {
	      switchOn: switchOn,
	      handleChange: handleSwitchChange
	    });
	  };
	
	  return React.createElement(
	    'div',
	    { className: 'lr-ui-label' },
	    React.createElement(
	      'div',
	      { className: 'lr-ui-label-label' },
	      label
	    ),
	    showSelect ? selectComponent : null,
	    showSwitch ? getSwitch() : null
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = UiSwitch;
	function UiSwitch(props) {
	  // user should pass in:
	  // - a boolean, controlled by the parent, that says whether the switch is on or off (switchOn)
	  // - change handling function that takes in the new state of the checkbox as an argument (handleChange) : function
	
	  var switchOn = props.switchOn,
	      handleChange = props.handleChange;
	
	
	  var getSwitchMessage = function getSwitchMessage(switchOn) {
	    var className = "switch-message";
	    var message = switchOn ? " on" : " off";
	    return React.createElement(
	      "div",
	      { className: className + message },
	      message
	    );
	  };
	
	  var getSwitch = function getSwitch() {
	    return React.createElement(
	      "div",
	      { className: "switch-container", onClick: handleChange },
	      React.createElement(
	        "div",
	        { className: "switch" },
	        React.createElement("input", {
	          className: switchOn ? "off-on-toggle on" : "off-on-toggle off",
	          type: "checkbox",
	          checked: switchOn,
	          onChange: handleChange
	        }),
	        React.createElement("label", null),
	        getSwitchMessage(switchOn)
	      )
	    );
	  };
	
	  return React.createElement(
	    "div",
	    { className: "lr-ui-switch" },
	    getSwitch()
	  );
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = UiSlider;
	__webpack_require__(134);
	var Rcslider = __webpack_require__(136);
	
	var docs = {
	  title: "UiSlider",
	  propDetails: [{ title: "label",
	    required: true,
	    type: "string",
	    description: "A title for the slider." }, { title: "steps",
	    required: true,
	    type: "object",
	    description: "An object which maps the numbers 1 to n (length of slider) to labels (steps)." }, { title: "value",
	    required: true,
	    type: "integer",
	    description: "The current value of the slider." }, { title: "handleChange",
	    required: true,
	    type: "function",
	    description: "Handles slider change - takes in value of the step." }, { title: "disabled",
	    required: false,
	    type: "boolean",
	    description: "Whether or not this slider is disabled." }]
	};
	
	function UiSlider(props) {
	  // The user passes in a hash which maps the numbers 1 to n, where n is the total number of steps in the slider, to various labels
	  // i.e. we create a slider of two steps, 1 maps to the choiceLabel "Individual" and 2 maps to "Household"
	  //  -- {1: "Individual", 2: "Household"} --
	  // The slider then can change the label beneath it dynamically when it changes value
	  //
	
	  // User provides:
	  //  - a title for the slider (label) : string
	  //  - an object which maps the numbers 1 to n to labels (steps) : object
	  //  - the default numerical value for the slider (value) : integer
	  //  - a function to handle changes that takes in the slider value (handleChange) : function
	  //  - a boolean to determine whether or not the slider is disabled : boolean
	
	  var showValue = function showValue(step) {
	    return steps[step];
	  };
	
	  var label = props.label,
	      steps = props.steps,
	      value = props.value,
	      handleChange = props.handleChange,
	      disabled = props.disabled;
	
	
	  return React.createElement(
	    'div',
	    { className: 'lr-ui-slider' },
	    React.createElement(
	      'div',
	      { className: 'lr-ui-slider-label' },
	      label
	    ),
	    React.createElement(Rcslider, {
	      onAfterChange: handleChange,
	      disabled: disabled,
	      className: disabled ? 'lr-ui-slider-slider-disabled' : 'lr-ui-slider-slider',
	      defaultValue: [value],
	      min: 1,
	      max: Object.keys(steps).length,
	      step: 1,
	      tipFormatter: showValue
	    })
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(135);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../../css-loader/index.js!./index.css", function() {
				var newContent = require("!!./../../css-loader/index.js!./index.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports
	
	
	// module
	exports.push([module.id, ".rc-slider {\n  position: relative;\n  height: 4px;\n  width: 100%;\n  border-radius: 6px;\n  background-color: #e9e9e9;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-slider * {\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-slider-track {\n  position: absolute;\n  left: 0;\n  height: 4px;\n  border-radius: 6px;\n  background-color: #abe2fb;\n  z-index: 1;\n}\n.rc-slider-handle {\n  position: absolute;\n  margin-left: -7px;\n  margin-top: -5px;\n  width: 14px;\n  height: 14px;\n  cursor: pointer;\n  border-radius: 50%;\n  border: solid 2px #96dbfa;\n  background-color: #fff;\n  z-index: 2;\n}\n.rc-slider-handle:hover {\n  border-color: #57c5f7;\n}\n.rc-slider-handle-active:active {\n  border-color: #57c5f7;\n  box-shadow: 0 0 5px #57c5f7;\n}\n.rc-slider-mark {\n  position: absolute;\n  top: 10px;\n  left: 0;\n  width: 100%;\n  font-size: 12px;\n  z-index: 3;\n}\n.rc-slider-mark-text {\n  position: absolute;\n  display: inline-block;\n  vertical-align: middle;\n  text-align: center;\n  cursor: pointer;\n  color: #999;\n}\n.rc-slider-mark-text-active {\n  color: #666;\n}\n.rc-slider-step {\n  position: absolute;\n  width: 100%;\n  height: 4px;\n  background: transparent;\n  z-index: 1;\n}\n.rc-slider-dot {\n  position: absolute;\n  bottom: -2px;\n  margin-left: -4px;\n  width: 8px;\n  height: 8px;\n  border: 2px solid #e9e9e9;\n  background-color: #fff;\n  cursor: pointer;\n  border-radius: 50%;\n  vertical-align: middle;\n}\n.rc-slider-dot:first-child {\n  margin-left: -4px;\n}\n.rc-slider-dot:last-child {\n  margin-left: -4px;\n}\n.rc-slider-dot-active {\n  border-color: #96dbfa;\n}\n.rc-slider-disabled {\n  background-color: #e9e9e9;\n}\n.rc-slider-disabled .rc-slider-track {\n  background-color: #ccc;\n}\n.rc-slider-disabled .rc-slider-handle,\n.rc-slider-disabled .rc-slider-dot {\n  border-color: #ccc;\n  background-color: #fff;\n  cursor: not-allowed;\n}\n.rc-slider-disabled .rc-slider-mark-text,\n.rc-slider-disabled .rc-slider-dot {\n  cursor: not-allowed !important;\n}\n.rc-slider-vertical {\n  width: 4px;\n  height: 100%;\n}\n.rc-slider-vertical .rc-slider-track {\n  bottom: 0;\n  width: 4px;\n}\n.rc-slider-vertical .rc-slider-handle {\n  position: absolute;\n  margin-left: -5px;\n  margin-bottom: -7px;\n}\n.rc-slider-vertical .rc-slider-mark {\n  top: 0;\n  left: 10px;\n  height: 100%;\n}\n.rc-slider-vertical .rc-slider-step {\n  height: 100%;\n  width: 4px;\n}\n.rc-slider-vertical .rc-slider-dot {\n  left: 2px;\n  margin-bottom: -4px;\n}\n.rc-slider-vertical .rc-slider-dot:first-child {\n  margin-bottom: -4px;\n}\n.rc-slider-vertical .rc-slider-dot:last-child {\n  margin-bottom: -4px;\n}\n.rc-slider-tooltip-zoom-down-enter,\n.rc-slider-tooltip-zoom-down-appear {\n  -webkit-animation-duration: .3s;\n          animation-duration: .3s;\n  -webkit-animation-fill-mode: both;\n          animation-fill-mode: both;\n  display: block !important;\n  -webkit-animation-play-state: paused;\n          animation-play-state: paused;\n}\n.rc-slider-tooltip-zoom-down-leave {\n  -webkit-animation-duration: .3s;\n          animation-duration: .3s;\n  -webkit-animation-fill-mode: both;\n          animation-fill-mode: both;\n  display: block !important;\n  -webkit-animation-play-state: paused;\n          animation-play-state: paused;\n}\n.rc-slider-tooltip-zoom-down-enter.rc-slider-tooltip-zoom-down-enter-active,\n.rc-slider-tooltip-zoom-down-appear.rc-slider-tooltip-zoom-down-appear-active {\n  -webkit-animation-name: rcSliderTooltipZoomDownIn;\n          animation-name: rcSliderTooltipZoomDownIn;\n  -webkit-animation-play-state: running;\n          animation-play-state: running;\n}\n.rc-slider-tooltip-zoom-down-leave.rc-slider-tooltip-zoom-down-leave-active {\n  -webkit-animation-name: rcSliderTooltipZoomDownOut;\n          animation-name: rcSliderTooltipZoomDownOut;\n  -webkit-animation-play-state: running;\n          animation-play-state: running;\n}\n.rc-slider-tooltip-zoom-down-enter,\n.rc-slider-tooltip-zoom-down-appear {\n  -webkit-transform: scale(0, 0);\n          transform: scale(0, 0);\n  -webkit-animation-timing-function: cubic-bezier(0.23, 1, 0.32, 1);\n          animation-timing-function: cubic-bezier(0.23, 1, 0.32, 1);\n}\n.rc-slider-tooltip-zoom-down-leave {\n  -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n          animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);\n}\n@-webkit-keyframes rcSliderTooltipZoomDownIn {\n  0% {\n    opacity: 0;\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(0, 0);\n            transform: scale(0, 0);\n  }\n  100% {\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(1, 1);\n            transform: scale(1, 1);\n  }\n}\n@keyframes rcSliderTooltipZoomDownIn {\n  0% {\n    opacity: 0;\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(0, 0);\n            transform: scale(0, 0);\n  }\n  100% {\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(1, 1);\n            transform: scale(1, 1);\n  }\n}\n@-webkit-keyframes rcSliderTooltipZoomDownOut {\n  0% {\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(1, 1);\n            transform: scale(1, 1);\n  }\n  100% {\n    opacity: 0;\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(0, 0);\n            transform: scale(0, 0);\n  }\n}\n@keyframes rcSliderTooltipZoomDownOut {\n  0% {\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(1, 1);\n            transform: scale(1, 1);\n  }\n  100% {\n    opacity: 0;\n    -webkit-transform-origin: 50% 100%;\n            transform-origin: 50% 100%;\n    -webkit-transform: scale(0, 0);\n            transform: scale(0, 0);\n  }\n}\n.rc-tooltip {\n  position: absolute;\n  left: -9999px;\n  top: -9999px;\n  z-index: 4;\n  visibility: visible;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-tooltip * {\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n}\n.rc-tooltip-hidden {\n  display: none;\n}\n.rc-tooltip-placement-top {\n  padding: 4px 0 8px 0;\n}\n.rc-tooltip-inner {\n  padding: 6px 2px;\n  min-width: 24px;\n  height: 24px;\n  font-size: 12px;\n  line-height: 1;\n  color: #fff;\n  text-align: center;\n  text-decoration: none;\n  background-color: #6c6c6c;\n  border-radius: 6px;\n  box-shadow: 0 0 4px #d9d9d9;\n}\n.rc-tooltip-arrow {\n  position: absolute;\n  width: 0;\n  height: 0;\n  border-color: transparent;\n  border-style: solid;\n}\n.rc-tooltip-placement-top .rc-tooltip-arrow {\n  bottom: 4px;\n  left: 50%;\n  margin-left: -4px;\n  border-width: 4px 4px 0;\n  border-top-color: #6c6c6c;\n}\n", ""]);
	
	// exports


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(137);

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};
	
	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();
	
	var _get = function get(_x, _x2, _x3) {
	  var _again = true;_function: while (_again) {
	    var object = _x,
	        property = _x2,
	        receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
	      var parent = Object.getPrototypeOf(object);if (parent === null) {
	        return undefined;
	      } else {
	        _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
	      }
	    } else if ('value' in desc) {
	      return desc.value;
	    } else {
	      var getter = desc.get;if (getter === undefined) {
	        return undefined;
	      }return getter.call(receiver);
	    }
	  }
	};
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}
	
	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError('Cannot call a class as a function');
	  }
	}
	
	function _inherits(subClass, superClass) {
	  if (typeof superClass !== 'function' && superClass !== null) {
	    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _rcUtilLibDomAddEventListener = __webpack_require__(138);
	
	var _rcUtilLibDomAddEventListener2 = _interopRequireDefault(_rcUtilLibDomAddEventListener);
	
	var _classnames = __webpack_require__(9);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _Track = __webpack_require__(143);
	
	var _Track2 = _interopRequireDefault(_Track);
	
	var _Handle = __webpack_require__(144);
	
	var _Handle2 = _interopRequireDefault(_Handle);
	
	var _Steps = __webpack_require__(217);
	
	var _Steps2 = _interopRequireDefault(_Steps);
	
	var _Marks = __webpack_require__(220);
	
	var _Marks2 = _interopRequireDefault(_Marks);
	
	function noop() {}
	
	function isNotTouchEvent(e) {
	  return e.touches.length > 1 || e.type.toLowerCase() === 'touchend' && e.touches.length > 0;
	}
	
	function getTouchPosition(vertical, e) {
	  return vertical ? e.touches[0].clientY : e.touches[0].pageX;
	}
	
	function getMousePosition(vertical, e) {
	  return vertical ? e.clientY : e.pageX;
	}
	
	function pauseEvent(e) {
	  e.stopPropagation();
	  e.preventDefault();
	}
	
	var Slider = function (_React$Component) {
	  _inherits(Slider, _React$Component);
	
	  function Slider(props) {
	    _classCallCheck(this, Slider);
	
	    _get(Object.getPrototypeOf(Slider.prototype), 'constructor', this).call(this, props);
	
	    var range = props.range;
	    var min = props.min;
	    var max = props.max;
	
	    var initialValue = range ? [min, min] : min;
	    var defaultValue = 'defaultValue' in props ? props.defaultValue : initialValue;
	    var value = props.value !== undefined ? props.value : defaultValue;
	
	    var upperBound = undefined;
	    var lowerBound = undefined;
	    if (props.range) {
	      lowerBound = this.trimAlignValue(value[0]);
	      upperBound = this.trimAlignValue(value[1]);
	    } else {
	      upperBound = this.trimAlignValue(value);
	    }
	
	    var recent = undefined;
	    if (props.range && upperBound === lowerBound) {
	      recent = lowerBound === max ? 'lowerBound' : 'upperBound';
	    } else {
	      recent = 'upperBound';
	    }
	
	    this.state = {
	      handle: null,
	      recent: recent,
	      upperBound: upperBound,
	      // If Slider is not range, set `lowerBound` equal to `min`.
	      lowerBound: lowerBound || min
	    };
	  }
	
	  _createClass(Slider, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (!('value' in nextProps || 'min' in nextProps || 'max' in nextProps)) return;
	
	      var _state = this.state;
	      var lowerBound = _state.lowerBound;
	      var upperBound = _state.upperBound;
	
	      if (nextProps.range) {
	        var value = nextProps.value || [lowerBound, upperBound];
	        var nextUpperBound = this.trimAlignValue(value[1], nextProps);
	        var nextLowerBound = this.trimAlignValue(value[0], nextProps);
	        if (nextLowerBound === lowerBound && nextUpperBound === upperBound) return;
	
	        this.setState({
	          upperBound: nextUpperBound,
	          lowerBound: nextLowerBound
	        });
	        if (this.isValueOutOfBounds(upperBound, nextProps) || this.isValueOutOfBounds(lowerBound, nextProps)) {
	          this.props.onChange([nextLowerBound, nextUpperBound]);
	        }
	      } else {
	        var value = nextProps.value !== undefined ? nextProps.value : upperBound;
	        var nextValue = this.trimAlignValue(value, nextProps);
	        if (nextValue === upperBound && lowerBound === nextProps.min) return;
	
	        this.setState({
	          upperBound: nextValue,
	          lowerBound: nextProps.min
	        });
	        if (this.isValueOutOfBounds(upperBound, nextProps)) {
	          this.props.onChange(nextValue);
	        }
	      }
	    }
	  }, {
	    key: 'onChange',
	    value: function onChange(state) {
	      var props = this.props;
	      var isNotControlled = !('value' in props);
	      if (isNotControlled) {
	        this.setState(state);
	      } else if (state.handle) {
	        this.setState({ handle: state.handle });
	      }
	
	      var data = _extends({}, this.state, state);
	      var changedValue = props.range ? [data.lowerBound, data.upperBound] : data.upperBound;
	      props.onChange(changedValue);
	    }
	  }, {
	    key: 'onMouseMove',
	    value: function onMouseMove(e) {
	      var position = getMousePosition(this.props.vertical, e);
	      this.onMove(e, position);
	    }
	  }, {
	    key: 'onTouchMove',
	    value: function onTouchMove(e) {
	      if (isNotTouchEvent(e)) {
	        this.end('touch');
	        return;
	      }
	
	      var position = getTouchPosition(this.props.vertical, e);
	      this.onMove(e, position);
	    }
	  }, {
	    key: 'onMove',
	    value: function onMove(e, position) {
	      pauseEvent(e);
	      var props = this.props;
	      var state = this.state;
	
	      var diffPosition = position - this.startPosition;
	      diffPosition = this.props.vertical ? -diffPosition : diffPosition;
	      var diffValue = diffPosition / this.getSliderLength() * (props.max - props.min);
	
	      var value = this.trimAlignValue(this.startValue + diffValue);
	      var oldValue = state[state.handle];
	      if (value === oldValue) return;
	
	      if (props.allowCross && value < state.lowerBound && state.handle === 'upperBound') {
	        this.onChange({
	          handle: 'lowerBound',
	          lowerBound: value,
	          upperBound: this.state.lowerBound
	        });
	        return;
	      }
	      if (props.allowCross && value > state.upperBound && state.handle === 'lowerBound') {
	        this.onChange({
	          handle: 'upperBound',
	          upperBound: value,
	          lowerBound: this.state.upperBound
	        });
	        return;
	      }
	
	      this.onChange(_defineProperty({}, state.handle, value));
	    }
	  }, {
	    key: 'onTouchStart',
	    value: function onTouchStart(e) {
	      if (isNotTouchEvent(e)) return;
	
	      var position = getTouchPosition(this.props.vertical, e);
	      this.onStart(position);
	      this.addDocumentEvents('touch');
	      pauseEvent(e);
	    }
	  }, {
	    key: 'onMouseDown',
	    value: function onMouseDown(e) {
	      if (e.button !== 0) {
	        return;
	      }
	      var position = getMousePosition(this.props.vertical, e);
	      this.onStart(position);
	      this.addDocumentEvents('mouse');
	      pauseEvent(e);
	    }
	  }, {
	    key: 'onStart',
	    value: function onStart(position) {
	      var props = this.props;
	      props.onBeforeChange(this.getValue());
	
	      var value = this.calcValueByPos(position);
	      this.startValue = value;
	      this.startPosition = position;
	
	      var state = this.state;
	      var upperBound = state.upperBound;
	      var lowerBound = state.lowerBound;
	
	      var valueNeedChanging = 'upperBound';
	      if (this.props.range) {
	        var isLowerBoundCloser = Math.abs(upperBound - value) > Math.abs(lowerBound - value);
	        if (isLowerBoundCloser) {
	          valueNeedChanging = 'lowerBound';
	        }
	
	        var isAtTheSamePoint = upperBound === lowerBound;
	        if (isAtTheSamePoint) {
	          valueNeedChanging = state.recent;
	        }
	
	        if (isAtTheSamePoint && value !== upperBound) {
	          valueNeedChanging = value < upperBound ? 'lowerBound' : 'upperBound';
	        }
	      }
	
	      this.setState({
	        handle: valueNeedChanging,
	        recent: valueNeedChanging
	      });
	
	      var oldValue = state[valueNeedChanging];
	      if (value === oldValue) return;
	
	      this.onChange(_defineProperty({}, valueNeedChanging, value));
	    }
	  }, {
	    key: 'getValue',
	    value: function getValue() {
	      var _state2 = this.state;
	      var lowerBound = _state2.lowerBound;
	      var upperBound = _state2.upperBound;
	
	      return this.props.range ? [lowerBound, upperBound] : upperBound;
	    }
	  }, {
	    key: 'getSliderLength',
	    value: function getSliderLength() {
	      var slider = this.refs.slider;
	      if (!slider) {
	        return 0;
	      }
	
	      return this.props.vertical ? slider.clientHeight : slider.clientWidth;
	    }
	  }, {
	    key: 'getSliderStart',
	    value: function getSliderStart() {
	      var slider = this.refs.slider;
	      var rect = slider.getBoundingClientRect();
	
	      return this.props.vertical ? rect.top : rect.left;
	    }
	  }, {
	    key: 'getPrecision',
	    value: function getPrecision(step) {
	      var stepString = step.toString();
	      var precision = 0;
	      if (stepString.indexOf('.') >= 0) {
	        precision = stepString.length - stepString.indexOf('.') - 1;
	      }
	      return precision;
	    }
	  }, {
	    key: 'isValueOutOfBounds',
	    value: function isValueOutOfBounds(value, props) {
	      return value < props.min || value > props.max;
	    }
	  }, {
	    key: 'trimAlignValue',
	    value: function trimAlignValue(v, nextProps) {
	      var state = this.state || {};
	      var handle = state.handle;
	      var lowerBound = state.lowerBound;
	      var upperBound = state.upperBound;
	
	      var _extends2 = _extends({}, this.props, nextProps || {});
	
	      var marks = _extends2.marks;
	      var step = _extends2.step;
	      var min = _extends2.min;
	      var max = _extends2.max;
	      var allowCross = _extends2.allowCross;
	
	      var val = v;
	      if (val <= min) {
	        val = min;
	      }
	      if (val >= max) {
	        val = max;
	      }
	      if (!allowCross && handle === 'upperBound' && val <= lowerBound) {
	        val = lowerBound;
	      }
	      if (!allowCross && handle === 'lowerBound' && val >= upperBound) {
	        val = upperBound;
	      }
	
	      var points = Object.keys(marks).map(parseFloat);
	      if (step !== null) {
	        var closestStep = Math.round((val - min) / step) * step + min;
	        points.push(closestStep);
	      }
	
	      var diffs = points.map(function (point) {
	        return Math.abs(val - point);
	      });
	      var closestPoint = points[diffs.indexOf(Math.min.apply(Math, diffs))];
	
	      return step !== null ? parseFloat(closestPoint.toFixed(this.getPrecision(step))) : closestPoint;
	    }
	  }, {
	    key: 'calcOffset',
	    value: function calcOffset(value) {
	      var _props = this.props;
	      var min = _props.min;
	      var max = _props.max;
	
	      var ratio = (value - min) / (max - min);
	      return ratio * 100;
	    }
	  }, {
	    key: 'calcValue',
	    value: function calcValue(offset) {
	      var _props2 = this.props;
	      var vertical = _props2.vertical;
	      var min = _props2.min;
	      var max = _props2.max;
	
	      var ratio = Math.abs(offset / this.getSliderLength());
	      var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;
	      return value;
	    }
	  }, {
	    key: 'calcValueByPos',
	    value: function calcValueByPos(position) {
	      var pixelOffset = position - this.getSliderStart();
	      var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
	      return nextValue;
	    }
	  }, {
	    key: 'addDocumentEvents',
	    value: function addDocumentEvents(type) {
	      if (type === 'touch') {
	        // just work for chrome iOS Safari and Android Browser
	        this.onTouchMoveListener = (0, _rcUtilLibDomAddEventListener2['default'])(document, 'touchmove', this.onTouchMove.bind(this));
	        this.onTouchUpListener = (0, _rcUtilLibDomAddEventListener2['default'])(document, 'touchend', this.end.bind(this, 'touch'));
	      } else if (type === 'mouse') {
	        this.onMouseMoveListener = (0, _rcUtilLibDomAddEventListener2['default'])(document, 'mousemove', this.onMouseMove.bind(this));
	        this.onMouseUpListener = (0, _rcUtilLibDomAddEventListener2['default'])(document, 'mouseup', this.end.bind(this, 'mouse'));
	      }
	    }
	  }, {
	    key: 'removeEvents',
	    value: function removeEvents(type) {
	      if (type === 'touch') {
	        this.onTouchMoveListener.remove();
	        this.onTouchUpListener.remove();
	      } else if (type === 'mouse') {
	        this.onMouseMoveListener.remove();
	        this.onMouseUpListener.remove();
	      }
	    }
	  }, {
	    key: 'end',
	    value: function end(type) {
	      this.removeEvents(type);
	      this.props.onAfterChange(this.getValue());
	      this.setState({ handle: null });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _classNames, _classNames2, _classNames3;
	
	      var _state3 = this.state;
	      var handle = _state3.handle;
	      var upperBound = _state3.upperBound;
	      var lowerBound = _state3.lowerBound;
	      var _props3 = this.props;
	      var className = _props3.className;
	      var prefixCls = _props3.prefixCls;
	      var disabled = _props3.disabled;
	      var vertical = _props3.vertical;
	      var dots = _props3.dots;
	      var included = _props3.included;
	      var range = _props3.range;
	      var step = _props3.step;
	      var marks = _props3.marks;
	      var max = _props3.max;
	      var min = _props3.min;
	      var tipTransitionName = _props3.tipTransitionName;
	      var tipFormatter = _props3.tipFormatter;
	      var children = _props3.children;
	
	      var customHandle = this.props.handle;
	
	      var upperOffset = this.calcOffset(upperBound);
	      var lowerOffset = this.calcOffset(lowerBound);
	
	      var handleClassName = prefixCls + '-handle';
	
	      var upperClassName = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, handleClassName, true), _defineProperty(_classNames, handleClassName + '-upper', true), _classNames));
	
	      var lowerClassName = (0, _classnames2['default'])((_classNames2 = {}, _defineProperty(_classNames2, handleClassName, true), _defineProperty(_classNames2, handleClassName + '-lower', true), _classNames2));
	
	      var isNoTip = step === null || tipFormatter === null;
	
	      var commonHandleProps = {
	        prefixCls: prefixCls,
	        noTip: isNoTip,
	        tipTransitionName: tipTransitionName,
	        tipFormatter: tipFormatter,
	        vertical: vertical
	      };
	
	      var upper = (0, _react.cloneElement)(customHandle, _extends({}, commonHandleProps, {
	        className: upperClassName,
	        value: upperBound,
	        offset: upperOffset,
	        dragging: handle === 'upperBound'
	      }));
	
	      var lower = null;
	      if (range) {
	        lower = (0, _react.cloneElement)(customHandle, _extends({}, commonHandleProps, {
	          className: lowerClassName,
	          value: lowerBound,
	          offset: lowerOffset,
	          dragging: handle === 'lowerBound'
	        }));
	      }
	
	      var sliderClassName = (0, _classnames2['default'])((_classNames3 = {}, _defineProperty(_classNames3, prefixCls, true), _defineProperty(_classNames3, prefixCls + '-disabled', disabled), _defineProperty(_classNames3, className, !!className), _defineProperty(_classNames3, prefixCls + '-vertical', this.props.vertical), _classNames3));
	      var isIncluded = included || range;
	      return _react2['default'].createElement('div', { ref: 'slider', className: sliderClassName,
	        onTouchStart: disabled ? noop : this.onTouchStart.bind(this),
	        onMouseDown: disabled ? noop : this.onMouseDown.bind(this)
	      }, upper, lower, _react2['default'].createElement(_Track2['default'], { className: prefixCls + '-track', vertical: vertical, included: isIncluded,
	        offset: lowerOffset, length: upperOffset - lowerOffset }), _react2['default'].createElement(_Steps2['default'], { prefixCls: prefixCls, vertical: vertical, marks: marks, dots: dots, step: step,
	        included: isIncluded, lowerBound: lowerBound,
	        upperBound: upperBound, max: max, min: min }), _react2['default'].createElement(_Marks2['default'], { className: prefixCls + '-mark', vertical: vertical, marks: marks,
	        included: isIncluded, lowerBound: lowerBound,
	        upperBound: upperBound, max: max, min: min }), children);
	    }
	  }]);
	
	  return Slider;
	}(_react2['default'].Component);
	
	Slider.propTypes = {
	  min: _react2['default'].PropTypes.number,
	  max: _react2['default'].PropTypes.number,
	  step: _react2['default'].PropTypes.number,
	  defaultValue: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.arrayOf(_react2['default'].PropTypes.number)]),
	  value: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.arrayOf(_react2['default'].PropTypes.number)]),
	  marks: _react2['default'].PropTypes.object,
	  included: _react2['default'].PropTypes.bool,
	  className: _react2['default'].PropTypes.string,
	  prefixCls: _react2['default'].PropTypes.string,
	  disabled: _react2['default'].PropTypes.bool,
	  children: _react2['default'].PropTypes.any,
	  onBeforeChange: _react2['default'].PropTypes.func,
	  onChange: _react2['default'].PropTypes.func,
	  onAfterChange: _react2['default'].PropTypes.func,
	  handle: _react2['default'].PropTypes.element,
	  tipTransitionName: _react2['default'].PropTypes.string,
	  tipFormatter: _react2['default'].PropTypes.func,
	  dots: _react2['default'].PropTypes.bool,
	  range: _react2['default'].PropTypes.bool,
	  vertical: _react2['default'].PropTypes.bool,
	  allowCross: _react2['default'].PropTypes.bool
	};
	
	Slider.defaultProps = {
	  prefixCls: 'rc-slider',
	  className: '',
	  tipTransitionName: '',
	  min: 0,
	  max: 100,
	  step: 1,
	  marks: {},
	  handle: _react2['default'].createElement(_Handle2['default'], null),
	  onBeforeChange: noop,
	  onChange: noop,
	  onAfterChange: noop,
	  tipFormatter: function tipFormatter(value) {
	    return value;
	  },
	  included: true,
	  disabled: false,
	  dots: false,
	  range: false,
	  vertical: false,
	  allowCross: true
	};
	
	exports['default'] = Slider;
	module.exports = exports['default'];

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = addEventListenerWrap;
	
	var _addDomEventListener = __webpack_require__(139);
	
	var _addDomEventListener2 = _interopRequireDefault(_addDomEventListener);
	
	var _reactDom = __webpack_require__(13);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function addEventListenerWrap(target, eventType, cb) {
	  /* eslint camelcase: 2 */
	  var callback = _reactDom2["default"].unstable_batchedUpdates ? function run(e) {
	    _reactDom2["default"].unstable_batchedUpdates(cb, e);
	  } : cb;
	  return (0, _addDomEventListener2["default"])(target, eventType, callback);
	}
	module.exports = exports['default'];

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	exports['default'] = addEventListener;
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	var _EventObject = __webpack_require__(140);
	
	var _EventObject2 = _interopRequireDefault(_EventObject);
	
	function addEventListener(target, eventType, callback) {
	  function wrapCallback(e) {
	    var ne = new _EventObject2['default'](e);
	    callback.call(target, ne);
	  }
	
	  if (target.addEventListener) {
	    target.addEventListener(eventType, wrapCallback, false);
	    return {
	      remove: function remove() {
	        target.removeEventListener(eventType, wrapCallback, false);
	      }
	    };
	  } else if (target.attachEvent) {
	    target.attachEvent('on' + eventType, wrapCallback);
	    return {
	      remove: function remove() {
	        target.detachEvent('on' + eventType, wrapCallback);
	      }
	    };
	  }
	}
	
	module.exports = exports['default'];

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * @ignore
	 * event object for dom
	 * @author yiminghe@gmail.com
	 */
	
	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	var _EventBaseObject = __webpack_require__(141);
	
	var _EventBaseObject2 = _interopRequireDefault(_EventBaseObject);
	
	var _objectAssign = __webpack_require__(142);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	var TRUE = true;
	var FALSE = false;
	var commonProps = ['altKey', 'bubbles', 'cancelable', 'ctrlKey', 'currentTarget', 'eventPhase', 'metaKey', 'shiftKey', 'target', 'timeStamp', 'view', 'type'];
	
	function isNullOrUndefined(w) {
	  return w === null || w === undefined;
	}
	
	var eventNormalizers = [{
	  reg: /^key/,
	  props: ['char', 'charCode', 'key', 'keyCode', 'which'],
	  fix: function fix(event, nativeEvent) {
	    if (isNullOrUndefined(event.which)) {
	      event.which = !isNullOrUndefined(nativeEvent.charCode) ? nativeEvent.charCode : nativeEvent.keyCode;
	    }
	
	    // add metaKey to non-Mac browsers (use ctrl for PC 's and Meta for Macs)
	    if (event.metaKey === undefined) {
	      event.metaKey = event.ctrlKey;
	    }
	  }
	}, {
	  reg: /^touch/,
	  props: ['touches', 'changedTouches', 'targetTouches']
	}, {
	  reg: /^hashchange$/,
	  props: ['newURL', 'oldURL']
	}, {
	  reg: /^gesturechange$/i,
	  props: ['rotation', 'scale']
	}, {
	  reg: /^(mousewheel|DOMMouseScroll)$/,
	  props: [],
	  fix: function fix(event, nativeEvent) {
	    var deltaX = undefined;
	    var deltaY = undefined;
	    var delta = undefined;
	    var wheelDelta = nativeEvent.wheelDelta;
	    var axis = nativeEvent.axis;
	    var wheelDeltaY = nativeEvent.wheelDeltaY;
	    var wheelDeltaX = nativeEvent.wheelDeltaX;
	    var detail = nativeEvent.detail;
	
	    // ie/webkit
	    if (wheelDelta) {
	      delta = wheelDelta / 120;
	    }
	
	    // gecko
	    if (detail) {
	      // press control e.detail == 1 else e.detail == 3
	      delta = 0 - (detail % 3 === 0 ? detail / 3 : detail);
	    }
	
	    // Gecko
	    if (axis !== undefined) {
	      if (axis === event.HORIZONTAL_AXIS) {
	        deltaY = 0;
	        deltaX = 0 - delta;
	      } else if (axis === event.VERTICAL_AXIS) {
	        deltaX = 0;
	        deltaY = delta;
	      }
	    }
	
	    // Webkit
	    if (wheelDeltaY !== undefined) {
	      deltaY = wheelDeltaY / 120;
	    }
	    if (wheelDeltaX !== undefined) {
	      deltaX = -1 * wheelDeltaX / 120;
	    }
	
	    // 默认 deltaY (ie)
	    if (!deltaX && !deltaY) {
	      deltaY = delta;
	    }
	
	    if (deltaX !== undefined) {
	      /**
	       * deltaX of mousewheel event
	       * @property deltaX
	       * @member Event.DomEvent.Object
	       */
	      event.deltaX = deltaX;
	    }
	
	    if (deltaY !== undefined) {
	      /**
	       * deltaY of mousewheel event
	       * @property deltaY
	       * @member Event.DomEvent.Object
	       */
	      event.deltaY = deltaY;
	    }
	
	    if (delta !== undefined) {
	      /**
	       * delta of mousewheel event
	       * @property delta
	       * @member Event.DomEvent.Object
	       */
	      event.delta = delta;
	    }
	  }
	}, {
	  reg: /^mouse|contextmenu|click|mspointer|(^DOMMouseScroll$)/i,
	  props: ['buttons', 'clientX', 'clientY', 'button', 'offsetX', 'relatedTarget', 'which', 'fromElement', 'toElement', 'offsetY', 'pageX', 'pageY', 'screenX', 'screenY'],
	  fix: function fix(event, nativeEvent) {
	    var eventDoc = undefined;
	    var doc = undefined;
	    var body = undefined;
	    var target = event.target;
	    var button = nativeEvent.button;
	
	    // Calculate pageX/Y if missing and clientX/Y available
	    if (target && isNullOrUndefined(event.pageX) && !isNullOrUndefined(nativeEvent.clientX)) {
	      eventDoc = target.ownerDocument || document;
	      doc = eventDoc.documentElement;
	      body = eventDoc.body;
	      event.pageX = nativeEvent.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
	      event.pageY = nativeEvent.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);
	    }
	
	    // which for click: 1 === left; 2 === middle; 3 === right
	    // do not use button
	    if (!event.which && button !== undefined) {
	      if (button & 1) {
	        event.which = 1;
	      } else if (button & 2) {
	        event.which = 3;
	      } else if (button & 4) {
	        event.which = 2;
	      } else {
	        event.which = 0;
	      }
	    }
	
	    // add relatedTarget, if necessary
	    if (!event.relatedTarget && event.fromElement) {
	      event.relatedTarget = event.fromElement === target ? event.toElement : event.fromElement;
	    }
	
	    return event;
	  }
	}];
	
	function retTrue() {
	  return TRUE;
	}
	
	function retFalse() {
	  return FALSE;
	}
	
	function DomEventObject(nativeEvent) {
	  var type = nativeEvent.type;
	
	  var isNative = typeof nativeEvent.stopPropagation === 'function' || typeof nativeEvent.cancelBubble === 'boolean';
	
	  _EventBaseObject2['default'].call(this);
	
	  this.nativeEvent = nativeEvent;
	
	  // in case dom event has been mark as default prevented by lower dom node
	  var isDefaultPrevented = retFalse;
	  if ('defaultPrevented' in nativeEvent) {
	    isDefaultPrevented = nativeEvent.defaultPrevented ? retTrue : retFalse;
	  } else if ('getPreventDefault' in nativeEvent) {
	    // https://bugzilla.mozilla.org/show_bug.cgi?id=691151
	    isDefaultPrevented = nativeEvent.getPreventDefault() ? retTrue : retFalse;
	  } else if ('returnValue' in nativeEvent) {
	    isDefaultPrevented = nativeEvent.returnValue === FALSE ? retTrue : retFalse;
	  }
	
	  this.isDefaultPrevented = isDefaultPrevented;
	
	  var fixFns = [];
	  var fixFn = undefined;
	  var l = undefined;
	  var prop = undefined;
	  var props = commonProps.concat();
	
	  eventNormalizers.forEach(function (normalizer) {
	    if (type.match(normalizer.reg)) {
	      props = props.concat(normalizer.props);
	      if (normalizer.fix) {
	        fixFns.push(normalizer.fix);
	      }
	    }
	  });
	
	  l = props.length;
	
	  // clone properties of the original event object
	  while (l) {
	    prop = props[--l];
	    this[prop] = nativeEvent[prop];
	  }
	
	  // fix target property, if necessary
	  if (!this.target && isNative) {
	    this.target = nativeEvent.srcElement || document; // srcElement might not be defined either
	  }
	
	  // check if target is a text node (safari)
	  if (this.target && this.target.nodeType === 3) {
	    this.target = this.target.parentNode;
	  }
	
	  l = fixFns.length;
	
	  while (l) {
	    fixFn = fixFns[--l];
	    fixFn(this, nativeEvent);
	  }
	
	  this.timeStamp = nativeEvent.timeStamp || Date.now();
	}
	
	var EventBaseObjectProto = _EventBaseObject2['default'].prototype;
	
	(0, _objectAssign2['default'])(DomEventObject.prototype, EventBaseObjectProto, {
	  constructor: DomEventObject,
	
	  preventDefault: function preventDefault() {
	    var e = this.nativeEvent;
	
	    // if preventDefault exists run it on the original event
	    if (e.preventDefault) {
	      e.preventDefault();
	    } else {
	      // otherwise set the returnValue property of the original event to FALSE (IE)
	      e.returnValue = FALSE;
	    }
	
	    EventBaseObjectProto.preventDefault.call(this);
	  },
	
	  stopPropagation: function stopPropagation() {
	    var e = this.nativeEvent;
	
	    // if stopPropagation exists run it on the original event
	    if (e.stopPropagation) {
	      e.stopPropagation();
	    } else {
	      // otherwise set the cancelBubble property of the original event to TRUE (IE)
	      e.cancelBubble = TRUE;
	    }
	
	    EventBaseObjectProto.stopPropagation.call(this);
	  }
	});
	
	exports['default'] = DomEventObject;
	module.exports = exports['default'];

/***/ },
/* 141 */
/***/ function(module, exports) {

	/**
	 * @ignore
	 * base event object for custom and dom event.
	 * @author yiminghe@gmail.com
	 */
	
	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	function returnFalse() {
	  return false;
	}
	
	function returnTrue() {
	  return true;
	}
	
	function EventBaseObject() {
	  this.timeStamp = Date.now();
	  this.target = undefined;
	  this.currentTarget = undefined;
	}
	
	EventBaseObject.prototype = {
	  isEventObject: 1,
	
	  constructor: EventBaseObject,
	
	  isDefaultPrevented: returnFalse,
	
	  isPropagationStopped: returnFalse,
	
	  isImmediatePropagationStopped: returnFalse,
	
	  preventDefault: function preventDefault() {
	    this.isDefaultPrevented = returnTrue;
	  },
	
	  stopPropagation: function stopPropagation() {
	    this.isPropagationStopped = returnTrue;
	  },
	
	  stopImmediatePropagation: function stopImmediatePropagation() {
	    this.isImmediatePropagationStopped = returnTrue;
	    // fixed 1.2
	    // call stopPropagation implicitly
	    this.stopPropagation();
	  },
	
	  halt: function halt(immediate) {
	    if (immediate) {
	      this.stopImmediatePropagation();
	    } else {
	      this.stopPropagation();
	    }
	    this.preventDefault();
	  }
	};
	
	exports["default"] = EventBaseObject;
	module.exports = exports["default"];

/***/ },
/* 142 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc'); // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var Track = function Track(_ref) {
	  var className = _ref.className;
	  var included = _ref.included;
	  var vertical = _ref.vertical;
	  var offset = _ref.offset;
	  var length = _ref.length;
	
	  var style = {
	    visibility: included ? 'visible' : 'hidden'
	  };
	  if (vertical) {
	    style.bottom = offset + '%';
	    style.height = length + '%';
	  } else {
	    style.left = offset + '%';
	    style.width = length + '%';
	  }
	  return _react2['default'].createElement('div', { className: className, style: style });
	};
	
	exports['default'] = Track;
	module.exports = exports['default'];

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ('value' in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();
	
	var _get = function get(_x, _x2, _x3) {
	  var _again = true;_function: while (_again) {
	    var object = _x,
	        property = _x2,
	        receiver = _x3;_again = false;if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {
	      var parent = Object.getPrototypeOf(object);if (parent === null) {
	        return undefined;
	      } else {
	        _x = parent;_x2 = property;_x3 = receiver;_again = true;desc = parent = undefined;continue _function;
	      }
	    } else if ('value' in desc) {
	      return desc.value;
	    } else {
	      var getter = desc.get;if (getter === undefined) {
	        return undefined;
	      }return getter.call(receiver);
	    }
	  }
	};
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError('Cannot call a class as a function');
	  }
	}
	
	function _inherits(subClass, superClass) {
	  if (typeof superClass !== 'function' && superClass !== null) {
	    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _rcTooltip = __webpack_require__(145);
	
	var _rcTooltip2 = _interopRequireDefault(_rcTooltip);
	
	var Handle = function (_React$Component) {
	  _inherits(Handle, _React$Component);
	
	  function Handle(props) {
	    _classCallCheck(this, Handle);
	
	    _get(Object.getPrototypeOf(Handle.prototype), 'constructor', this).call(this, props);
	
	    this.state = {
	      isTooltipVisible: false
	    };
	  }
	
	  _createClass(Handle, [{
	    key: 'showTooltip',
	    value: function showTooltip() {
	      this.setState({
	        isTooltipVisible: true
	      });
	    }
	  }, {
	    key: 'hideTooltip',
	    value: function hideTooltip() {
	      this.setState({
	        isTooltipVisible: false
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var prefixCls = _props.prefixCls;
	      var className = _props.className;
	      var tipTransitionName = _props.tipTransitionName;
	      var tipFormatter = _props.tipFormatter;
	      var vertical = _props.vertical;
	      var offset = _props.offset;
	      var value = _props.value;
	      var dragging = _props.dragging;
	      var noTip = _props.noTip;
	
	      var style = vertical ? { bottom: offset + '%' } : { left: offset + '%' };
	      var handle = _react2['default'].createElement('div', { className: className, style: style,
	        onMouseUp: this.showTooltip.bind(this),
	        onMouseEnter: this.showTooltip.bind(this),
	        onMouseLeave: this.hideTooltip.bind(this)
	      });
	
	      if (noTip) {
	        return handle;
	      }
	
	      var isTooltipVisible = dragging || this.state.isTooltipVisible;
	      return _react2['default'].createElement(_rcTooltip2['default'], {
	        prefixCls: prefixCls.replace('slider', 'tooltip'),
	        placement: 'top',
	        visible: isTooltipVisible,
	        overlay: _react2['default'].createElement('span', null, tipFormatter(value)),
	        delay: 0,
	        transitionName: tipTransitionName
	      }, handle);
	    }
	  }]);
	
	  return Handle;
	}(_react2['default'].Component);
	
	exports['default'] = Handle;
	
	Handle.propTypes = {
	  prefixCls: _react2['default'].PropTypes.string,
	  className: _react2['default'].PropTypes.string,
	  vertical: _react2['default'].PropTypes.bool,
	  offset: _react2['default'].PropTypes.number,
	  tipTransitionName: _react2['default'].PropTypes.string,
	  tipFormatter: _react2['default'].PropTypes.func,
	  value: _react2['default'].PropTypes.number,
	  dragging: _react2['default'].PropTypes.bool,
	  noTip: _react2['default'].PropTypes.bool
	};
	module.exports = exports['default'];

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(146);

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _placements = __webpack_require__(147);
	
	var _rcTrigger = __webpack_require__(148);
	
	var _rcTrigger2 = _interopRequireDefault(_rcTrigger);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function _objectWithoutProperties(obj, keys) {
	  var target = {};for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
	  }return target;
	}
	
	var Tooltip = _react2["default"].createClass({
	  displayName: 'Tooltip',
	
	  propTypes: {
	    trigger: _react.PropTypes.any,
	    children: _react.PropTypes.any,
	    defaultVisible: _react.PropTypes.bool,
	    visible: _react.PropTypes.bool,
	    placement: _react.PropTypes.string,
	    transitionName: _react.PropTypes.string,
	    animation: _react.PropTypes.any,
	    onVisibleChange: _react.PropTypes.func,
	    afterVisibleChange: _react.PropTypes.func,
	    overlay: _react.PropTypes.oneOfType([_react2["default"].PropTypes.node, _react2["default"].PropTypes.func]).isRequired,
	    overlayStyle: _react.PropTypes.object,
	    overlayClassName: _react.PropTypes.string,
	    prefixCls: _react.PropTypes.string,
	    mouseEnterDelay: _react.PropTypes.number,
	    mouseLeaveDelay: _react.PropTypes.number,
	    getTooltipContainer: _react.PropTypes.func,
	    destroyTooltipOnHide: _react.PropTypes.bool,
	    align: _react.PropTypes.object,
	    arrowContent: _react.PropTypes.any
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      prefixCls: 'rc-tooltip',
	      mouseEnterDelay: 0,
	      destroyTooltipOnHide: false,
	      mouseLeaveDelay: 0.1,
	      align: {},
	      placement: 'right',
	      trigger: ['hover'],
	      arrowContent: null
	    };
	  },
	  getPopupElement: function getPopupElement() {
	    var _props = this.props;
	    var arrowContent = _props.arrowContent;
	    var overlay = _props.overlay;
	    var prefixCls = _props.prefixCls;
	
	    return [_react2["default"].createElement('div', { className: prefixCls + '-arrow', key: 'arrow' }, arrowContent), _react2["default"].createElement('div', { className: prefixCls + '-inner', key: 'content' }, typeof overlay === 'function' ? overlay() : overlay)];
	  },
	  getPopupDomNode: function getPopupDomNode() {
	    return this.refs.trigger.getPopupDomNode();
	  },
	  render: function render() {
	    var _props2 = this.props;
	    var overlayClassName = _props2.overlayClassName;
	    var trigger = _props2.trigger;
	    var mouseEnterDelay = _props2.mouseEnterDelay;
	    var mouseLeaveDelay = _props2.mouseLeaveDelay;
	    var overlayStyle = _props2.overlayStyle;
	    var prefixCls = _props2.prefixCls;
	    var children = _props2.children;
	    var onVisibleChange = _props2.onVisibleChange;
	    var transitionName = _props2.transitionName;
	    var animation = _props2.animation;
	    var placement = _props2.placement;
	    var align = _props2.align;
	    var destroyTooltipOnHide = _props2.destroyTooltipOnHide;
	    var defaultVisible = _props2.defaultVisible;
	    var getTooltipContainer = _props2.getTooltipContainer;
	
	    var restProps = _objectWithoutProperties(_props2, ['overlayClassName', 'trigger', 'mouseEnterDelay', 'mouseLeaveDelay', 'overlayStyle', 'prefixCls', 'children', 'onVisibleChange', 'transitionName', 'animation', 'placement', 'align', 'destroyTooltipOnHide', 'defaultVisible', 'getTooltipContainer']);
	
	    var extraProps = _extends({}, restProps);
	    if ('visible' in this.props) {
	      extraProps.popupVisible = this.props.visible;
	    }
	    return _react2["default"].createElement(_rcTrigger2["default"], _extends({
	      popupClassName: overlayClassName,
	      ref: 'trigger',
	      prefixCls: prefixCls,
	      popup: this.getPopupElement,
	      action: trigger,
	      builtinPlacements: _placements.placements,
	      popupPlacement: placement,
	      popupAlign: align,
	      getPopupContainer: getTooltipContainer,
	      onPopupVisibleChange: onVisibleChange,
	      popupTransitionName: transitionName,
	      popupAnimation: animation,
	      defaultPopupVisible: defaultVisible,
	      destroyPopupOnHide: destroyTooltipOnHide,
	      mouseLeaveDelay: mouseLeaveDelay,
	      popupStyle: overlayStyle,
	      mouseEnterDelay: mouseEnterDelay
	    }, extraProps), children);
	  }
	});
	
	exports["default"] = Tooltip;
	module.exports = exports['default'];

/***/ },
/* 147 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var autoAdjustOverflow = {
	  adjustX: 1,
	  adjustY: 1
	};
	
	var targetOffset = [0, 0];
	
	var placements = exports.placements = {
	  left: {
	    points: ['cr', 'cl'],
	    overflow: autoAdjustOverflow,
	    offset: [-4, 0],
	    targetOffset: targetOffset
	  },
	  right: {
	    points: ['cl', 'cr'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  top: {
	    points: ['bc', 'tc'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  bottom: {
	    points: ['tc', 'bc'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  topLeft: {
	    points: ['bl', 'tl'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  leftTop: {
	    points: ['tr', 'tl'],
	    overflow: autoAdjustOverflow,
	    offset: [-4, 0],
	    targetOffset: targetOffset
	  },
	  topRight: {
	    points: ['br', 'tr'],
	    overflow: autoAdjustOverflow,
	    offset: [0, -4],
	    targetOffset: targetOffset
	  },
	  rightTop: {
	    points: ['tl', 'tr'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  bottomRight: {
	    points: ['tr', 'br'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  rightBottom: {
	    points: ['bl', 'br'],
	    overflow: autoAdjustOverflow,
	    offset: [4, 0],
	    targetOffset: targetOffset
	  },
	  bottomLeft: {
	    points: ['tl', 'bl'],
	    overflow: autoAdjustOverflow,
	    offset: [0, 4],
	    targetOffset: targetOffset
	  },
	  leftBottom: {
	    points: ['br', 'bl'],
	    overflow: autoAdjustOverflow,
	    offset: [-4, 0],
	    targetOffset: targetOffset
	  }
	};
	
	exports["default"] = placements;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = __webpack_require__(149);

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(150);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(13);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _contains = __webpack_require__(188);
	
	var _contains2 = _interopRequireDefault(_contains);
	
	var _addEventListener = __webpack_require__(189);
	
	var _addEventListener2 = _interopRequireDefault(_addEventListener);
	
	var _Popup = __webpack_require__(190);
	
	var _Popup2 = _interopRequireDefault(_Popup);
	
	var _utils = __webpack_require__(215);
	
	var _getContainerRenderMixin = __webpack_require__(216);
	
	var _getContainerRenderMixin2 = _interopRequireDefault(_getContainerRenderMixin);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function noop() {}
	
	function returnEmptyString() {
	  return '';
	}
	
	var ALL_HANDLERS = ['onClick', 'onMouseDown', 'onTouchStart', 'onMouseEnter', 'onMouseLeave', 'onFocus', 'onBlur'];
	
	var Trigger = _react2["default"].createClass({
	  displayName: 'Trigger',
	
	  propTypes: {
	    children: _react.PropTypes.any,
	    action: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
	    showAction: _react.PropTypes.any,
	    hideAction: _react.PropTypes.any,
	    getPopupClassNameFromAlign: _react.PropTypes.any,
	    onPopupVisibleChange: _react.PropTypes.func,
	    afterPopupVisibleChange: _react.PropTypes.func,
	    popup: _react.PropTypes.oneOfType([_react.PropTypes.node, _react.PropTypes.func]).isRequired,
	    popupStyle: _react.PropTypes.object,
	    prefixCls: _react.PropTypes.string,
	    popupClassName: _react.PropTypes.string,
	    popupPlacement: _react.PropTypes.string,
	    builtinPlacements: _react.PropTypes.object,
	    popupTransitionName: _react.PropTypes.string,
	    popupAnimation: _react.PropTypes.any,
	    mouseEnterDelay: _react.PropTypes.number,
	    mouseLeaveDelay: _react.PropTypes.number,
	    zIndex: _react.PropTypes.number,
	    focusDelay: _react.PropTypes.number,
	    blurDelay: _react.PropTypes.number,
	    getPopupContainer: _react.PropTypes.func,
	    destroyPopupOnHide: _react.PropTypes.bool,
	    mask: _react.PropTypes.bool,
	    maskClosable: _react.PropTypes.bool,
	    onPopupAlign: _react.PropTypes.func,
	    popupAlign: _react.PropTypes.object,
	    popupVisible: _react.PropTypes.bool,
	    maskTransitionName: _react.PropTypes.string,
	    maskAnimation: _react.PropTypes.string
	  },
	
	  mixins: [(0, _getContainerRenderMixin2["default"])({
	    autoMount: false,
	
	    isVisible: function isVisible(instance) {
	      return instance.state.popupVisible;
	    },
	    getContainer: function getContainer(instance) {
	      var popupContainer = document.createElement('div');
	      var mountNode = instance.props.getPopupContainer ? instance.props.getPopupContainer((0, _reactDom.findDOMNode)(instance)) : document.body;
	      mountNode.appendChild(popupContainer);
	      return popupContainer;
	    }
	  })],
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      prefixCls: 'rc-trigger-popup',
	      getPopupClassNameFromAlign: returnEmptyString,
	      onPopupVisibleChange: noop,
	      afterPopupVisibleChange: noop,
	      onPopupAlign: noop,
	      popupClassName: '',
	      mouseEnterDelay: 0,
	      mouseLeaveDelay: 0.1,
	      focusDelay: 0,
	      blurDelay: 0.15,
	      popupStyle: {},
	      destroyPopupOnHide: false,
	      popupAlign: {},
	      defaultPopupVisible: false,
	      mask: false,
	      maskClosable: true,
	      action: [],
	      showAction: [],
	      hideAction: []
	    };
	  },
	  getInitialState: function getInitialState() {
	    var props = this.props;
	    var popupVisible = void 0;
	    if ('popupVisible' in props) {
	      popupVisible = !!props.popupVisible;
	    } else {
	      popupVisible = !!props.defaultPopupVisible;
	    }
	    return {
	      popupVisible: popupVisible
	    };
	  },
	  componentWillMount: function componentWillMount() {
	    var _this = this;
	
	    ALL_HANDLERS.forEach(function (h) {
	      _this['fire' + h] = function (e) {
	        _this.fireEvents(h, e);
	      };
	    });
	  },
	  componentDidMount: function componentDidMount() {
	    this.componentDidUpdate({}, {
	      popupVisible: this.state.popupVisible
	    });
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(_ref) {
	    var popupVisible = _ref.popupVisible;
	
	    if (popupVisible !== undefined) {
	      this.setState({
	        popupVisible: popupVisible
	      });
	    }
	  },
	  componentDidUpdate: function componentDidUpdate(_, prevState) {
	    var props = this.props;
	    var state = this.state;
	    this.renderComponent(null, function () {
	      if (prevState.popupVisible !== state.popupVisible) {
	        props.afterPopupVisibleChange(state.popupVisible);
	      }
	    });
	    if (this.isClickToHide()) {
	      if (state.popupVisible) {
	        if (!this.clickOutsideHandler) {
	          this.clickOutsideHandler = (0, _addEventListener2["default"])(document, 'mousedown', this.onDocumentClick);
	          this.touchOutsideHandler = (0, _addEventListener2["default"])(document, 'touchstart', this.onDocumentClick);
	        }
	        return;
	      }
	    }
	    if (this.clickOutsideHandler) {
	      this.clickOutsideHandler.remove();
	      this.touchOutsideHandler.remove();
	      this.clickOutsideHandler = null;
	      this.touchOutsideHandler = null;
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    this.clearDelayTimer();
	    if (this.clickOutsideHandler) {
	      this.clickOutsideHandler.remove();
	      this.touchOutsideHandler.remove();
	      this.clickOutsideHandler = null;
	      this.touchOutsideHandler = null;
	    }
	  },
	  onMouseEnter: function onMouseEnter(e) {
	    this.fireEvents('onMouseEnter', e);
	    this.delaySetPopupVisible(true, this.props.mouseEnterDelay);
	  },
	  onMouseLeave: function onMouseLeave(e) {
	    this.fireEvents('onMouseLeave', e);
	    this.delaySetPopupVisible(false, this.props.mouseLeaveDelay);
	  },
	  onPopupMouseEnter: function onPopupMouseEnter() {
	    this.clearDelayTimer();
	  },
	  onPopupMouseLeave: function onPopupMouseLeave(e) {
	    // https://github.com/react-component/trigger/pull/13
	    // react bug?
	    if (e.relatedTarget && !e.relatedTarget.setTimeout && this._component && (0, _contains2["default"])(this._component.getPopupDomNode(), e.relatedTarget)) {
	      return;
	    }
	    this.delaySetPopupVisible(false, this.props.mouseLeaveDelay);
	  },
	  onFocus: function onFocus(e) {
	    this.fireEvents('onFocus', e);
	    // incase focusin and focusout
	    this.clearDelayTimer();
	    if (this.isFocusToShow()) {
	      this.focusTime = Date.now();
	      this.delaySetPopupVisible(true, this.props.focusDelay);
	    }
	  },
	  onMouseDown: function onMouseDown(e) {
	    this.fireEvents('onMouseDown', e);
	    this.preClickTime = Date.now();
	  },
	  onTouchStart: function onTouchStart(e) {
	    this.fireEvents('onTouchStart', e);
	    this.preTouchTime = Date.now();
	  },
	  onBlur: function onBlur(e) {
	    this.fireEvents('onBlur', e);
	    this.clearDelayTimer();
	    if (this.isBlurToHide()) {
	      this.delaySetPopupVisible(false, this.props.blurDelay);
	    }
	  },
	  onClick: function onClick(event) {
	    this.fireEvents('onClick', event);
	    // focus will trigger click
	    if (this.focusTime) {
	      var preTime = void 0;
	      if (this.preClickTime && this.preTouchTime) {
	        preTime = Math.min(this.preClickTime, this.preTouchTime);
	      } else if (this.preClickTime) {
	        preTime = this.preClickTime;
	      } else if (this.preTouchTime) {
	        preTime = this.preTouchTime;
	      }
	      if (Math.abs(preTime - this.focusTime) < 20) {
	        return;
	      }
	      this.focusTime = 0;
	    }
	    this.preClickTime = 0;
	    this.preTouchTime = 0;
	    event.preventDefault();
	    var nextVisible = !this.state.popupVisible;
	    if (this.isClickToHide() && !nextVisible || nextVisible && this.isClickToShow()) {
	      this.setPopupVisible(!this.state.popupVisible);
	    }
	  },
	  onDocumentClick: function onDocumentClick(event) {
	    if (this.props.mask && !this.props.maskClosable) {
	      return;
	    }
	    var target = event.target;
	    var root = (0, _reactDom.findDOMNode)(this);
	    var popupNode = this.getPopupDomNode();
	    if (!(0, _contains2["default"])(root, target) && !(0, _contains2["default"])(popupNode, target)) {
	      this.close();
	    }
	  },
	  getPopupDomNode: function getPopupDomNode() {
	    // for test
	    if (this._component) {
	      return this._component.isMounted() ? this._component.getPopupDomNode() : null;
	    }
	    return null;
	  },
	  getRootDomNode: function getRootDomNode() {
	    return _reactDom2["default"].findDOMNode(this);
	  },
	  getPopupClassNameFromAlign: function getPopupClassNameFromAlign(align) {
	    var className = [];
	    var props = this.props;
	    var popupPlacement = props.popupPlacement,
	        builtinPlacements = props.builtinPlacements,
	        prefixCls = props.prefixCls;
	
	    if (popupPlacement && builtinPlacements) {
	      className.push((0, _utils.getPopupClassNameFromAlign)(builtinPlacements, prefixCls, align));
	    }
	    if (props.getPopupClassNameFromAlign) {
	      className.push(props.getPopupClassNameFromAlign(align));
	    }
	    return className.join(' ');
	  },
	  getPopupAlign: function getPopupAlign() {
	    var props = this.props;
	    var popupPlacement = props.popupPlacement,
	        popupAlign = props.popupAlign,
	        builtinPlacements = props.builtinPlacements;
	
	    if (popupPlacement && builtinPlacements) {
	      return (0, _utils.getAlignFromPlacement)(builtinPlacements, popupPlacement, popupAlign);
	    }
	    return popupAlign;
	  },
	  getComponent: function getComponent() {
	    var props = this.props,
	        state = this.state;
	
	    var mouseProps = {};
	    if (this.isMouseEnterToShow()) {
	      mouseProps.onMouseEnter = this.onPopupMouseEnter;
	    }
	    if (this.isMouseLeaveToHide()) {
	      mouseProps.onMouseLeave = this.onPopupMouseLeave;
	    }
	    return _react2["default"].createElement(_Popup2["default"], (0, _extends3["default"])({
	      prefixCls: props.prefixCls,
	      destroyPopupOnHide: props.destroyPopupOnHide,
	      visible: state.popupVisible,
	      className: props.popupClassName,
	      action: props.action,
	      align: this.getPopupAlign(),
	      onAlign: props.onPopupAlign,
	      animation: props.popupAnimation,
	      getClassNameFromAlign: this.getPopupClassNameFromAlign
	    }, mouseProps, {
	      getRootDomNode: this.getRootDomNode,
	      style: props.popupStyle,
	      mask: props.mask,
	      zIndex: props.zIndex,
	      transitionName: props.popupTransitionName,
	      maskAnimation: props.maskAnimation,
	      maskTransitionName: props.maskTransitionName
	    }), typeof props.popup === 'function' ? props.popup() : props.popup);
	  },
	  setPopupVisible: function setPopupVisible(popupVisible) {
	    this.clearDelayTimer();
	    if (this.state.popupVisible !== popupVisible) {
	      if (!('popupVisible' in this.props)) {
	        this.setState({
	          popupVisible: popupVisible
	        });
	      }
	      this.props.onPopupVisibleChange(popupVisible);
	    }
	  },
	  delaySetPopupVisible: function delaySetPopupVisible(visible, delayS) {
	    var _this2 = this;
	
	    var delay = delayS * 1000;
	    this.clearDelayTimer();
	    if (delay) {
	      this.delayTimer = setTimeout(function () {
	        _this2.setPopupVisible(visible);
	        _this2.clearDelayTimer();
	      }, delay);
	    } else {
	      this.setPopupVisible(visible);
	    }
	  },
	  clearDelayTimer: function clearDelayTimer() {
	    if (this.delayTimer) {
	      clearTimeout(this.delayTimer);
	      this.delayTimer = null;
	    }
	  },
	  createTwoChains: function createTwoChains(event) {
	    var childPros = this.props.children.props;
	    var props = this.props;
	    if (childPros[event] && props[event]) {
	      return this['fire' + event];
	    }
	    return childPros[event] || props[event];
	  },
	  isClickToShow: function isClickToShow() {
	    var _props = this.props,
	        action = _props.action,
	        showAction = _props.showAction;
	
	    return action.indexOf('click') !== -1 || showAction.indexOf('click') !== -1;
	  },
	  isClickToHide: function isClickToHide() {
	    var _props2 = this.props,
	        action = _props2.action,
	        hideAction = _props2.hideAction;
	
	    return action.indexOf('click') !== -1 || hideAction.indexOf('click') !== -1;
	  },
	  isMouseEnterToShow: function isMouseEnterToShow() {
	    var _props3 = this.props,
	        action = _props3.action,
	        showAction = _props3.showAction;
	
	    return action.indexOf('hover') !== -1 || showAction.indexOf('mouseEnter') !== -1;
	  },
	  isMouseLeaveToHide: function isMouseLeaveToHide() {
	    var _props4 = this.props,
	        action = _props4.action,
	        hideAction = _props4.hideAction;
	
	    return action.indexOf('hover') !== -1 || hideAction.indexOf('mouseLeave') !== -1;
	  },
	  isFocusToShow: function isFocusToShow() {
	    var _props5 = this.props,
	        action = _props5.action,
	        showAction = _props5.showAction;
	
	    return action.indexOf('focus') !== -1 || showAction.indexOf('focus') !== -1;
	  },
	  isBlurToHide: function isBlurToHide() {
	    var _props6 = this.props,
	        action = _props6.action,
	        hideAction = _props6.hideAction;
	
	    return action.indexOf('focus') !== -1 || hideAction.indexOf('blur') !== -1;
	  },
	  forcePopupAlign: function forcePopupAlign() {
	    if (this.state.popupVisible && this.popupInstance && this.popupInstance.alignInstance) {
	      this.popupInstance.alignInstance.forceAlign();
	    }
	  },
	  fireEvents: function fireEvents(type, e) {
	    var childCallback = this.props.children.props[type];
	    if (childCallback) {
	      childCallback(e);
	    }
	    var callback = this.props[type];
	    if (callback) {
	      callback(e);
	    }
	  },
	  close: function close() {
	    this.setPopupVisible(false);
	  },
	  render: function render() {
	    var props = this.props;
	    var children = props.children;
	    var child = _react2["default"].Children.only(children);
	    var newChildProps = {};
	
	    if (this.isClickToHide() || this.isClickToShow()) {
	      newChildProps.onClick = this.onClick;
	      newChildProps.onMouseDown = this.onMouseDown;
	      newChildProps.onTouchStart = this.onTouchStart;
	    } else {
	      newChildProps.onClick = this.createTwoChains('onClick');
	      newChildProps.onMouseDown = this.createTwoChains('onMouseDown');
	      newChildProps.onTouchStart = this.createTwoChains('onTouchStart');
	    }
	    if (this.isMouseEnterToShow()) {
	      newChildProps.onMouseEnter = this.onMouseEnter;
	    } else {
	      newChildProps.onMouseEnter = this.createTwoChains('onMouseEnter');
	    }
	    if (this.isMouseLeaveToHide()) {
	      newChildProps.onMouseLeave = this.onMouseLeave;
	    } else {
	      newChildProps.onMouseLeave = this.createTwoChains('onMouseLeave');
	    }
	    if (this.isFocusToShow() || this.isBlurToHide()) {
	      newChildProps.onFocus = this.onFocus;
	      newChildProps.onBlur = this.onBlur;
	    } else {
	      newChildProps.onFocus = this.createTwoChains('onFocus');
	      newChildProps.onBlur = this.createTwoChains('onBlur');
	    }
	
	    return _react2["default"].cloneElement(child, newChildProps);
	  }
	});
	
	exports["default"] = Trigger;
	module.exports = exports['default'];

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	exports.__esModule = true;
	
	var _assign = __webpack_require__(151);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}
	
	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];
	
	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }
	
	  return target;
	};

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(152), __esModule: true };

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(153);
	module.exports = __webpack_require__(156).Object.assign;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(154);
	
	$export($export.S + $export.F, 'Object', { assign: __webpack_require__(169) });

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(155),
	    core = __webpack_require__(156),
	    ctx = __webpack_require__(157),
	    hide = __webpack_require__(159),
	    PROTOTYPE = 'prototype';
	
	var $export = function (type, name, source) {
	  var IS_FORCED = type & $export.F,
	      IS_GLOBAL = type & $export.G,
	      IS_STATIC = type & $export.S,
	      IS_PROTO = type & $export.P,
	      IS_BIND = type & $export.B,
	      IS_WRAP = type & $export.W,
	      exports = IS_GLOBAL ? core : core[name] || (core[name] = {}),
	      expProto = exports[PROTOTYPE],
	      target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE],
	      key,
	      own,
	      out;
	  if (IS_GLOBAL) source = name;
	  for (key in source) {
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if (own && key in exports) continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? function (C) {
	      var F = function (a, b, c) {
	        if (this instanceof C) {
	          switch (arguments.length) {
	            case 0:
	              return new C();
	            case 1:
	              return new C(a);
	            case 2:
	              return new C(a, b);
	          }return new C(a, b, c);
	        }return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	      // make static versions for prototype methods
	    }(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if (IS_PROTO) {
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1; // forced
	$export.G = 2; // global
	$export.S = 4; // static
	$export.P = 8; // proto
	$export.B = 16; // bind
	$export.W = 32; // wrap
	$export.U = 64; // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 155 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef

/***/ },
/* 156 */
/***/ function(module, exports) {

	var core = module.exports = { version: '2.4.0' };
	if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(158);
	module.exports = function (fn, that, length) {
	  aFunction(fn);
	  if (that === undefined) return fn;
	  switch (length) {
	    case 1:
	      return function (a) {
	        return fn.call(that, a);
	      };
	    case 2:
	      return function (a, b) {
	        return fn.call(that, a, b);
	      };
	    case 3:
	      return function (a, b, c) {
	        return fn.call(that, a, b, c);
	      };
	  }
	  return function () /* ...args */{
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 158 */
/***/ function(module, exports) {

	module.exports = function (it) {
	  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	var dP = __webpack_require__(160),
	    createDesc = __webpack_require__(168);
	module.exports = __webpack_require__(164) ? function (object, key, value) {
	  return dP.f(object, key, createDesc(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	var anObject = __webpack_require__(161),
	    IE8_DOM_DEFINE = __webpack_require__(163),
	    toPrimitive = __webpack_require__(167),
	    dP = Object.defineProperty;
	
	exports.f = __webpack_require__(164) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if (IE8_DOM_DEFINE) try {
	    return dP(O, P, Attributes);
	  } catch (e) {/* empty */}
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(162);
	module.exports = function (it) {
	  if (!isObject(it)) throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 162 */
/***/ function(module, exports) {

	module.exports = function (it) {
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(164) && !__webpack_require__(165)(function () {
	  return Object.defineProperty(__webpack_require__(166)('div'), 'a', { get: function () {
	      return 7;
	    } }).a != 7;
	});

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(165)(function () {
	  return Object.defineProperty({}, 'a', { get: function () {
	      return 7;
	    } }).a != 7;
	});

/***/ },
/* 165 */
/***/ function(module, exports) {

	module.exports = function (exec) {
	  try {
	    return !!exec();
	  } catch (e) {
	    return true;
	  }
	};

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(162),
	    document = __webpack_require__(155).document
	// in old IE typeof document.createElement is 'object'
	,
	    is = isObject(document) && isObject(document.createElement);
	module.exports = function (it) {
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(162);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function (it, S) {
	  if (!isObject(it)) return it;
	  var fn, val;
	  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
	  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 168 */
/***/ function(module, exports) {

	module.exports = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	
	var getKeys = __webpack_require__(170),
	    gOPS = __webpack_require__(185),
	    pIE = __webpack_require__(186),
	    toObject = __webpack_require__(187),
	    IObject = __webpack_require__(174),
	    $assign = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(165)(function () {
	  var A = {},
	      B = {},
	      S = Symbol(),
	      K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function (k) {
	    B[k] = k;
	  });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source) {
	  // eslint-disable-line no-unused-vars
	  var T = toObject(target),
	      aLen = arguments.length,
	      index = 1,
	      getSymbols = gOPS.f,
	      isEnum = pIE.f;
	  while (aLen > index) {
	    var S = IObject(arguments[index++]),
	        keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S),
	        length = keys.length,
	        j = 0,
	        key;
	    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
	  }return T;
	} : $assign;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys = __webpack_require__(171),
	    enumBugKeys = __webpack_require__(184);
	
	module.exports = Object.keys || function keys(O) {
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	var has = __webpack_require__(172),
	    toIObject = __webpack_require__(173),
	    arrayIndexOf = __webpack_require__(177)(false),
	    IE_PROTO = __webpack_require__(181)('IE_PROTO');
	
	module.exports = function (object, names) {
	  var O = toIObject(object),
	      i = 0,
	      result = [],
	      key;
	  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (has(O, key = names[i++])) {
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 172 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function (it, key) {
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(174),
	    defined = __webpack_require__(176);
	module.exports = function (it) {
	  return IObject(defined(it));
	};

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(175);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 175 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function (it) {
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 176 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function (it) {
	  if (it == undefined) throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(173),
	    toLength = __webpack_require__(178),
	    toIndex = __webpack_require__(180);
	module.exports = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIObject($this),
	        length = toLength(O.length),
	        index = toIndex(fromIndex, length),
	        value;
	    // Array#includes uses SameValueZero equality algorithm
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      if (value != value) return true;
	      // Array#toIndex ignores holes, Array#includes - not
	    } else for (; length > index; index++) if (IS_INCLUDES || index in O) {
	      if (O[index] === el) return IS_INCLUDES || index || 0;
	    }return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(179),
	    min = Math.min;
	module.exports = function (it) {
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 179 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil = Math.ceil,
	    floor = Math.floor;
	module.exports = function (it) {
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(179),
	    max = Math.max,
	    min = Math.min;
	module.exports = function (index, length) {
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(182)('keys'),
	    uid = __webpack_require__(183);
	module.exports = function (key) {
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(155),
	    SHARED = '__core-js_shared__',
	    store = global[SHARED] || (global[SHARED] = {});
	module.exports = function (key) {
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 183 */
/***/ function(module, exports) {

	var id = 0,
	    px = Math.random();
	module.exports = function (key) {
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 184 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');

/***/ },
/* 185 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 186 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(176);
	module.exports = function (it) {
	  return Object(defined(it));
	};

/***/ },
/* 188 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = contains;
	function contains(root, n) {
	  var node = n;
	  while (node) {
	    if (node === root) {
	      return true;
	    }
	    node = node.parentNode;
	  }
	
	  return false;
	}
	module.exports = exports['default'];

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = addEventListenerWrap;
	
	var _addDomEventListener = __webpack_require__(139);
	
	var _addDomEventListener2 = _interopRequireDefault(_addDomEventListener);
	
	var _reactDom = __webpack_require__(13);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function addEventListenerWrap(target, eventType, cb) {
	  /* eslint camelcase: 2 */
	  var callback = _reactDom2["default"].unstable_batchedUpdates ? function run(e) {
	    _reactDom2["default"].unstable_batchedUpdates(cb, e);
	  } : cb;
	  return (0, _addDomEventListener2["default"])(target, eventType, callback);
	}
	module.exports = exports['default'];

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(150);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(13);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _rcAlign = __webpack_require__(191);
	
	var _rcAlign2 = _interopRequireDefault(_rcAlign);
	
	var _rcAnimate = __webpack_require__(203);
	
	var _rcAnimate2 = _interopRequireDefault(_rcAnimate);
	
	var _PopupInner = __webpack_require__(212);
	
	var _PopupInner2 = _interopRequireDefault(_PopupInner);
	
	var _LazyRenderBox = __webpack_require__(213);
	
	var _LazyRenderBox2 = _interopRequireDefault(_LazyRenderBox);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	var Popup = _react2["default"].createClass({
	  displayName: 'Popup',
	
	  propTypes: {
	    visible: _react.PropTypes.bool,
	    style: _react.PropTypes.object,
	    getClassNameFromAlign: _react.PropTypes.func,
	    onAlign: _react.PropTypes.func,
	    getRootDomNode: _react.PropTypes.func,
	    onMouseEnter: _react.PropTypes.func,
	    align: _react.PropTypes.any,
	    destroyPopupOnHide: _react.PropTypes.bool,
	    className: _react.PropTypes.string,
	    prefixCls: _react.PropTypes.string,
	    onMouseLeave: _react.PropTypes.func
	  },
	
	  componentDidMount: function componentDidMount() {
	    this.rootNode = this.getPopupDomNode();
	  },
	  onAlign: function onAlign(popupDomNode, align) {
	    var props = this.props;
	    var alignClassName = props.getClassNameFromAlign(props.align);
	    var currentAlignClassName = props.getClassNameFromAlign(align);
	    if (alignClassName !== currentAlignClassName) {
	      this.currentAlignClassName = currentAlignClassName;
	      popupDomNode.className = this.getClassName(currentAlignClassName);
	    }
	    props.onAlign(popupDomNode, align);
	  },
	  getPopupDomNode: function getPopupDomNode() {
	    return _reactDom2["default"].findDOMNode(this.refs.popup);
	  },
	  getTarget: function getTarget() {
	    return this.props.getRootDomNode();
	  },
	  getMaskTransitionName: function getMaskTransitionName() {
	    var props = this.props;
	    var transitionName = props.maskTransitionName;
	    var animation = props.maskAnimation;
	    if (!transitionName && animation) {
	      transitionName = props.prefixCls + '-' + animation;
	    }
	    return transitionName;
	  },
	  getTransitionName: function getTransitionName() {
	    var props = this.props;
	    var transitionName = props.transitionName;
	    if (!transitionName && props.animation) {
	      transitionName = props.prefixCls + '-' + props.animation;
	    }
	    return transitionName;
	  },
	  getClassName: function getClassName(currentAlignClassName) {
	    return this.props.prefixCls + ' ' + this.props.className + ' ' + currentAlignClassName;
	  },
	  getPopupElement: function getPopupElement() {
	    var props = this.props;
	    var align = props.align,
	        style = props.style,
	        visible = props.visible,
	        prefixCls = props.prefixCls,
	        destroyPopupOnHide = props.destroyPopupOnHide;
	
	    var className = this.getClassName(this.currentAlignClassName || props.getClassNameFromAlign(align));
	    var hiddenClassName = prefixCls + '-hidden';
	    if (!visible) {
	      this.currentAlignClassName = null;
	    }
	    var newStyle = (0, _extends3["default"])({}, style, this.getZIndexStyle());
	    var popupInnerProps = {
	      className: className,
	      prefixCls: prefixCls,
	      ref: 'popup',
	      onMouseEnter: props.onMouseEnter,
	      onMouseLeave: props.onMouseLeave,
	      style: newStyle
	    };
	    if (destroyPopupOnHide) {
	      return _react2["default"].createElement(_rcAnimate2["default"], {
	        component: '',
	        exclusive: true,
	        transitionAppear: true,
	        transitionName: this.getTransitionName()
	      }, visible ? _react2["default"].createElement(_rcAlign2["default"], {
	        target: this.getTarget,
	        key: 'popup',
	        ref: this.saveAlign,
	        monitorWindowResize: true,
	        align: align,
	        onAlign: this.onAlign
	      }, _react2["default"].createElement(_PopupInner2["default"], (0, _extends3["default"])({
	        visible: true
	      }, popupInnerProps), props.children)) : null);
	    }
	    return _react2["default"].createElement(_rcAnimate2["default"], {
	      component: '',
	      exclusive: true,
	      transitionAppear: true,
	      transitionName: this.getTransitionName(),
	      showProp: 'xVisible'
	    }, _react2["default"].createElement(_rcAlign2["default"], {
	      target: this.getTarget,
	      key: 'popup',
	      ref: this.saveAlign,
	      monitorWindowResize: true,
	      xVisible: visible,
	      childrenProps: { visible: 'xVisible' },
	      disabled: !visible,
	      align: align,
	      onAlign: this.onAlign
	    }, _react2["default"].createElement(_PopupInner2["default"], (0, _extends3["default"])({
	      hiddenClassName: hiddenClassName
	    }, popupInnerProps), props.children)));
	  },
	  getZIndexStyle: function getZIndexStyle() {
	    var style = {};
	    var props = this.props;
	    if (props.zIndex !== undefined) {
	      style.zIndex = props.zIndex;
	    }
	    return style;
	  },
	  getMaskElement: function getMaskElement() {
	    var props = this.props;
	    var maskElement = void 0;
	    if (props.mask) {
	      var maskTransition = this.getMaskTransitionName();
	      maskElement = _react2["default"].createElement(_LazyRenderBox2["default"], {
	        style: this.getZIndexStyle(),
	        key: 'mask',
	        className: props.prefixCls + '-mask',
	        hiddenClassName: props.prefixCls + '-mask-hidden',
	        visible: props.visible
	      });
	      if (maskTransition) {
	        maskElement = _react2["default"].createElement(_rcAnimate2["default"], {
	          key: 'mask',
	          showProp: 'visible',
	          transitionAppear: true,
	          component: '',
	          transitionName: maskTransition
	        }, maskElement);
	      }
	    }
	    return maskElement;
	  },
	  saveAlign: function saveAlign(align) {
	    this.alignInstance = align;
	  },
	  render: function render() {
	    return _react2["default"].createElement('div', null, this.getMaskElement(), this.getPopupElement());
	  }
	});
	
	exports["default"] = Popup;
	module.exports = exports['default'];

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Align = __webpack_require__(192);
	
	var _Align2 = _interopRequireDefault(_Align);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	exports["default"] = _Align2["default"]; // export this package's api
	
	module.exports = exports['default'];

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(13);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _domAlign = __webpack_require__(193);
	
	var _domAlign2 = _interopRequireDefault(_domAlign);
	
	var _addEventListener = __webpack_require__(138);
	
	var _addEventListener2 = _interopRequireDefault(_addEventListener);
	
	var _isWindow = __webpack_require__(202);
	
	var _isWindow2 = _interopRequireDefault(_isWindow);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function buffer(fn, ms) {
	  var timer = void 0;
	
	  function clear() {
	    if (timer) {
	      clearTimeout(timer);
	      timer = null;
	    }
	  }
	
	  function bufferFn() {
	    clear();
	    timer = setTimeout(fn, ms);
	  }
	
	  bufferFn.clear = clear;
	
	  return bufferFn;
	}
	
	var Align = _react2["default"].createClass({
	  displayName: 'Align',
	
	  propTypes: {
	    childrenProps: _react.PropTypes.object,
	    align: _react.PropTypes.object.isRequired,
	    target: _react.PropTypes.func,
	    onAlign: _react.PropTypes.func,
	    monitorBufferTime: _react.PropTypes.number,
	    monitorWindowResize: _react.PropTypes.bool,
	    disabled: _react.PropTypes.bool,
	    children: _react.PropTypes.any
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      target: function target() {
	        return window;
	      },
	      onAlign: function onAlign() {},
	
	      monitorBufferTime: 50,
	      monitorWindowResize: false,
	      disabled: false
	    };
	  },
	  componentDidMount: function componentDidMount() {
	    var props = this.props;
	    // if parent ref not attached .... use document.getElementById
	    this.forceAlign();
	    if (!props.disabled && props.monitorWindowResize) {
	      this.startMonitorWindowResize();
	    }
	  },
	  componentDidUpdate: function componentDidUpdate(prevProps) {
	    var reAlign = false;
	    var props = this.props;
	
	    if (!props.disabled) {
	      if (prevProps.disabled || prevProps.align !== props.align) {
	        reAlign = true;
	      } else {
	        var lastTarget = prevProps.target();
	        var currentTarget = props.target();
	        if ((0, _isWindow2["default"])(lastTarget) && (0, _isWindow2["default"])(currentTarget)) {
	          reAlign = false;
	        } else if (lastTarget !== currentTarget) {
	          reAlign = true;
	        }
	      }
	    }
	
	    if (reAlign) {
	      this.forceAlign();
	    }
	
	    if (props.monitorWindowResize && !props.disabled) {
	      this.startMonitorWindowResize();
	    } else {
	      this.stopMonitorWindowResize();
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    this.stopMonitorWindowResize();
	  },
	  startMonitorWindowResize: function startMonitorWindowResize() {
	    if (!this.resizeHandler) {
	      this.bufferMonitor = buffer(this.forceAlign, this.props.monitorBufferTime);
	      this.resizeHandler = (0, _addEventListener2["default"])(window, 'resize', this.bufferMonitor);
	    }
	  },
	  stopMonitorWindowResize: function stopMonitorWindowResize() {
	    if (this.resizeHandler) {
	      this.bufferMonitor.clear();
	      this.resizeHandler.remove();
	      this.resizeHandler = null;
	    }
	  },
	  forceAlign: function forceAlign() {
	    var props = this.props;
	    if (!props.disabled) {
	      var source = _reactDom2["default"].findDOMNode(this);
	      props.onAlign(source, (0, _domAlign2["default"])(source, props.target(), props.align));
	    }
	  },
	  render: function render() {
	    var _props = this.props;
	    var childrenProps = _props.childrenProps;
	    var children = _props.children;
	
	    var child = _react2["default"].Children.only(children);
	    if (childrenProps) {
	      var newProps = {};
	      for (var prop in childrenProps) {
	        if (childrenProps.hasOwnProperty(prop)) {
	          newProps[prop] = this.props[childrenProps[prop]];
	        }
	      }
	      return _react2["default"].cloneElement(child, newProps);
	    }
	    return child;
	  }
	});
	
	exports["default"] = Align;
	module.exports = exports['default'];

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(194);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _getOffsetParent = __webpack_require__(196);
	
	var _getOffsetParent2 = _interopRequireDefault(_getOffsetParent);
	
	var _getVisibleRectForElement = __webpack_require__(197);
	
	var _getVisibleRectForElement2 = _interopRequireDefault(_getVisibleRectForElement);
	
	var _adjustForViewport = __webpack_require__(198);
	
	var _adjustForViewport2 = _interopRequireDefault(_adjustForViewport);
	
	var _getRegion = __webpack_require__(199);
	
	var _getRegion2 = _interopRequireDefault(_getRegion);
	
	var _getElFuturePos = __webpack_require__(200);
	
	var _getElFuturePos2 = _interopRequireDefault(_getElFuturePos);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	// http://yiminghe.iteye.com/blog/1124720
	
	/**
	 * align dom node flexibly
	 * @author yiminghe@gmail.com
	 */
	
	function isFailX(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;
	}
	
	function isFailY(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;
	}
	
	function isCompleteFailX(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;
	}
	
	function isCompleteFailY(elFuturePos, elRegion, visibleRect) {
	  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;
	}
	
	function flip(points, reg, map) {
	  var ret = [];
	  _utils2["default"].each(points, function (p) {
	    ret.push(p.replace(reg, function (m) {
	      return map[m];
	    }));
	  });
	  return ret;
	}
	
	function flipOffset(offset, index) {
	  offset[index] = -offset[index];
	  return offset;
	}
	
	function convertOffset(str, offsetLen) {
	  var n = void 0;
	  if (/%$/.test(str)) {
	    n = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;
	  } else {
	    n = parseInt(str, 10);
	  }
	  return n || 0;
	}
	
	function normalizeOffset(offset, el) {
	  offset[0] = convertOffset(offset[0], el.width);
	  offset[1] = convertOffset(offset[1], el.height);
	}
	
	function domAlign(el, refNode, align) {
	  var points = align.points;
	  var offset = align.offset || [0, 0];
	  var targetOffset = align.targetOffset || [0, 0];
	  var overflow = align.overflow;
	  var target = align.target || refNode;
	  var source = align.source || el;
	  offset = [].concat(offset);
	  targetOffset = [].concat(targetOffset);
	  overflow = overflow || {};
	  var newOverflowCfg = {};
	
	  var fail = 0;
	  // 当前节点可以被放置的显示区域
	  var visibleRect = (0, _getVisibleRectForElement2["default"])(source);
	  // 当前节点所占的区域, left/top/width/height
	  var elRegion = (0, _getRegion2["default"])(source);
	  // 参照节点所占的区域, left/top/width/height
	  var refNodeRegion = (0, _getRegion2["default"])(target);
	  // 将 offset 转换成数值，支持百分比
	  normalizeOffset(offset, elRegion);
	  normalizeOffset(targetOffset, refNodeRegion);
	  // 当前节点将要被放置的位置
	  var elFuturePos = (0, _getElFuturePos2["default"])(elRegion, refNodeRegion, points, offset, targetOffset);
	  // 当前节点将要所处的区域
	  var newElRegion = _utils2["default"].merge(elRegion, elFuturePos);
	
	  // 如果可视区域不能完全放置当前节点时允许调整
	  if (visibleRect && (overflow.adjustX || overflow.adjustY)) {
	    if (overflow.adjustX) {
	      // 如果横向不能放下
	      if (isFailX(elFuturePos, elRegion, visibleRect)) {
	        // 对齐位置反下
	        var newPoints = flip(points, /[lr]/ig, {
	          l: 'r',
	          r: 'l'
	        });
	        // 偏移量也反下
	        var newOffset = flipOffset(offset, 0);
	        var newTargetOffset = flipOffset(targetOffset, 0);
	        var newElFuturePos = (0, _getElFuturePos2["default"])(elRegion, refNodeRegion, newPoints, newOffset, newTargetOffset);
	        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {
	          fail = 1;
	          points = newPoints;
	          offset = newOffset;
	          targetOffset = newTargetOffset;
	        }
	      }
	    }
	
	    if (overflow.adjustY) {
	      // 如果纵向不能放下
	      if (isFailY(elFuturePos, elRegion, visibleRect)) {
	        // 对齐位置反下
	        var _newPoints = flip(points, /[tb]/ig, {
	          t: 'b',
	          b: 't'
	        });
	        // 偏移量也反下
	        var _newOffset = flipOffset(offset, 1);
	        var _newTargetOffset = flipOffset(targetOffset, 1);
	        var _newElFuturePos = (0, _getElFuturePos2["default"])(elRegion, refNodeRegion, _newPoints, _newOffset, _newTargetOffset);
	        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {
	          fail = 1;
	          points = _newPoints;
	          offset = _newOffset;
	          targetOffset = _newTargetOffset;
	        }
	      }
	    }
	
	    // 如果失败，重新计算当前节点将要被放置的位置
	    if (fail) {
	      elFuturePos = (0, _getElFuturePos2["default"])(elRegion, refNodeRegion, points, offset, targetOffset);
	      _utils2["default"].mix(newElRegion, elFuturePos);
	    }
	
	    // 检查反下后的位置是否可以放下了
	    // 如果仍然放不下只有指定了可以调整当前方向才调整
	    newOverflowCfg.adjustX = overflow.adjustX && isFailX(elFuturePos, elRegion, visibleRect);
	
	    newOverflowCfg.adjustY = overflow.adjustY && isFailY(elFuturePos, elRegion, visibleRect);
	
	    // 确实要调整，甚至可能会调整高度宽度
	    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {
	      newElRegion = (0, _adjustForViewport2["default"])(elFuturePos, elRegion, visibleRect, newOverflowCfg);
	    }
	  }
	
	  // need judge to in case set fixed with in css on height auto element
	  if (newElRegion.width !== elRegion.width) {
	    _utils2["default"].css(source, 'width', _utils2["default"].width(source) + newElRegion.width - elRegion.width);
	  }
	
	  if (newElRegion.height !== elRegion.height) {
	    _utils2["default"].css(source, 'height', _utils2["default"].height(source) + newElRegion.height - elRegion.height);
	  }
	
	  // https://github.com/kissyteam/kissy/issues/190
	  // 相对于屏幕位置没变，而 left/top 变了
	  // 例如 <div 'relative'><el absolute></div>
	  _utils2["default"].offset(source, {
	    left: newElRegion.left,
	    top: newElRegion.top
	  }, {
	    useCssRight: align.useCssRight,
	    useCssBottom: align.useCssBottom,
	    useCssTransform: align.useCssTransform
	  });
	
	  return {
	    points: points,
	    offset: offset,
	    targetOffset: targetOffset,
	    overflow: newOverflowCfg
	  };
	}
	
	domAlign.__getOffsetParent = _getOffsetParent2["default"];
	
	domAlign.__getVisibleRectForElement = _getVisibleRectForElement2["default"];
	
	exports["default"] = domAlign;
	/**
	 *  2012-04-26 yiminghe@gmail.com
	 *   - 优化智能对齐算法
	 *   - 慎用 resizeXX
	 *
	 *  2011-07-13 yiminghe@gmail.com note:
	 *   - 增加智能对齐，以及大小调整选项
	 **/
	
	module.exports = exports['default'];

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
	};
	
	var _propertyUtils = __webpack_require__(195);
	
	var RE_NUM = /[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source;
	
	var getComputedStyleX = void 0;
	
	function force(x, y) {
	  return x + y;
	}
	
	function css(el, name, v) {
	  var value = v;
	  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
	    for (var i in name) {
	      if (name.hasOwnProperty(i)) {
	        css(el, i, name[i]);
	      }
	    }
	    return undefined;
	  }
	  if (typeof value !== 'undefined') {
	    if (typeof value === 'number') {
	      value = value + 'px';
	    }
	    el.style[name] = value;
	    return undefined;
	  }
	  return getComputedStyleX(el, name);
	}
	
	function getClientPosition(elem) {
	  var box = void 0;
	  var x = void 0;
	  var y = void 0;
	  var doc = elem.ownerDocument;
	  var body = doc.body;
	  var docElem = doc && doc.documentElement;
	  // 根据 GBS 最新数据，A-Grade Browsers 都已支持 getBoundingClientRect 方法，不用再考虑传统的实现方式
	  box = elem.getBoundingClientRect();
	
	  // 注：jQuery 还考虑减去 docElem.clientLeft/clientTop
	  // 但测试发现，这样反而会导致当 html 和 body 有边距/边框样式时，获取的值不正确
	  // 此外，ie6 会忽略 html 的 margin 值，幸运地是没有谁会去设置 html 的 margin
	
	  x = box.left;
	  y = box.top;
	
	  // In IE, most of the time, 2 extra pixels are added to the top and left
	  // due to the implicit 2-pixel inset border.  In IE6/7 quirks mode and
	  // IE6 standards mode, this border can be overridden by setting the
	  // document element's border to zero -- thus, we cannot rely on the
	  // offset always being 2 pixels.
	
	  // In quirks mode, the offset can be determined by querying the body's
	  // clientLeft/clientTop, but in standards mode, it is found by querying
	  // the document element's clientLeft/clientTop.  Since we already called
	  // getClientBoundingRect we have already forced a reflow, so it is not
	  // too expensive just to query them all.
	
	  // ie 下应该减去窗口的边框吧，毕竟默认 absolute 都是相对窗口定位的
	  // 窗口边框标准是设 documentElement ,quirks 时设置 body
	  // 最好禁止在 body 和 html 上边框 ，但 ie < 9 html 默认有 2px ，减去
	  // 但是非 ie 不可能设置窗口边框，body html 也不是窗口 ,ie 可以通过 html,body 设置
	  // 标准 ie 下 docElem.clientTop 就是 border-top
	  // ie7 html 即窗口边框改变不了。永远为 2
	  // 但标准 firefox/chrome/ie9 下 docElem.clientTop 是窗口边框，即使设了 border-top 也为 0
	
	  x -= docElem.clientLeft || body.clientLeft || 0;
	  y -= docElem.clientTop || body.clientTop || 0;
	
	  return {
	    left: x,
	    top: y
	  };
	}
	
	function getScroll(w, top) {
	  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];
	  var method = 'scroll' + (top ? 'Top' : 'Left');
	  if (typeof ret !== 'number') {
	    var d = w.document;
	    // ie6,7,8 standard mode
	    ret = d.documentElement[method];
	    if (typeof ret !== 'number') {
	      // quirks mode
	      ret = d.body[method];
	    }
	  }
	  return ret;
	}
	
	function getScrollLeft(w) {
	  return getScroll(w);
	}
	
	function getScrollTop(w) {
	  return getScroll(w, true);
	}
	
	function getOffset(el) {
	  var pos = getClientPosition(el);
	  var doc = el.ownerDocument;
	  var w = doc.defaultView || doc.parentWindow;
	  pos.left += getScrollLeft(w);
	  pos.top += getScrollTop(w);
	  return pos;
	}
	function _getComputedStyle(elem, name, cs) {
	  var computedStyle = cs;
	  var val = '';
	  var d = elem.ownerDocument;
	  computedStyle = computedStyle || d.defaultView.getComputedStyle(elem, null);
	
	  // https://github.com/kissyteam/kissy/issues/61
	  if (computedStyle) {
	    val = computedStyle.getPropertyValue(name) || computedStyle[name];
	  }
	
	  return val;
	}
	
	var _RE_NUM_NO_PX = new RegExp('^(' + RE_NUM + ')(?!px)[a-z%]+$', 'i');
	var RE_POS = /^(top|right|bottom|left)$/;
	var CURRENT_STYLE = 'currentStyle';
	var RUNTIME_STYLE = 'runtimeStyle';
	var LEFT = 'left';
	var PX = 'px';
	
	function _getComputedStyleIE(elem, name) {
	  // currentStyle maybe null
	  // http://msdn.microsoft.com/en-us/library/ms535231.aspx
	  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];
	
	  // 当 width/height 设置为百分比时，通过 pixelLeft 方式转换的 width/height 值
	  // 一开始就处理了! CUSTOM_STYLE.height,CUSTOM_STYLE.width ,cssHook 解决@2011-08-19
	  // 在 ie 下不对，需要直接用 offset 方式
	  // borderWidth 等值也有问题，但考虑到 borderWidth 设为百分比的概率很小，这里就不考虑了
	
	  // From the awesome hack by Dean Edwards
	  // http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291
	  // If we're not dealing with a regular pixel number
	  // but a number that has a weird ending, we need to convert it to pixels
	  // exclude left right for relativity
	  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {
	    // Remember the original values
	    var style = elem.style;
	    var left = style[LEFT];
	    var rsLeft = elem[RUNTIME_STYLE][LEFT];
	
	    // prevent flashing of content
	    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];
	
	    // Put in the new values to get a computed value out
	    style[LEFT] = name === 'fontSize' ? '1em' : ret || 0;
	    ret = style.pixelLeft + PX;
	
	    // Revert the changed values
	    style[LEFT] = left;
	
	    elem[RUNTIME_STYLE][LEFT] = rsLeft;
	  }
	  return ret === '' ? 'auto' : ret;
	}
	
	if (typeof window !== 'undefined') {
	  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;
	}
	
	function getOffsetDirection(dir, option) {
	  if (dir === 'left') {
	    return option.useCssRight ? 'right' : dir;
	  }
	  return option.useCssBottom ? 'bottom' : dir;
	}
	
	function oppositeOffsetDirection(dir) {
	  if (dir === 'left') {
	    return 'right';
	  } else if (dir === 'right') {
	    return 'left';
	  } else if (dir === 'top') {
	    return 'bottom';
	  } else if (dir === 'bottom') {
	    return 'top';
	  }
	}
	
	// 设置 elem 相对 elem.ownerDocument 的坐标
	function setLeftTop(elem, offset, option) {
	  // set position first, in-case top/left are set even on static elem
	  if (css(elem, 'position') === 'static') {
	    elem.style.position = 'relative';
	  }
	  var presetH = -999;
	  var presetV = -999;
	  var horizontalProperty = getOffsetDirection('left', option);
	  var verticalProperty = getOffsetDirection('top', option);
	  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);
	  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);
	
	  if (horizontalProperty !== 'left') {
	    presetH = 999;
	  }
	
	  if (verticalProperty !== 'top') {
	    presetV = 999;
	  }
	  var originalTransition = '';
	  var originalOffset = getOffset(elem);
	  if ('left' in offset || 'top' in offset) {
	    originalTransition = (0, _propertyUtils.getTransitionProperty)(elem) || '';
	    (0, _propertyUtils.setTransitionProperty)(elem, 'none');
	  }
	  if ('left' in offset) {
	    elem.style[oppositeHorizontalProperty] = '';
	    elem.style[horizontalProperty] = presetH + 'px';
	  }
	  if ('top' in offset) {
	    elem.style[oppositeVerticalProperty] = '';
	    elem.style[verticalProperty] = presetV + 'px';
	  }
	  var old = getOffset(elem);
	  var originalStyle = {};
	  for (var key in offset) {
	    if (offset.hasOwnProperty(key)) {
	      var dir = getOffsetDirection(key, option);
	      var preset = key === 'left' ? presetH : presetV;
	      var off = originalOffset[key] - old[key];
	      if (dir === key) {
	        originalStyle[dir] = preset + off;
	      } else {
	        originalStyle[dir] = preset - off;
	      }
	    }
	  }
	  css(elem, originalStyle);
	  // force relayout
	  force(elem.offsetTop, elem.offsetLeft);
	  if ('left' in offset || 'top' in offset) {
	    (0, _propertyUtils.setTransitionProperty)(elem, originalTransition);
	  }
	  var ret = {};
	  for (var _key in offset) {
	    if (offset.hasOwnProperty(_key)) {
	      var _dir = getOffsetDirection(_key, option);
	      var _off = offset[_key] - originalOffset[_key];
	      if (_key === _dir) {
	        ret[_dir] = originalStyle[_dir] + _off;
	      } else {
	        ret[_dir] = originalStyle[_dir] - _off;
	      }
	    }
	  }
	  css(elem, ret);
	}
	
	function setTransform(elem, offset) {
	  var originalOffset = getOffset(elem);
	  var originalXY = (0, _propertyUtils.getTransformXY)(elem);
	  var resultXY = { x: originalXY.x, y: originalXY.y };
	  if ('left' in offset) {
	    resultXY.x = originalXY.x + offset.left - originalOffset.left;
	  }
	  if ('top' in offset) {
	    resultXY.y = originalXY.y + offset.top - originalOffset.top;
	  }
	  (0, _propertyUtils.setTransformXY)(elem, resultXY);
	}
	
	function setOffset(elem, offset, option) {
	  if (option.useCssRight || option.useCssBottom) {
	    setLeftTop(elem, offset, option);
	  } else if (option.useCssTransform && (0, _propertyUtils.getTransformName)() in document.body.style) {
	    setTransform(elem, offset, option);
	  } else {
	    setLeftTop(elem, offset, option);
	  }
	}
	
	function each(arr, fn) {
	  for (var i = 0; i < arr.length; i++) {
	    fn(arr[i]);
	  }
	}
	
	function isBorderBoxFn(elem) {
	  return getComputedStyleX(elem, 'boxSizing') === 'border-box';
	}
	
	var BOX_MODELS = ['margin', 'border', 'padding'];
	var CONTENT_INDEX = -1;
	var PADDING_INDEX = 2;
	var BORDER_INDEX = 1;
	var MARGIN_INDEX = 0;
	
	function swap(elem, options, callback) {
	  var old = {};
	  var style = elem.style;
	  var name = void 0;
	
	  // Remember the old values, and insert the new ones
	  for (name in options) {
	    if (options.hasOwnProperty(name)) {
	      old[name] = style[name];
	      style[name] = options[name];
	    }
	  }
	
	  callback.call(elem);
	
	  // Revert the old values
	  for (name in options) {
	    if (options.hasOwnProperty(name)) {
	      style[name] = old[name];
	    }
	  }
	}
	
	function getPBMWidth(elem, props, which) {
	  var value = 0;
	  var prop = void 0;
	  var j = void 0;
	  var i = void 0;
	  for (j = 0; j < props.length; j++) {
	    prop = props[j];
	    if (prop) {
	      for (i = 0; i < which.length; i++) {
	        var cssProp = void 0;
	        if (prop === 'border') {
	          cssProp = '' + prop + which[i] + 'Width';
	        } else {
	          cssProp = prop + which[i];
	        }
	        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;
	      }
	    }
	  }
	  return value;
	}
	
	/**
	 * A crude way of determining if an object is a window
	 * @member util
	 */
	function isWindow(obj) {
	  // must use == for ie8
	  /* eslint eqeqeq:0 */
	  return obj !== null && obj !== undefined && obj == obj.window;
	}
	
	var domUtils = {};
	
	each(['Width', 'Height'], function (name) {
	  domUtils['doc' + name] = function (refWin) {
	    var d = refWin.document;
	    return Math.max(
	    // firefox chrome documentElement.scrollHeight< body.scrollHeight
	    // ie standard mode : documentElement.scrollHeight> body.scrollHeight
	    d.documentElement['scroll' + name],
	    // quirks : documentElement.scrollHeight 最大等于可视窗口多一点？
	    d.body['scroll' + name], domUtils['viewport' + name](d));
	  };
	
	  domUtils['viewport' + name] = function (win) {
	    // pc browser includes scrollbar in window.innerWidth
	    var prop = 'client' + name;
	    var doc = win.document;
	    var body = doc.body;
	    var documentElement = doc.documentElement;
	    var documentElementProp = documentElement[prop];
	    // 标准模式取 documentElement
	    // backcompat 取 body
	    return doc.compatMode === 'CSS1Compat' && documentElementProp || body && body[prop] || documentElementProp;
	  };
	});
	
	/*
	 得到元素的大小信息
	 @param elem
	 @param name
	 @param {String} [extra]  'padding' : (css width) + padding
	 'border' : (css width) + padding + border
	 'margin' : (css width) + padding + border + margin
	 */
	function getWH(elem, name, ex) {
	  var extra = ex;
	  if (isWindow(elem)) {
	    return name === 'width' ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);
	  } else if (elem.nodeType === 9) {
	    return name === 'width' ? domUtils.docWidth(elem) : domUtils.docHeight(elem);
	  }
	  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
	  var borderBoxValue = name === 'width' ? elem.offsetWidth : elem.offsetHeight;
	  var computedStyle = getComputedStyleX(elem);
	  var isBorderBox = isBorderBoxFn(elem, computedStyle);
	  var cssBoxValue = 0;
	  if (borderBoxValue === null || borderBoxValue === undefined || borderBoxValue <= 0) {
	    borderBoxValue = undefined;
	    // Fall back to computed then un computed css if necessary
	    cssBoxValue = getComputedStyleX(elem, name);
	    if (cssBoxValue === null || cssBoxValue === undefined || Number(cssBoxValue) < 0) {
	      cssBoxValue = elem.style[name] || 0;
	    }
	    // Normalize '', auto, and prepare for extra
	    cssBoxValue = parseFloat(cssBoxValue) || 0;
	  }
	  if (extra === undefined) {
	    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;
	  }
	  var borderBoxValueOrIsBorderBox = borderBoxValue !== undefined || isBorderBox;
	  var val = borderBoxValue || cssBoxValue;
	  if (extra === CONTENT_INDEX) {
	    if (borderBoxValueOrIsBorderBox) {
	      return val - getPBMWidth(elem, ['border', 'padding'], which, computedStyle);
	    }
	    return cssBoxValue;
	  } else if (borderBoxValueOrIsBorderBox) {
	    if (extra === BORDER_INDEX) {
	      return val;
	    }
	    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, ['border'], which, computedStyle) : getPBMWidth(elem, ['margin'], which, computedStyle));
	  }
	  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which, computedStyle);
	}
	
	var cssShow = {
	  position: 'absolute',
	  visibility: 'hidden',
	  display: 'block'
	};
	
	// fix #119 : https://github.com/kissyteam/kissy/issues/119
	function getWHIgnoreDisplay() {
	  for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {
	    args[_key2] = arguments[_key2];
	  }
	
	  var val = void 0;
	  var elem = args[0];
	  // in case elem is window
	  // elem.offsetWidth === undefined
	  if (elem.offsetWidth !== 0) {
	    val = getWH.apply(undefined, args);
	  } else {
	    swap(elem, cssShow, function () {
	      val = getWH.apply(undefined, args);
	    });
	  }
	  return val;
	}
	
	each(['width', 'height'], function (name) {
	  var first = name.charAt(0).toUpperCase() + name.slice(1);
	  domUtils['outer' + first] = function (el, includeMargin) {
	    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);
	  };
	  var which = name === 'width' ? ['Left', 'Right'] : ['Top', 'Bottom'];
	
	  domUtils[name] = function (elem, v) {
	    var val = v;
	    if (val !== undefined) {
	      if (elem) {
	        var computedStyle = getComputedStyleX(elem);
	        var isBorderBox = isBorderBoxFn(elem);
	        if (isBorderBox) {
	          val += getPBMWidth(elem, ['padding', 'border'], which, computedStyle);
	        }
	        return css(elem, name, val);
	      }
	      return undefined;
	    }
	    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);
	  };
	});
	
	function mix(to, from) {
	  for (var i in from) {
	    if (from.hasOwnProperty(i)) {
	      to[i] = from[i];
	    }
	  }
	  return to;
	}
	
	var utils = {
	  getWindow: function getWindow(node) {
	    if (node && node.document && node.setTimeout) {
	      return node;
	    }
	    var doc = node.ownerDocument || node;
	    return doc.defaultView || doc.parentWindow;
	  },
	  offset: function offset(el, value, option) {
	    if (typeof value !== 'undefined') {
	      setOffset(el, value, option || {});
	    } else {
	      return getOffset(el);
	    }
	  },
	
	  isWindow: isWindow,
	  each: each,
	  css: css,
	  clone: function clone(obj) {
	    var i = void 0;
	    var ret = {};
	    for (i in obj) {
	      if (obj.hasOwnProperty(i)) {
	        ret[i] = obj[i];
	      }
	    }
	    var overflow = obj.overflow;
	    if (overflow) {
	      for (i in obj) {
	        if (obj.hasOwnProperty(i)) {
	          ret.overflow[i] = obj.overflow[i];
	        }
	      }
	    }
	    return ret;
	  },
	
	  mix: mix,
	  getWindowScrollLeft: function getWindowScrollLeft(w) {
	    return getScrollLeft(w);
	  },
	  getWindowScrollTop: function getWindowScrollTop(w) {
	    return getScrollTop(w);
	  },
	  merge: function merge() {
	    var ret = {};
	
	    for (var _len2 = arguments.length, args = Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
	      args[_key3] = arguments[_key3];
	    }
	
	    for (var i = 0; i < args.length; i++) {
	      utils.mix(ret, args[i]);
	    }
	    return ret;
	  },
	
	  viewportWidth: 0,
	  viewportHeight: 0
	};
	
	mix(utils, domUtils);
	
	exports["default"] = utils;
	module.exports = exports['default'];

/***/ },
/* 195 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.getTransformName = getTransformName;
	exports.setTransitionProperty = setTransitionProperty;
	exports.getTransitionProperty = getTransitionProperty;
	exports.getTransformXY = getTransformXY;
	exports.setTransformXY = setTransformXY;
	var vendorPrefix = void 0;
	
	var jsCssMap = {
	  Webkit: '-webkit-',
	  Moz: '-moz-',
	  // IE did it wrong again ...
	  ms: '-ms-',
	  O: '-o-'
	};
	
	function getVendorPrefix() {
	  if (vendorPrefix !== undefined) {
	    return vendorPrefix;
	  }
	  vendorPrefix = '';
	  var style = document.createElement('p').style;
	  var testProp = 'Transform';
	  for (var key in jsCssMap) {
	    if (key + testProp in style) {
	      vendorPrefix = key;
	    }
	  }
	  return vendorPrefix;
	}
	
	function getTransitionName() {
	  return getVendorPrefix() ? getVendorPrefix() + 'TransitionProperty' : 'transitionProperty';
	}
	
	function getTransformName() {
	  return getVendorPrefix() ? getVendorPrefix() + 'Transform' : 'transform';
	}
	
	function setTransitionProperty(node, value) {
	  var name = getTransitionName();
	  if (name) {
	    node.style[name] = value;
	    if (name !== 'transitionProperty') {
	      node.style.transitionProperty = value;
	    }
	  }
	}
	
	function setTransform(node, value) {
	  var name = getTransformName();
	  if (name) {
	    node.style[name] = value;
	    if (name !== 'transform') {
	      node.style.transform = value;
	    }
	  }
	}
	
	function getTransitionProperty(node) {
	  return node.style.transitionProperty || node.style[getTransitionName()];
	}
	
	function getTransformXY(node) {
	  var style = window.getComputedStyle(node, null);
	  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());
	  if (transform && transform !== 'none') {
	    var matrix = transform.replace(/[^0-9\-.,]/g, '').split(',');
	    return { x: parseFloat(matrix[12] || matrix[4], 0), y: parseFloat(matrix[13] || matrix[5], 0) };
	  }
	  return {
	    x: 0,
	    y: 0
	  };
	}
	
	var matrix2d = /matrix\((.*)\)/;
	var matrix3d = /matrix3d\((.*)\)/;
	
	function setTransformXY(node, xy) {
	  var style = window.getComputedStyle(node, null);
	  var transform = style.getPropertyValue('transform') || style.getPropertyValue(getTransformName());
	  if (transform && transform !== 'none') {
	    var arr = void 0;
	    var match2d = transform.match(matrix2d);
	    if (match2d) {
	      match2d = match2d[1];
	      arr = match2d.split(',').map(function (item) {
	        return parseFloat(item, 10);
	      });
	      arr[4] = xy.x;
	      arr[5] = xy.y;
	      setTransform(node, 'matrix(' + arr.join(',') + ')');
	    } else {
	      var match3d = transform.match(matrix3d)[1];
	      arr = match3d.split(',').map(function (item) {
	        return parseFloat(item, 10);
	      });
	      arr[12] = xy.x;
	      arr[13] = xy.y;
	      setTransform(node, 'matrix3d(' + arr.join(',') + ')');
	    }
	  } else {
	    setTransform(node, 'translateX(' + xy.x + 'px) translateY(' + xy.y + 'px) translateZ(0)');
	  }
	}

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(194);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	/**
	 * 得到会导致元素显示不全的祖先元素
	 */
	
	function getOffsetParent(element) {
	  // ie 这个也不是完全可行
	  /*
	   <div style="width: 50px;height: 100px;overflow: hidden">
	   <div style="width: 50px;height: 100px;position: relative;" id="d6">
	   元素 6 高 100px 宽 50px<br/>
	   </div>
	   </div>
	   */
	  // element.offsetParent does the right thing in ie7 and below. Return parent with layout!
	  //  In other browsers it only includes elements with position absolute, relative or
	  // fixed, not elements with overflow set to auto or scroll.
	  //        if (UA.ie && ieMode < 8) {
	  //            return element.offsetParent;
	  //        }
	  // 统一的 offsetParent 方法
	  var doc = element.ownerDocument;
	  var body = doc.body;
	  var parent = void 0;
	  var positionStyle = _utils2["default"].css(element, 'position');
	  var skipStatic = positionStyle === 'fixed' || positionStyle === 'absolute';
	
	  if (!skipStatic) {
	    return element.nodeName.toLowerCase() === 'html' ? null : element.parentNode;
	  }
	
	  for (parent = element.parentNode; parent && parent !== body; parent = parent.parentNode) {
	    positionStyle = _utils2["default"].css(parent, 'position');
	    if (positionStyle !== 'static') {
	      return parent;
	    }
	  }
	  return null;
	}
	
	exports["default"] = getOffsetParent;
	module.exports = exports['default'];

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(194);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _getOffsetParent = __webpack_require__(196);
	
	var _getOffsetParent2 = _interopRequireDefault(_getOffsetParent);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	/**
	 * 获得元素的显示部分的区域
	 */
	function getVisibleRectForElement(element) {
	  var visibleRect = {
	    left: 0,
	    right: Infinity,
	    top: 0,
	    bottom: Infinity
	  };
	  var el = (0, _getOffsetParent2["default"])(element);
	  var scrollX = void 0;
	  var scrollY = void 0;
	  var winSize = void 0;
	  var doc = element.ownerDocument;
	  var win = doc.defaultView || doc.parentWindow;
	  var body = doc.body;
	  var documentElement = doc.documentElement;
	
	  // Determine the size of the visible rect by climbing the dom accounting for
	  // all scrollable containers.
	  while (el) {
	    // clientWidth is zero for inline block elements in ie.
	    if ((navigator.userAgent.indexOf('MSIE') === -1 || el.clientWidth !== 0) &&
	    // body may have overflow set on it, yet we still get the entire
	    // viewport. In some browsers, el.offsetParent may be
	    // document.documentElement, so check for that too.
	    el !== body && el !== documentElement && _utils2["default"].css(el, 'overflow') !== 'visible') {
	      var pos = _utils2["default"].offset(el);
	      // add border
	      pos.left += el.clientLeft;
	      pos.top += el.clientTop;
	      visibleRect.top = Math.max(visibleRect.top, pos.top);
	      visibleRect.right = Math.min(visibleRect.right,
	      // consider area without scrollBar
	      pos.left + el.clientWidth);
	      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);
	      visibleRect.left = Math.max(visibleRect.left, pos.left);
	    } else if (el === body || el === documentElement) {
	      break;
	    }
	    el = (0, _getOffsetParent2["default"])(el);
	  }
	
	  // Clip by window's viewport.
	  scrollX = _utils2["default"].getWindowScrollLeft(win);
	  scrollY = _utils2["default"].getWindowScrollTop(win);
	  visibleRect.left = Math.max(visibleRect.left, scrollX);
	  visibleRect.top = Math.max(visibleRect.top, scrollY);
	  winSize = {
	    width: _utils2["default"].viewportWidth(win),
	    height: _utils2["default"].viewportHeight(win)
	  };
	  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
	  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
	  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
	}
	
	exports["default"] = getVisibleRectForElement;
	module.exports = exports['default'];

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(194);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {
	  var pos = _utils2["default"].clone(elFuturePos);
	  var size = {
	    width: elRegion.width,
	    height: elRegion.height
	  };
	
	  if (overflow.adjustX && pos.left < visibleRect.left) {
	    pos.left = visibleRect.left;
	  }
	
	  // Left edge inside and right edge outside viewport, try to resize it.
	  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {
	    size.width -= pos.left + size.width - visibleRect.right;
	  }
	
	  // Right edge outside viewport, try to move it.
	  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {
	    // 保证左边界和可视区域左边界对齐
	    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);
	  }
	
	  // Top edge outside viewport, try to move it.
	  if (overflow.adjustY && pos.top < visibleRect.top) {
	    pos.top = visibleRect.top;
	  }
	
	  // Top edge inside and bottom edge outside viewport, try to resize it.
	  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {
	    size.height -= pos.top + size.height - visibleRect.bottom;
	  }
	
	  // Bottom edge outside viewport, try to move it.
	  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {
	    // 保证上边界和可视区域上边界对齐
	    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);
	  }
	
	  return _utils2["default"].mix(pos, size);
	}
	
	exports["default"] = adjustForViewport;
	module.exports = exports['default'];

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _utils = __webpack_require__(194);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function getRegion(node) {
	  var offset = void 0;
	  var w = void 0;
	  var h = void 0;
	  if (!_utils2["default"].isWindow(node) && node.nodeType !== 9) {
	    offset = _utils2["default"].offset(node);
	    w = _utils2["default"].outerWidth(node);
	    h = _utils2["default"].outerHeight(node);
	  } else {
	    var win = _utils2["default"].getWindow(node);
	    offset = {
	      left: _utils2["default"].getWindowScrollLeft(win),
	      top: _utils2["default"].getWindowScrollTop(win)
	    };
	    w = _utils2["default"].viewportWidth(win);
	    h = _utils2["default"].viewportHeight(win);
	  }
	  offset.width = w;
	  offset.height = h;
	  return offset;
	}
	
	exports["default"] = getRegion;
	module.exports = exports['default'];

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _getAlignOffset = __webpack_require__(201);
	
	var _getAlignOffset2 = _interopRequireDefault(_getAlignOffset);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {
	  var xy = void 0;
	  var diff = void 0;
	  var p1 = void 0;
	  var p2 = void 0;
	
	  xy = {
	    left: elRegion.left,
	    top: elRegion.top
	  };
	
	  p1 = (0, _getAlignOffset2["default"])(refNodeRegion, points[1]);
	  p2 = (0, _getAlignOffset2["default"])(elRegion, points[0]);
	
	  diff = [p2.left - p1.left, p2.top - p1.top];
	
	  return {
	    left: xy.left - diff[0] + offset[0] - targetOffset[0],
	    top: xy.top - diff[1] + offset[1] - targetOffset[1]
	  };
	}
	
	exports["default"] = getElFuturePos;
	module.exports = exports['default'];

/***/ },
/* 201 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * 获取 node 上的 align 对齐点 相对于页面的坐标
	 */
	
	function getAlignOffset(region, align) {
	  var V = align.charAt(0);
	  var H = align.charAt(1);
	  var w = region.width;
	  var h = region.height;
	  var x = void 0;
	  var y = void 0;
	
	  x = region.left;
	  y = region.top;
	
	  if (V === 'c') {
	    y += h / 2;
	  } else if (V === 'b') {
	    y += h;
	  }
	
	  if (H === 'c') {
	    x += w / 2;
	  } else if (H === 'r') {
	    x += w;
	  }
	
	  return {
	    left: x,
	    top: y
	  };
	}
	
	exports["default"] = getAlignOffset;
	module.exports = exports['default'];

/***/ },
/* 202 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports["default"] = isWindow;
	function isWindow(obj) {
	  /* eslint no-eq-null: 0 */
	  /* eslint eqeqeq: 0 */
	  return obj != null && obj == obj.window;
	}
	module.exports = exports['default'];

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	// export this package's api
	
	module.exports = __webpack_require__(204);

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ChildrenUtils = __webpack_require__(205);
	
	var _AnimateChild = __webpack_require__(206);
	
	var _AnimateChild2 = _interopRequireDefault(_AnimateChild);
	
	var _util = __webpack_require__(211);
	
	var _util2 = _interopRequireDefault(_util);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}
	
	var defaultKey = 'rc_animate_' + Date.now();
	
	function getChildrenFromProps(props) {
	  var children = props.children;
	  if (_react2["default"].isValidElement(children)) {
	    if (!children.key) {
	      return _react2["default"].cloneElement(children, {
	        key: defaultKey
	      });
	    }
	  }
	  return children;
	}
	
	function noop() {}
	
	var Animate = _react2["default"].createClass({
	  displayName: 'Animate',
	
	  propTypes: {
	    component: _react2["default"].PropTypes.any,
	    animation: _react2["default"].PropTypes.object,
	    transitionName: _react2["default"].PropTypes.oneOfType([_react2["default"].PropTypes.string, _react2["default"].PropTypes.object]),
	    transitionEnter: _react2["default"].PropTypes.bool,
	    transitionAppear: _react2["default"].PropTypes.bool,
	    exclusive: _react2["default"].PropTypes.bool,
	    transitionLeave: _react2["default"].PropTypes.bool,
	    onEnd: _react2["default"].PropTypes.func,
	    onEnter: _react2["default"].PropTypes.func,
	    onLeave: _react2["default"].PropTypes.func,
	    onAppear: _react2["default"].PropTypes.func,
	    showProp: _react2["default"].PropTypes.string
	  },
	
	  getDefaultProps: function getDefaultProps() {
	    return {
	      animation: {},
	      component: 'span',
	      transitionEnter: true,
	      transitionLeave: true,
	      transitionAppear: false,
	      onEnd: noop,
	      onEnter: noop,
	      onLeave: noop,
	      onAppear: noop
	    };
	  },
	  getInitialState: function getInitialState() {
	    this.currentlyAnimatingKeys = {};
	    this.keysToEnter = [];
	    this.keysToLeave = [];
	    return {
	      children: (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(this.props))
	    };
	  },
	  componentDidMount: function componentDidMount() {
	    var _this = this;
	
	    var showProp = this.props.showProp;
	    var children = this.state.children;
	    if (showProp) {
	      children = children.filter(function (child) {
	        return !!child.props[showProp];
	      });
	    }
	    children.forEach(function (child) {
	      if (child) {
	        _this.performAppear(child.key);
	      }
	    });
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    var _this2 = this;
	
	    this.nextProps = nextProps;
	    var nextChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(nextProps));
	    var props = this.props;
	    // exclusive needs immediate response
	    if (props.exclusive) {
	      Object.keys(this.currentlyAnimatingKeys).forEach(function (key) {
	        _this2.stop(key);
	      });
	    }
	    var showProp = props.showProp;
	    var currentlyAnimatingKeys = this.currentlyAnimatingKeys;
	    // last props children if exclusive
	    var currentChildren = props.exclusive ? (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props)) : this.state.children;
	    // in case destroy in showProp mode
	    var newChildren = [];
	    if (showProp) {
	      currentChildren.forEach(function (currentChild) {
	        var nextChild = currentChild && (0, _ChildrenUtils.findChildInChildrenByKey)(nextChildren, currentChild.key);
	        var newChild = void 0;
	        if ((!nextChild || !nextChild.props[showProp]) && currentChild.props[showProp]) {
	          newChild = _react2["default"].cloneElement(nextChild || currentChild, _defineProperty({}, showProp, true));
	        } else {
	          newChild = nextChild;
	        }
	        if (newChild) {
	          newChildren.push(newChild);
	        }
	      });
	      nextChildren.forEach(function (nextChild) {
	        if (!nextChild || !(0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, nextChild.key)) {
	          newChildren.push(nextChild);
	        }
	      });
	    } else {
	      newChildren = (0, _ChildrenUtils.mergeChildren)(currentChildren, nextChildren);
	    }
	
	    // need render to avoid update
	    this.setState({
	      children: newChildren
	    });
	
	    nextChildren.forEach(function (child) {
	      var key = child && child.key;
	      if (child && currentlyAnimatingKeys[key]) {
	        return;
	      }
	      var hasPrev = child && (0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, key);
	      if (showProp) {
	        var showInNext = child.props[showProp];
	        if (hasPrev) {
	          var showInNow = (0, _ChildrenUtils.findShownChildInChildrenByKey)(currentChildren, key, showProp);
	          if (!showInNow && showInNext) {
	            _this2.keysToEnter.push(key);
	          }
	        } else if (showInNext) {
	          _this2.keysToEnter.push(key);
	        }
	      } else if (!hasPrev) {
	        _this2.keysToEnter.push(key);
	      }
	    });
	
	    currentChildren.forEach(function (child) {
	      var key = child && child.key;
	      if (child && currentlyAnimatingKeys[key]) {
	        return;
	      }
	      var hasNext = child && (0, _ChildrenUtils.findChildInChildrenByKey)(nextChildren, key);
	      if (showProp) {
	        var showInNow = child.props[showProp];
	        if (hasNext) {
	          var showInNext = (0, _ChildrenUtils.findShownChildInChildrenByKey)(nextChildren, key, showProp);
	          if (!showInNext && showInNow) {
	            _this2.keysToLeave.push(key);
	          }
	        } else if (showInNow) {
	          _this2.keysToLeave.push(key);
	        }
	      } else if (!hasNext) {
	        _this2.keysToLeave.push(key);
	      }
	    });
	  },
	  componentDidUpdate: function componentDidUpdate() {
	    var keysToEnter = this.keysToEnter;
	    this.keysToEnter = [];
	    keysToEnter.forEach(this.performEnter);
	    var keysToLeave = this.keysToLeave;
	    this.keysToLeave = [];
	    keysToLeave.forEach(this.performLeave);
	  },
	  performEnter: function performEnter(key) {
	    // may already remove by exclusive
	    if (this.refs[key]) {
	      this.currentlyAnimatingKeys[key] = true;
	      this.refs[key].componentWillEnter(this.handleDoneAdding.bind(this, key, 'enter'));
	    }
	  },
	  performAppear: function performAppear(key) {
	    if (this.refs[key]) {
	      this.currentlyAnimatingKeys[key] = true;
	      this.refs[key].componentWillAppear(this.handleDoneAdding.bind(this, key, 'appear'));
	    }
	  },
	  handleDoneAdding: function handleDoneAdding(key, type) {
	    var props = this.props;
	    delete this.currentlyAnimatingKeys[key];
	    // if update on exclusive mode, skip check
	    if (props.exclusive && props !== this.nextProps) {
	      return;
	    }
	    var currentChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props));
	    if (!this.isValidChildByKey(currentChildren, key)) {
	      // exclusive will not need this
	      this.performLeave(key);
	    } else {
	      if (type === 'appear') {
	        if (_util2["default"].allowAppearCallback(props)) {
	          props.onAppear(key);
	          props.onEnd(key, true);
	        }
	      } else {
	        if (_util2["default"].allowEnterCallback(props)) {
	          props.onEnter(key);
	          props.onEnd(key, true);
	        }
	      }
	    }
	  },
	  performLeave: function performLeave(key) {
	    // may already remove by exclusive
	    if (this.refs[key]) {
	      this.currentlyAnimatingKeys[key] = true;
	      this.refs[key].componentWillLeave(this.handleDoneLeaving.bind(this, key));
	    }
	  },
	  handleDoneLeaving: function handleDoneLeaving(key) {
	    var props = this.props;
	    delete this.currentlyAnimatingKeys[key];
	    // if update on exclusive mode, skip check
	    if (props.exclusive && props !== this.nextProps) {
	      return;
	    }
	    var currentChildren = (0, _ChildrenUtils.toArrayChildren)(getChildrenFromProps(props));
	    // in case state change is too fast
	    if (this.isValidChildByKey(currentChildren, key)) {
	      this.performEnter(key);
	    } else {
	      var end = function end() {
	        if (_util2["default"].allowLeaveCallback(props)) {
	          props.onLeave(key);
	          props.onEnd(key, false);
	        }
	      };
	      /* eslint react/no-is-mounted:0 */
	      if (this.isMounted() && !(0, _ChildrenUtils.isSameChildren)(this.state.children, currentChildren, props.showProp)) {
	        this.setState({
	          children: currentChildren
	        }, end);
	      } else {
	        end();
	      }
	    }
	  },
	  isValidChildByKey: function isValidChildByKey(currentChildren, key) {
	    var showProp = this.props.showProp;
	    if (showProp) {
	      return (0, _ChildrenUtils.findShownChildInChildrenByKey)(currentChildren, key, showProp);
	    }
	    return (0, _ChildrenUtils.findChildInChildrenByKey)(currentChildren, key);
	  },
	  stop: function stop(key) {
	    delete this.currentlyAnimatingKeys[key];
	    var component = this.refs[key];
	    if (component) {
	      component.stop();
	    }
	  },
	  render: function render() {
	    var props = this.props;
	    this.nextProps = props;
	    var stateChildren = this.state.children;
	    var children = null;
	    if (stateChildren) {
	      children = stateChildren.map(function (child) {
	        if (child === null || child === undefined) {
	          return child;
	        }
	        if (!child.key) {
	          throw new Error('must set key for <rc-animate> children');
	        }
	        return _react2["default"].createElement(_AnimateChild2["default"], {
	          key: child.key,
	          ref: child.key,
	          animation: props.animation,
	          transitionName: props.transitionName,
	          transitionEnter: props.transitionEnter,
	          transitionAppear: props.transitionAppear,
	          transitionLeave: props.transitionLeave
	        }, child);
	      });
	    }
	    var Component = props.component;
	    if (Component) {
	      var passedProps = props;
	      if (typeof Component === 'string') {
	        passedProps = {
	          className: props.className,
	          style: props.style
	        };
	      }
	      return _react2["default"].createElement(Component, passedProps, children);
	    }
	    return children[0] || null;
	  }
	});
	
	exports["default"] = Animate;
	module.exports = exports['default'];

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.toArrayChildren = toArrayChildren;
	exports.findChildInChildrenByKey = findChildInChildrenByKey;
	exports.findShownChildInChildrenByKey = findShownChildInChildrenByKey;
	exports.findHiddenChildInChildrenByKey = findHiddenChildInChildrenByKey;
	exports.isSameChildren = isSameChildren;
	exports.mergeChildren = mergeChildren;
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function toArrayChildren(children) {
	  var ret = [];
	  _react2["default"].Children.forEach(children, function (child) {
	    ret.push(child);
	  });
	  return ret;
	}
	
	function findChildInChildrenByKey(children, key) {
	  var ret = null;
	  if (children) {
	    children.forEach(function (child) {
	      if (ret) {
	        return;
	      }
	      if (child && child.key === key) {
	        ret = child;
	      }
	    });
	  }
	  return ret;
	}
	
	function findShownChildInChildrenByKey(children, key, showProp) {
	  var ret = null;
	  if (children) {
	    children.forEach(function (child) {
	      if (child && child.key === key && child.props[showProp]) {
	        if (ret) {
	          throw new Error('two child with same key for <rc-animate> children');
	        }
	        ret = child;
	      }
	    });
	  }
	  return ret;
	}
	
	function findHiddenChildInChildrenByKey(children, key, showProp) {
	  var found = 0;
	  if (children) {
	    children.forEach(function (child) {
	      if (found) {
	        return;
	      }
	      found = child && child.key === key && !child.props[showProp];
	    });
	  }
	  return found;
	}
	
	function isSameChildren(c1, c2, showProp) {
	  var same = c1.length === c2.length;
	  if (same) {
	    c1.forEach(function (child, index) {
	      var child2 = c2[index];
	      if (child && child2) {
	        if (child && !child2 || !child && child2) {
	          same = false;
	        } else if (child.key !== child2.key) {
	          same = false;
	        } else if (showProp && child.props[showProp] !== child2.props[showProp]) {
	          same = false;
	        }
	      }
	    });
	  }
	  return same;
	}
	
	function mergeChildren(prev, next) {
	  var ret = [];
	
	  // For each key of `next`, the list of keys to insert before that key in
	  // the combined list
	  var nextChildrenPending = {};
	  var pendingChildren = [];
	  prev.forEach(function (child) {
	    if (child && findChildInChildrenByKey(next, child.key)) {
	      if (pendingChildren.length) {
	        nextChildrenPending[child.key] = pendingChildren;
	        pendingChildren = [];
	      }
	    } else {
	      pendingChildren.push(child);
	    }
	  });
	
	  next.forEach(function (child) {
	    if (child && nextChildrenPending.hasOwnProperty(child.key)) {
	      ret = ret.concat(nextChildrenPending[child.key]);
	    }
	    ret.push(child);
	  });
	
	  ret = ret.concat(pendingChildren);
	
	  return ret;
	}

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
	};
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(13);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _cssAnimation = __webpack_require__(207);
	
	var _cssAnimation2 = _interopRequireDefault(_cssAnimation);
	
	var _util = __webpack_require__(211);
	
	var _util2 = _interopRequireDefault(_util);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	var transitionMap = {
	  enter: 'transitionEnter',
	  appear: 'transitionAppear',
	  leave: 'transitionLeave'
	};
	
	var AnimateChild = _react2["default"].createClass({
	  displayName: 'AnimateChild',
	
	  propTypes: {
	    children: _react2["default"].PropTypes.any
	  },
	
	  componentWillUnmount: function componentWillUnmount() {
	    this.stop();
	  },
	  componentWillEnter: function componentWillEnter(done) {
	    if (_util2["default"].isEnterSupported(this.props)) {
	      this.transition('enter', done);
	    } else {
	      done();
	    }
	  },
	  componentWillAppear: function componentWillAppear(done) {
	    if (_util2["default"].isAppearSupported(this.props)) {
	      this.transition('appear', done);
	    } else {
	      done();
	    }
	  },
	  componentWillLeave: function componentWillLeave(done) {
	    if (_util2["default"].isLeaveSupported(this.props)) {
	      this.transition('leave', done);
	    } else {
	      // always sync, do not interupt with react component life cycle
	      // update hidden -> animate hidden ->
	      // didUpdate -> animate leave -> unmount (if animate is none)
	      done();
	    }
	  },
	  transition: function transition(animationType, finishCallback) {
	    var _this = this;
	
	    var node = _reactDom2["default"].findDOMNode(this);
	    var props = this.props;
	    var transitionName = props.transitionName;
	    var nameIsObj = (typeof transitionName === 'undefined' ? 'undefined' : _typeof(transitionName)) === 'object';
	    this.stop();
	    var end = function end() {
	      _this.stopper = null;
	      finishCallback();
	    };
	    if ((_cssAnimation.isCssAnimationSupported || !props.animation[animationType]) && transitionName && props[transitionMap[animationType]]) {
	      var name = nameIsObj ? transitionName[animationType] : transitionName + '-' + animationType;
	      var activeName = name + '-active';
	      if (nameIsObj && transitionName[animationType + 'Active']) {
	        activeName = transitionName[animationType + 'Active'];
	      }
	      this.stopper = (0, _cssAnimation2["default"])(node, {
	        name: name,
	        active: activeName
	      }, end);
	    } else {
	      this.stopper = props.animation[animationType](node, end);
	    }
	  },
	  stop: function stop() {
	    var stopper = this.stopper;
	    if (stopper) {
	      this.stopper = null;
	      stopper.stop();
	    }
	  },
	  render: function render() {
	    return this.props.children;
	  }
	});
	
	exports["default"] = AnimateChild;
	module.exports = exports['default'];

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
	  return typeof obj;
	} : function (obj) {
	  return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj;
	};
	
	var _Event = __webpack_require__(208);
	
	var _Event2 = _interopRequireDefault(_Event);
	
	var _componentClasses = __webpack_require__(209);
	
	var _componentClasses2 = _interopRequireDefault(_componentClasses);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	var isCssAnimationSupported = _Event2["default"].endEvents.length !== 0;
	
	var capitalPrefixes = ['Webkit', 'Moz', 'O',
	// ms is special .... !
	'ms'];
	var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];
	
	function getStyleProperty(node, name) {
	  var style = window.getComputedStyle(node);
	
	  var ret = '';
	  for (var i = 0; i < prefixes.length; i++) {
	    ret = style.getPropertyValue(prefixes[i] + name);
	    if (ret) {
	      break;
	    }
	  }
	  return ret;
	}
	
	function fixBrowserByTimeout(node) {
	  if (isCssAnimationSupported) {
	    var transitionDelay = parseFloat(getStyleProperty(node, 'transition-delay')) || 0;
	    var transitionDuration = parseFloat(getStyleProperty(node, 'transition-duration')) || 0;
	    var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;
	    var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;
	    var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
	    // sometimes, browser bug
	    node.rcEndAnimTimeout = setTimeout(function () {
	      node.rcEndAnimTimeout = null;
	      if (node.rcEndListener) {
	        node.rcEndListener();
	      }
	    }, time * 1000 + 200);
	  }
	}
	
	function clearBrowserBugTimeout(node) {
	  if (node.rcEndAnimTimeout) {
	    clearTimeout(node.rcEndAnimTimeout);
	    node.rcEndAnimTimeout = null;
	  }
	}
	
	var cssAnimation = function cssAnimation(node, transitionName, endCallback) {
	  var nameIsObj = (typeof transitionName === 'undefined' ? 'undefined' : _typeof(transitionName)) === 'object';
	  var className = nameIsObj ? transitionName.name : transitionName;
	  var activeClassName = nameIsObj ? transitionName.active : transitionName + '-active';
	  var end = endCallback;
	  var start = void 0;
	  var active = void 0;
	  var nodeClasses = (0, _componentClasses2["default"])(node);
	
	  if (endCallback && Object.prototype.toString.call(endCallback) === '[object Object]') {
	    end = endCallback.end;
	    start = endCallback.start;
	    active = endCallback.active;
	  }
	
	  if (node.rcEndListener) {
	    node.rcEndListener();
	  }
	
	  node.rcEndListener = function (e) {
	    if (e && e.target !== node) {
	      return;
	    }
	
	    if (node.rcAnimTimeout) {
	      clearTimeout(node.rcAnimTimeout);
	      node.rcAnimTimeout = null;
	    }
	
	    clearBrowserBugTimeout(node);
	
	    nodeClasses.remove(className);
	    nodeClasses.remove(activeClassName);
	
	    _Event2["default"].removeEndEventListener(node, node.rcEndListener);
	    node.rcEndListener = null;
	
	    // Usually this optional end is used for informing an owner of
	    // a leave animation and telling it to remove the child.
	    if (end) {
	      end();
	    }
	  };
	
	  _Event2["default"].addEndEventListener(node, node.rcEndListener);
	
	  if (start) {
	    start();
	  }
	  nodeClasses.add(className);
	
	  node.rcAnimTimeout = setTimeout(function () {
	    node.rcAnimTimeout = null;
	    nodeClasses.add(activeClassName);
	    if (active) {
	      setTimeout(active, 0);
	    }
	    fixBrowserByTimeout(node);
	    // 30ms for firefox
	  }, 30);
	
	  return {
	    stop: function stop() {
	      if (node.rcEndListener) {
	        node.rcEndListener();
	      }
	    }
	  };
	};
	
	cssAnimation.style = function (node, style, callback) {
	  if (node.rcEndListener) {
	    node.rcEndListener();
	  }
	
	  node.rcEndListener = function (e) {
	    if (e && e.target !== node) {
	      return;
	    }
	
	    if (node.rcAnimTimeout) {
	      clearTimeout(node.rcAnimTimeout);
	      node.rcAnimTimeout = null;
	    }
	
	    clearBrowserBugTimeout(node);
	
	    _Event2["default"].removeEndEventListener(node, node.rcEndListener);
	    node.rcEndListener = null;
	
	    // Usually this optional callback is used for informing an owner of
	    // a leave animation and telling it to remove the child.
	    if (callback) {
	      callback();
	    }
	  };
	
	  _Event2["default"].addEndEventListener(node, node.rcEndListener);
	
	  node.rcAnimTimeout = setTimeout(function () {
	    for (var s in style) {
	      if (style.hasOwnProperty(s)) {
	        node.style[s] = style[s];
	      }
	    }
	    node.rcAnimTimeout = null;
	    fixBrowserByTimeout(node);
	  }, 0);
	};
	
	cssAnimation.setTransition = function (node, p, value) {
	  var property = p;
	  var v = value;
	  if (value === undefined) {
	    v = property;
	    property = '';
	  }
	  property = property || '';
	  capitalPrefixes.forEach(function (prefix) {
	    node.style[prefix + 'Transition' + property] = v;
	  });
	};
	
	cssAnimation.isCssAnimationSupported = isCssAnimationSupported;
	
	exports["default"] = cssAnimation;
	module.exports = exports['default'];

/***/ },
/* 208 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var EVENT_NAME_MAP = {
	  transitionend: {
	    transition: 'transitionend',
	    WebkitTransition: 'webkitTransitionEnd',
	    MozTransition: 'mozTransitionEnd',
	    OTransition: 'oTransitionEnd',
	    msTransition: 'MSTransitionEnd'
	  },
	
	  animationend: {
	    animation: 'animationend',
	    WebkitAnimation: 'webkitAnimationEnd',
	    MozAnimation: 'mozAnimationEnd',
	    OAnimation: 'oAnimationEnd',
	    msAnimation: 'MSAnimationEnd'
	  }
	};
	
	var endEvents = [];
	
	function detectEvents() {
	  var testEl = document.createElement('div');
	  var style = testEl.style;
	
	  if (!('AnimationEvent' in window)) {
	    delete EVENT_NAME_MAP.animationend.animation;
	  }
	
	  if (!('TransitionEvent' in window)) {
	    delete EVENT_NAME_MAP.transitionend.transition;
	  }
	
	  for (var baseEventName in EVENT_NAME_MAP) {
	    if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
	      var baseEvents = EVENT_NAME_MAP[baseEventName];
	      for (var styleName in baseEvents) {
	        if (styleName in style) {
	          endEvents.push(baseEvents[styleName]);
	          break;
	        }
	      }
	    }
	  }
	}
	
	if (typeof window !== 'undefined' && typeof document !== 'undefined') {
	  detectEvents();
	}
	
	function addEventListener(node, eventName, eventListener) {
	  node.addEventListener(eventName, eventListener, false);
	}
	
	function removeEventListener(node, eventName, eventListener) {
	  node.removeEventListener(eventName, eventListener, false);
	}
	
	var TransitionEvents = {
	  addEndEventListener: function addEndEventListener(node, eventListener) {
	    if (endEvents.length === 0) {
	      window.setTimeout(eventListener, 0);
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      addEventListener(node, endEvent, eventListener);
	    });
	  },
	
	  endEvents: endEvents,
	
	  removeEndEventListener: function removeEndEventListener(node, eventListener) {
	    if (endEvents.length === 0) {
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      removeEventListener(node, endEvent, eventListener);
	    });
	  }
	};
	
	exports["default"] = TransitionEvents;
	module.exports = exports['default'];

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Module dependencies.
	 */
	
	try {
	  var index = __webpack_require__(210);
	} catch (err) {
	  var index = __webpack_require__(210);
	}
	
	/**
	 * Whitespace regexp.
	 */
	
	var re = /\s+/;
	
	/**
	 * toString reference.
	 */
	
	var toString = Object.prototype.toString;
	
	/**
	 * Wrap `el` in a `ClassList`.
	 *
	 * @param {Element} el
	 * @return {ClassList}
	 * @api public
	 */
	
	module.exports = function (el) {
	  return new ClassList(el);
	};
	
	/**
	 * Initialize a new ClassList for `el`.
	 *
	 * @param {Element} el
	 * @api private
	 */
	
	function ClassList(el) {
	  if (!el || !el.nodeType) {
	    throw new Error('A DOM element reference is required');
	  }
	  this.el = el;
	  this.list = el.classList;
	}
	
	/**
	 * Add class `name` if not already present.
	 *
	 * @param {String} name
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.add = function (name) {
	  // classList
	  if (this.list) {
	    this.list.add(name);
	    return this;
	  }
	
	  // fallback
	  var arr = this.array();
	  var i = index(arr, name);
	  if (!~i) arr.push(name);
	  this.el.className = arr.join(' ');
	  return this;
	};
	
	/**
	 * Remove class `name` when present, or
	 * pass a regular expression to remove
	 * any which match.
	 *
	 * @param {String|RegExp} name
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.remove = function (name) {
	  if ('[object RegExp]' == toString.call(name)) {
	    return this.removeMatching(name);
	  }
	
	  // classList
	  if (this.list) {
	    this.list.remove(name);
	    return this;
	  }
	
	  // fallback
	  var arr = this.array();
	  var i = index(arr, name);
	  if (~i) arr.splice(i, 1);
	  this.el.className = arr.join(' ');
	  return this;
	};
	
	/**
	 * Remove all classes matching `re`.
	 *
	 * @param {RegExp} re
	 * @return {ClassList}
	 * @api private
	 */
	
	ClassList.prototype.removeMatching = function (re) {
	  var arr = this.array();
	  for (var i = 0; i < arr.length; i++) {
	    if (re.test(arr[i])) {
	      this.remove(arr[i]);
	    }
	  }
	  return this;
	};
	
	/**
	 * Toggle class `name`, can force state via `force`.
	 *
	 * For browsers that support classList, but do not support `force` yet,
	 * the mistake will be detected and corrected.
	 *
	 * @param {String} name
	 * @param {Boolean} force
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.toggle = function (name, force) {
	  // classList
	  if (this.list) {
	    if ("undefined" !== typeof force) {
	      if (force !== this.list.toggle(name, force)) {
	        this.list.toggle(name); // toggle again to correct
	      }
	    } else {
	      this.list.toggle(name);
	    }
	    return this;
	  }
	
	  // fallback
	  if ("undefined" !== typeof force) {
	    if (!force) {
	      this.remove(name);
	    } else {
	      this.add(name);
	    }
	  } else {
	    if (this.has(name)) {
	      this.remove(name);
	    } else {
	      this.add(name);
	    }
	  }
	
	  return this;
	};
	
	/**
	 * Return an array of classes.
	 *
	 * @return {Array}
	 * @api public
	 */
	
	ClassList.prototype.array = function () {
	  var className = this.el.getAttribute('class') || '';
	  var str = className.replace(/^\s+|\s+$/g, '');
	  var arr = str.split(re);
	  if ('' === arr[0]) arr.shift();
	  return arr;
	};
	
	/**
	 * Check if class `name` is present.
	 *
	 * @param {String} name
	 * @return {ClassList}
	 * @api public
	 */
	
	ClassList.prototype.has = ClassList.prototype.contains = function (name) {
	  return this.list ? this.list.contains(name) : !!~index(this.array(), name);
	};

/***/ },
/* 210 */
/***/ function(module, exports) {

	module.exports = function (arr, obj) {
	  if (arr.indexOf) return arr.indexOf(obj);
	  for (var i = 0; i < arr.length; ++i) {
	    if (arr[i] === obj) return i;
	  }
	  return -1;
	};

/***/ },
/* 211 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var util = {
	  isAppearSupported: function isAppearSupported(props) {
	    return props.transitionName && props.transitionAppear || props.animation.appear;
	  },
	  isEnterSupported: function isEnterSupported(props) {
	    return props.transitionName && props.transitionEnter || props.animation.enter;
	  },
	  isLeaveSupported: function isLeaveSupported(props) {
	    return props.transitionName && props.transitionLeave || props.animation.leave;
	  },
	  allowAppearCallback: function allowAppearCallback(props) {
	    return props.transitionAppear || props.animation.appear;
	  },
	  allowEnterCallback: function allowEnterCallback(props) {
	    return props.transitionEnter || props.animation.enter;
	  },
	  allowLeaveCallback: function allowLeaveCallback(props) {
	    return props.transitionLeave || props.animation.leave;
	  }
	};
	exports["default"] = util;
	module.exports = exports['default'];

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _LazyRenderBox = __webpack_require__(213);
	
	var _LazyRenderBox2 = _interopRequireDefault(_LazyRenderBox);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	var PopupInner = _react2["default"].createClass({
	  displayName: 'PopupInner',
	
	  propTypes: {
	    hiddenClassName: _react.PropTypes.string,
	    className: _react.PropTypes.string,
	    prefixCls: _react.PropTypes.string,
	    onMouseEnter: _react.PropTypes.func,
	    onMouseLeave: _react.PropTypes.func,
	    children: _react.PropTypes.any
	  },
	  render: function render() {
	    var props = this.props;
	    var className = props.className;
	    if (!props.visible) {
	      className += ' ' + props.hiddenClassName;
	    }
	    return _react2["default"].createElement('div', {
	      className: className,
	      onMouseEnter: props.onMouseEnter,
	      onMouseLeave: props.onMouseLeave,
	      style: props.style
	    }, _react2["default"].createElement(_LazyRenderBox2["default"], { className: props.prefixCls + '-content', visible: props.visible }, props.children));
	  }
	});
	
	exports["default"] = PopupInner;
	module.exports = exports['default'];

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _objectWithoutProperties2 = __webpack_require__(214);
	
	var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	var LazyRenderBox = _react2["default"].createClass({
	  displayName: 'LazyRenderBox',
	
	  propTypes: {
	    children: _react.PropTypes.any,
	    className: _react.PropTypes.string,
	    visible: _react.PropTypes.bool,
	    hiddenClassName: _react.PropTypes.string
	  },
	  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {
	    return nextProps.hiddenClassName || nextProps.visible;
	  },
	  render: function render() {
	    var _props = this.props,
	        hiddenClassName = _props.hiddenClassName,
	        visible = _props.visible,
	        props = (0, _objectWithoutProperties3["default"])(_props, ['hiddenClassName', 'visible']);
	
	    if (hiddenClassName || _react2["default"].Children.count(props.children) > 1) {
	      if (!visible && hiddenClassName) {
	        props.className += ' ' + hiddenClassName;
	      }
	      return _react2["default"].createElement('div', props);
	    }
	
	    return _react2["default"].Children.only(props.children);
	  }
	});
	
	exports["default"] = LazyRenderBox;
	module.exports = exports['default'];

/***/ },
/* 214 */
/***/ function(module, exports) {

	"use strict";
	
	exports.__esModule = true;
	
	exports.default = function (obj, keys) {
	  var target = {};
	
	  for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;
	    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	    target[i] = obj[i];
	  }
	
	  return target;
	};

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends2 = __webpack_require__(150);
	
	var _extends3 = _interopRequireDefault(_extends2);
	
	exports.getAlignFromPlacement = getAlignFromPlacement;
	exports.getPopupClassNameFromAlign = getPopupClassNameFromAlign;
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function isPointsEq(a1, a2) {
	  return a1[0] === a2[0] && a1[1] === a2[1];
	}
	
	function getAlignFromPlacement(builtinPlacements, placementStr, align) {
	  var baseAlign = builtinPlacements[placementStr] || {};
	  return (0, _extends3["default"])({}, baseAlign, align);
	}
	
	function getPopupClassNameFromAlign(builtinPlacements, prefixCls, align) {
	  var points = align.points;
	  for (var placement in builtinPlacements) {
	    if (builtinPlacements.hasOwnProperty(placement)) {
	      if (isPointsEq(builtinPlacements[placement].points, points)) {
	        return prefixCls + '-placement-' + placement;
	      }
	    }
	  }
	  return '';
	}

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};
	
	exports["default"] = getContainerRenderMixin;
	
	var _reactDom = __webpack_require__(13);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { "default": obj };
	}
	
	function defaultGetContainer() {
	  var container = document.createElement('div');
	  document.body.appendChild(container);
	  return container;
	}
	
	function getContainerRenderMixin(config) {
	  var _config$autoMount = config.autoMount,
	      autoMount = _config$autoMount === undefined ? true : _config$autoMount,
	      _config$autoDestroy = config.autoDestroy,
	      autoDestroy = _config$autoDestroy === undefined ? true : _config$autoDestroy,
	      isVisible = config.isVisible,
	      getComponent = config.getComponent,
	      _config$getContainer = config.getContainer,
	      getContainer = _config$getContainer === undefined ? defaultGetContainer : _config$getContainer;
	
	  var mixin = void 0;
	
	  function _renderComponent(instance, componentArg, ready) {
	    if (!isVisible || instance._component || isVisible(instance)) {
	      if (!instance._container) {
	        instance._container = getContainer(instance);
	      }
	      var component = void 0;
	      if (instance.getComponent) {
	        component = instance.getComponent(componentArg);
	      } else {
	        component = getComponent(instance, componentArg);
	      }
	      _reactDom2["default"].unstable_renderSubtreeIntoContainer(instance, component, instance._container, function callback() {
	        instance._component = this;
	        if (ready) {
	          ready.call(this);
	        }
	      });
	    }
	  }
	
	  if (autoMount) {
	    mixin = _extends({}, mixin, {
	      componentDidMount: function componentDidMount() {
	        _renderComponent(this);
	      },
	      componentDidUpdate: function componentDidUpdate() {
	        _renderComponent(this);
	      }
	    });
	  }
	
	  if (!autoMount || !autoDestroy) {
	    mixin = _extends({}, mixin, {
	      renderComponent: function renderComponent(componentArg, ready) {
	        _renderComponent(this, componentArg, ready);
	      }
	    });
	  }
	
	  function _removeContainer(instance) {
	    if (instance._container) {
	      var container = instance._container;
	      _reactDom2["default"].unmountComponentAtNode(container);
	      container.parentNode.removeChild(container);
	      instance._container = null;
	    }
	  }
	
	  if (autoDestroy) {
	    mixin = _extends({}, mixin, {
	      componentWillUnmount: function componentWillUnmount() {
	        _removeContainer(this);
	      }
	    });
	  } else {
	    mixin = _extends({}, mixin, {
	      removeContainer: function removeContainer() {
	        _removeContainer(this);
	      }
	    });
	  }
	
	  return mixin;
	}
	module.exports = exports['default'];

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(9);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _warning = __webpack_require__(218);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function calcPoints(vertical, marks, dots, step, min, max) {
	  (0, _warning2['default'])(dots ? step > 0 : true, '`Slider[step]` should be a positive number in order to make Slider[dots] work.');
	  var points = Object.keys(marks).map(parseFloat);
	  if (dots) {
	    for (var i = min; i <= max; i = i + step) {
	      if (points.indexOf(i) >= 0) continue;
	      points.push(i);
	    }
	  }
	  return points;
	}
	
	var Steps = function Steps(_ref) {
	  var prefixCls = _ref.prefixCls;
	  var vertical = _ref.vertical;
	  var marks = _ref.marks;
	  var dots = _ref.dots;
	  var step = _ref.step;
	  var included = _ref.included;
	  var lowerBound = _ref.lowerBound;
	  var upperBound = _ref.upperBound;
	  var max = _ref.max;
	  var min = _ref.min;
	
	  var range = max - min;
	  var elements = calcPoints(vertical, marks, dots, step, min, max).map(function (point) {
	    var _classNames;
	
	    var offset = Math.abs(point - min) / range * 100 + '%';
	    var style = vertical ? { bottom: offset } : { left: offset };
	
	    var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
	    var pointClassName = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, prefixCls + '-dot', true), _defineProperty(_classNames, prefixCls + '-dot-active', isActived), _classNames));
	
	    return _react2['default'].createElement('span', { className: pointClassName, style: style, key: point });
	  });
	
	  return _react2['default'].createElement('div', { className: prefixCls + '-step' }, elements);
	};
	
	exports['default'] = Steps;
	module.exports = exports['default'];

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	
	'use strict';
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = function () {};
	
	if (process.env.NODE_ENV !== 'production') {
	  warning = function (condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }
	
	    if (format.length < 10 || /^[s\W]*$/.test(format)) {
	      throw new Error('The warning format should be able to uniquely identify this ' + 'warning. Please, use a more descriptive format than: ' + format);
	    }
	
	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}
	
	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(219)))

/***/ },
/* 219 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout() {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	})();
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e) {
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e) {
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while (len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () {
	    return '/';
	};
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function () {
	    return 0;
	};

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, '__esModule', {
	  value: true
	});
	
	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }return target;
	};
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { 'default': obj };
	}
	
	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });
	  } else {
	    obj[key] = value;
	  }return obj;
	}
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(9);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var Marks = function Marks(_ref) {
	  var className = _ref.className;
	  var vertical = _ref.vertical;
	  var marks = _ref.marks;
	  var included = _ref.included;
	  var upperBound = _ref.upperBound;
	  var lowerBound = _ref.lowerBound;
	  var max = _ref.max;
	  var min = _ref.min;
	
	  var marksKeys = Object.keys(marks);
	  var marksCount = marksKeys.length;
	  var unit = 100 / (marksCount - 1);
	  var markWidth = unit * 0.9;
	
	  var range = max - min;
	  var elements = marksKeys.map(parseFloat).sort(function (a, b) {
	    return a - b;
	  }).map(function (point) {
	    var _classNames;
	
	    var isActived = !included && point === upperBound || included && point <= upperBound && point >= lowerBound;
	    var markClassName = (0, _classnames2['default'])((_classNames = {}, _defineProperty(_classNames, className + '-text', true), _defineProperty(_classNames, className + '-text-active', isActived), _classNames));
	
	    var bottomStyle = {
	      // height: markWidth + '%',
	      marginBottom: '-200' + '%',
	      bottom: (point - min) / range * 100 + '%'
	    };
	
	    var leftStyle = {
	      width: markWidth + '%',
	      marginLeft: -markWidth / 2 + '%',
	      left: (point - min) / range * 100 + '%'
	    };
	
	    var style = vertical ? bottomStyle : leftStyle;
	
	    var markPoint = marks[point];
	    var markPointIsObject = typeof markPoint === 'object' && !_react2['default'].isValidElement(markPoint);
	    var markLabel = markPointIsObject ? markPoint.label : markPoint;
	    var markStyle = markPointIsObject ? _extends({}, style, markPoint.style) : style;
	    return _react2['default'].createElement('span', { className: markClassName, style: markStyle, key: point }, markLabel);
	  });
	
	  return _react2['default'].createElement('div', { className: className }, elements);
	};
	
	exports['default'] = Marks;
	module.exports = exports['default'];

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	
	var _uiIcon = __webpack_require__(18);
	
	var _uiIcon2 = _interopRequireDefault(_uiIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var docs = {
	  title: "UiLoadingComponent",
	  propDetails: [{ title: "type",
	    required: true,
	    type: "string",
	    description: "The type of the loading component - can be one of ['loading', 'small', 'success', 'error']. The small spinner is the only one that reserves space in the flow regardless of whether it is showing or not." }, { title: "show",
	    required: false,
	    type: "boolean",
	    description: "Only applies to the small spinner. Whether or not to show the spinner." }, { title: "message",
	    required: false,
	    type: "string",
	    description: "An optional message to display." }, { title: "retryCallback",
	    required: false,
	    type: "function",
	    description: "An optional function to call when the error component is clicked on." }]
	};
	
	// User must pass in:
	// type : string : The type of the loading component - can be one of ['loading', 'small', 'success', 'error']. The small spinner is the only one that reserves space in the flow regardless of whether it is showing or not.
	// User may pass in:
	// message       : string   : An optional message to display.
	// show          : boolean  : Only applies to the small spinner. Whether or not to show the spinner.
	// retryCallback : function : An optional function to call when the error component is clicked on.
	
	var UiLoadingComponent = React.createClass({
	  displayName: "UiLoadingComponent",
	  getDefaultProps: function getDefaultProps() {
	    return {
	      type: 'loading',
	      message: '',
	      show: false,
	      retryCallback: function retryCallback() {
	        console.warn("No retry callback specified");
	      }
	    };
	  },
	  render: function render() {
	    return this.generateComponent(this.props.type);
	  },
	  generateComponent: function generateComponent(type) {
	    switch (type) {
	      // Loading spinners should be rendered in place of the HTML element being loaded
	      case 'loading':
	        return this.generateSpinner();
	
	      // Small spinners should be rendered adjacent to the HTML element being loaded at all times.
	      // Visibility is set with the 'show' prop
	      case 'small':
	        return this.generateSmallSpinner();
	
	      // Success spinners should be rendered in place of the HTML element that succeeded
	      // The message prop will display below the icon
	      case 'success':
	        return this.generateSuccess();
	
	      // Error icons should be rendered in place of the HTML element that failed
	      // The message prop will display below the icon
	      case 'error':
	        return this.generateError();
	
	      default:
	        console.error("Loading Spinner Error: invalid type " + this.props.type.to_s + ". Valid types are loading, small, success, and error.");
	        return null;
	    }
	  },
	
	
	  // Will cover the entire parent element with the loading spinner.
	  // Parent element must have a non-static position.
	  // Parent element must not go below 100px in height
	  generateSpinner: function generateSpinner() {
	    return React.createElement(
	      "div",
	      {
	        className: "ls-spinner-div"
	      },
	      React.createElement(
	        "div",
	        { className: "ls-center" },
	        React.createElement(
	          "div",
	          { className: "ls-spinner" },
	          React.createElement(_uiIcon2.default, { icon: "logo", classes: "absolute ls-logo", dimensions: [107, 107] }),
	          React.createElement(_uiIcon2.default, { icon: "dashed-ring", classes: "absolute ls-spin", dimensions: [107, 107] })
	        ),
	        React.createElement(
	          "div",
	          { className: "ls-message" },
	          this.props.message
	        )
	      )
	    );
	  },
	
	
	  // Will place a 30px square in flow, which can be shown by setting the show prop to true.
	  generateSmallSpinner: function generateSmallSpinner() {
	    if (this.props.show) {
	      return React.createElement(
	        "div",
	        { className: "ls-small-spinner-div" },
	        React.createElement(_uiIcon2.default, { icon: "small-dashed-ring", classes: "ls-small-spinner ls-spin" })
	      );
	    } else {
	      return React.createElement("div", { className: "ls-small-spinner-div" });
	    }
	  },
	
	
	  // Will cover the entire parent element with the success icon and message.
	  // Parent element must have a non-static position.
	  // Parent element must not go below 100px in height
	  generateSuccess: function generateSuccess() {
	    return React.createElement(
	      "div",
	      {
	        className: "ls-spinner-div"
	      },
	      React.createElement(
	        "div",
	        { className: "ls-center" },
	        React.createElement(_uiIcon2.default, { icon: "success", classes: "ls-error-icon", color: "base-green" }),
	        React.createElement(
	          "div",
	          { className: "ls-success" },
	          this.props.message
	        )
	      )
	    );
	  },
	
	
	  // Will cover the entire parent element with the error icon and message.
	  // The user can click on the error message to hit the function in the retryCallback prop
	  // Parent element must have a non-static position.
	  // Parent element must not go below 100px in height
	  generateError: function generateError() {
	    return React.createElement(
	      "div",
	      {
	        className: "ls-spinner-div"
	      },
	      React.createElement(
	        "div",
	        { className: "ls-center" },
	        React.createElement(_uiIcon2.default, { icon: "error", color: "base-green", classes: "ls-error-icon", onClick: this.props.retryCallback }),
	        React.createElement(
	          "div",
	          { className: "ls-error", onClick: this.props.retryCallback },
	          this.props.message
	        )
	      )
	    );
	  }
	});
	
	exports.default = UiLoadingComponent;
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React, cn, _) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	exports.default = UiIdentifierSelect;
	
	var _uiIcon = __webpack_require__(18);
	
	var _uiIcon2 = _interopRequireDefault(_uiIcon);
	
	var _reactTooltip = __webpack_require__(121);
	
	var _reactTooltip2 = _interopRequireDefault(_reactTooltip);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var docs = {
	  title: "UiIdentifierSelect",
	  propDetails: [{ title: "title",
	    required: true,
	    type: "string",
	    description: "A title for the UiIdentifierSelect."
	  }, { title: "identifiers",
	    required: true,
	    type: "array",
	    description: "An array of objects, or single object, each of which has a checked (boolean), disabled(boolean), value, and icon (UiIcon)."
	  }, { title: "handleChange",
	    required: undefined,
	    type: "function",
	    description: "A function that takes in the value of each identifier in identifiers to handle the user selecting or deselecting an identifier. Required unless displayOnly is true."
	  }, { title: "displayOnly",
	    required: false,
	    type: "boolean",
	    description: "If true, the icons will be unclickable, and their color will be static."
	  }]
	};
	
	function UiIdentifierSelect(props) {
	  var title = props.title,
	      handleChange = props.handleChange,
	      identifiers = props.identifiers,
	      _props$displayOnly = props.displayOnly,
	      displayOnly = _props$displayOnly === undefined ? false : _props$displayOnly;
	
	
	  if (!Array.isArray(identifiers)) {
	    identifiers = [identifiers];
	  }
	
	  return React.createElement(
	    'div',
	    { className: cn('lr-ui-identifier-select-container', { 'displayOnly': displayOnly }) },
	    React.createElement(
	      'div',
	      { className: 'lr-ui-identifier-select-label' },
	      title
	    ),
	    _.map(identifiers, function (identifier, index) {
	      var handleClick = function handleClick() {
	        if (!identifier["disabled"]) {
	          handleChange(identifier["value"], !identifier["checked"]);
	        }
	      };
	
	      if (displayOnly) {
	        var color = identifier["checked"] ? "base-green" : "medium-gray";
	      } else {
	        color = "white";
	      }
	
	      return React.createElement(
	        'div',
	        {
	          className: cn('lr-ui-identifier-select-button', { checked: identifier["checked"], disabled: identifier["disabled"] }),
	          onClick: displayOnly ? function (x) {
	            return x;
	          } : handleClick,
	          key: index,
	          'data-tip': identifier["value"],
	          'data-effect': 'solid'
	        },
	        React.createElement('input', {
	          className: 'lr-ui-identifier-select-input',
	          type: 'checkbox',
	          defaultChecked: identifier["checked"],
	          disabled: identifier["disabled"] === true
	        }),
	        React.createElement(_uiIcon2.default, {
	          icon: identifier["icon"],
	          dimensions: [32, 32],
	          color: color
	        })
	      );
	    }),
	    React.createElement(_reactTooltip2.default, null)
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(9), __webpack_require__(6)))

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	exports.default = UiSearch;
	
	var _uiIcon = __webpack_require__(18);
	
	var _uiIcon2 = _interopRequireDefault(_uiIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var docs = {
	  title: "UiSearch",
	  propDetails: [{ title: "inputValue",
	    required: true,
	    type: "string",
	    description: "The value of the text field." }, { title: "placeholder",
	    required: true,
	    type: "string",
	    description: "A placeholder value for the field when the inputValue is empty." }, { title: "handleChange",
	    required: true,
	    type: "function",
	    description: "Updates state in the parent component, takes in the change event." }, { title: "customStyle",
	    required: false,
	    type: "object",
	    description: "A custom style object to be applied to the containing div." }, { title: "handleEnter",
	    required: false,
	    type: "function",
	    description: "A function to be called when the user presses `enter`." }, { title: "hideBorder",
	    required: false,
	    type: "boolean",
	    description: "An optional boolean to hide the bottom border." }]
	};
	
	function UiSearch(props) {
	  // User must pass in:
	  //  - the value of the text field (inputValue) : string
	  //  - custom inline styles for the outer div (customStyle) : object
	  //  - placeholder value for the input field when it's empty (placeholder) : string
	  //  - a function to update state in the parent component that takes in the change event (handleChange) : function
	  //  - an optional function that handles the user pressing 'enter' in the search field (handleEnter) : function
	  //  - an optional boolean to hide the bottom border (hideBorder) : boolean
	
	  var inputValue = props.inputValue,
	      customStyle = props.customStyle,
	      placeholder = props.placeholder,
	      handleChange = props.handleChange,
	      handleEnter = props.handleEnter,
	      hideBorder = props.hideBorder;
	
	
	  var keyDown = function keyDown(e) {
	    if (e.keyCode === 13 || e.which === 13) {
	      if (handleEnter) {
	        handleEnter(e);
	      }
	    }
	  };
	
	  return React.createElement(
	    "div",
	    { style: customStyle, className: "lr-ui-search" },
	    React.createElement("input", {
	      type: "text",
	      className: hideBorder ? "no-border" : "",
	      value: inputValue,
	      placeholder: placeholder,
	      onChange: handleChange,
	      onKeyDown: keyDown
	    }),
	    React.createElement(_uiIcon2.default, {
	      icon: 'search',
	      dimensions: [13, 13]
	    })
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	exports.default = UiTitle;
	
	var _moment = __webpack_require__(225);
	
	var _moment2 = _interopRequireDefault(_moment);
	
	var _uiSwitch = __webpack_require__(132);
	
	var _uiSwitch2 = _interopRequireDefault(_uiSwitch);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var docs = {
	  title: "UiTitle",
	  propDetails: [{ title: "textTitle",
	    required: true,
	    type: "string",
	    description: "The title to be displayed." }, { title: "date",
	    required: false,
	    type: "date",
	    description: "An optional date to display as a subtitle to the title." }, { title: "showSwitch",
	    required: false,
	    type: "boolean",
	    description: "Whether or not to show an optional switch." }, { title: "switchOn",
	    required: false,
	    type: "boolean",
	    description: "Whether or not the switch is on." }, { title: "handleChange",
	    required: false,
	    type: "function",
	    description: "A function to update the state of switchOn in the parent container." }]
	};
	
	function UiTitle(props) {
	  // user should pass in:
	  // - a title (textTitle)
	  // - an optional date (date)
	  // - whether or not they want to include an optional masterSwitch (showSwitch)
	  // - a boolean, controlled by the parent, that says whether the switch is on or off (switchOn)
	  // - a function that changes the state of switchOn (handleChange)
	
	  var textTitle = props.textTitle,
	      date = props.date,
	      showSwitch = props.showSwitch,
	      switchOn = props.switchOn,
	      handleChange = props.handleChange;
	
	
	  var getDate = function getDate() {
	    return React.createElement(
	      'div',
	      { className: 'lr-ui-title-date' },
	      (0, _moment2.default)(date).format('L')
	    );
	  };
	
	  var getSwitch = function getSwitch() {
	    return React.createElement(_uiSwitch2.default, {
	      switchOn: switchOn,
	      handleChange: handleChange
	    });
	  };
	
	  return React.createElement(
	    'div',
	    { className: 'lr-ui-title' },
	    React.createElement(
	      'div',
	      { className: 'lr-ui-title-text-title' },
	      textTitle
	    ),
	    date ? getDate() : null,
	    showSwitch ? getSwitch() : null
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 225 */
/***/ function(module, exports) {

	module.exports = require("moment");

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React, _) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var docs = {
	  title: "UiTabbedView",
	  propDetails: [{ title: "tabs",
	    required: true,
	    type: "array",
	    description: "An array of arrays where the first element is the tab name, and the second element is the component to be rendered." }, { title: "activeTabIndex",
	    required: false,
	    type: "integer",
	    description: "Optional index corresponding to which tab should display." }, { title: "handleTabChange",
	    required: false,
	    type: "function",
	    description: "Must be provided if activeTabIndex is provided, otherwise component will throw. Receives arguments as a tuple ['tabName', TabComponent], and a tabIndex." }]
	};
	
	var UiTabbedView = React.createClass({
	  displayName: "UiTabbedView",
	
	  /* User provides:
	   *    tabs: Array of arrays where:
	   *       * first element of each subarray is the tab name
	   *       * second element of each subarray is the component
	   *    activeTabIndex: Optional index corresponding to which tab should display
	   *    handleTabChange: Receives as arguments a tuple of the form ['tabName', TabComponent], and a tabIndex
	   *     If activeTabIndex is provided but handleTabChange is not, then the component will throw. Otherwise, the callback is optional.
	   */
	  getInitialState: function getInitialState() {
	    return this.tabIndexProvided() ? {} : { activeTab: this.props.tabs[0] };
	  },
	  render: function render() {
	    if (this.tabIndexProvided() && !_.isFunction(this.props.handleTabChange)) {
	      throw new Error('handleTabChange prop must be of type function if activeTabIndex is provided to UiTabbedView');
	    }
	    return React.createElement(
	      "div",
	      { className: "lr-ui-tabbed-view" },
	      this.generateTabs(),
	      this.getActiveTab()[1]
	    );
	  },
	  activateTab: function activateTab(tab, tabIndex) {
	    var activeTab = this.getActiveTab();
	    if (activeTab[0] !== tab[0] && _.isFunction(this.props.handleTabChange)) {
	      this.props.handleTabChange(tab, tabIndex);
	    }
	    if (!this.tabIndexProvided()) {
	      this.setState({ activeTab: tab });
	    }
	  },
	  generateTabs: function generateTabs() {
	    var _this = this;
	
	    var activeTab = this.getActiveTab();
	    return React.createElement(
	      "div",
	      { className: "lr-ui-tabbed-view-tabs" },
	      React.createElement(
	        "ul",
	        { className: "nav nav-tabs nav-justified" },
	        _.map(this.props.tabs, function (tab, tabIndex) {
	          var tabClassName = tab[0] === activeTab[0] ? 'lr-ui-tabbed-view-tab active' : 'lr-ui-tabbed-view-tab inactive';
	          return React.createElement(
	            "li",
	            { key: tab[0], className: tabClassName, onClick: function onClick() {
	                _this.activateTab(tab, tabIndex);
	              } },
	            React.createElement(
	              "div",
	              { className: "lr-ui-tabbed-view-tab-text" },
	              tab[0]
	            )
	          );
	        })
	      )
	    );
	  },
	  getActiveTab: function getActiveTab() {
	    return this.tabIndexProvided() ? this.props.tabs[this.props.activeTabIndex] : this.state.activeTab;
	  },
	  tabIndexProvided: function tabIndexProvided() {
	    return !_.isUndefined(this.props.activeTabIndex);
	  }
	});
	
	exports.default = UiTabbedView;
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(6)))

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = UiSubHeader;
	function UiSubHeader(props) {
	  // User provides:
	  //  - a title for the header (title) : view
	
	  var title = props.title;
	
	
	  return React.createElement(
	    "div",
	    { className: "lr-ui-sub-header" },
	    React.createElement(
	      "div",
	      { className: "lr-ui-sub-header-title" },
	      title
	    )
	  );
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React, _) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = UiProgressMeter;
	var docs = {
	  title: "UiProgressMeter",
	  propDetails: [{ title: "steps",
	    required: true,
	    type: "array",
	    description: "An array which includes objects that represent each step - each object must have a property name which is the name of the step. Additionally each object can take an overrideView (optional renderer overriding the step number) and a customStyle (object to inline-style the text)." }, { title: "currentPosition",
	    required: true,
	    type: "integer",
	    description: "The current step you are at, corresponding to an index in the array." }]
	};
	
	function UiProgressMeter(props) {
	  // User provides:
	  //  - an array which inludes objects that represent each step (steps) : array
	  //    + each object will have the following properties:
	  //      - name: the name of the step
	  //      - overrideView: a view that is passed in that will override the step number
	  //      - customStyle: a hash which is used to inline style the step name
	  //  - the current step that you are at, corresponding to an index in the array (currentPosition) : integer
	
	  var steps = props.steps,
	      currentPosition = props.currentPosition;
	
	
	  var getProgressClassName = function getProgressClassName(i) {
	    if (i < currentPosition) {
	      return 'lr-ui-progress-meter-step-done';
	    } else if (i == currentPosition) {
	      return 'lr-ui-progress-meter-step-doing';
	    } else {
	      return 'lr-ui-progress-meter-step-todo';
	    }
	  };
	
	  return React.createElement(
	    "div",
	    { className: "lr-ui-progress-meter-container" },
	    React.createElement(
	      "ol",
	      { className: "lr-ui-progress-meter" },
	      _.map(steps, function (step, index) {
	        return React.createElement(
	          "li",
	          { className: getProgressClassName(index), key: index, value: index },
	          React.createElement("div", { className: getProgressClassName(index) + "-box" }),
	          React.createElement(
	            "div",
	            { className: "step" },
	            step.overrideView ? React.createElement(
	              "div",
	              { className: "custom-view" },
	              step.overrideView
	            ) : React.createElement(
	              "div",
	              { className: "step-number" },
	              index + 1
	            ),
	            step.customStyle ? React.createElement(
	              "div",
	              { className: "step-name", style: step.customStyle },
	              step.name
	            ) : React.createElement(
	              "div",
	              { className: "step-name" },
	              step.name
	            )
	          )
	        );
	      })
	    )
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(6)))

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React, _) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	exports.default = UiRadioButtonGroup;
	
	var _uiRadioButton = __webpack_require__(230);
	
	var _uiRadioButton2 = _interopRequireDefault(_uiRadioButton);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var docs = {
	  title: "UiRadioButtonGroup",
	  propDetails: [{ title: "label",
	    required: true,
	    type: "string",
	    description: "A title for the radio button group." }, { title: "selected",
	    required: true,
	    type: "integer",
	    description: "A value for the selected radio button." }, { title: "radioButtonArray",
	    required: true,
	    type: "array",
	    description: "An array of objects each of which has a label (string), value(integer), and disabled(boolean)." }, { title: "handleChange",
	    required: true,
	    type: "function",
	    description: "Handles radio button click, takes in teh value of the radio button which was clicked as an input." }]
	};
	
	function UiRadioButtonGroup(props) {
	  // User provides:
	  //  - a title for the radio button group (title) : string
	  //  - the value of the selected button (selected) : string or int
	  //  - an array of objects, each of which have a label(string), value(string or int), and disabled(boolean)  (radioButtonArray) : array
	  //      + formatted as follows:
	  //      [{
	  //        label: "iOS",
	  //        value: "3",
	  //        disabled: false
	  //      }];
	  //  - a function that handles clicks on the radio buttons which takes in the radio button value as an input (handleChange) : function
	
	  var title = props.title,
	      selected = props.selected,
	      radioButtonArray = props.radioButtonArray,
	      handleChange = props.handleChange;
	
	
	  return React.createElement(
	    "div",
	    { className: "lr-ui-radio-button-group" },
	    React.createElement(
	      "div",
	      { className: "lr-ui-radio-button-group-title" },
	      title
	    ),
	    _.map(radioButtonArray, function (button, index) {
	      return React.createElement(_uiRadioButton2.default, {
	        label: button["label"],
	        value: button["value"],
	        selected: selected === button["value"],
	        handleChange: handleChange,
	        disabled: button["disabled"],
	        key: index
	      });
	    })
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(6)))

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = UiRadioButton;
	var docs = {
	  title: "UiRadioButton",
	  propDetails: [{ title: "label",
	    required: true,
	    type: "string",
	    description: "Label." }, { title: "value",
	    required: true,
	    type: "integer",
	    description: "A value for the checkbox." }, { title: "handleChange",
	    required: true,
	    type: "function",
	    description: "Function to handle click - takes the value as an input." }, { title: "selected",
	    required: true,
	    type: "boolean",
	    description: "Whether or not the checkbox is selected." }, { title: "disabled",
	    required: false,
	    type: "boolean",
	    description: "Whether or not the checkbox is disabled." }]
	};
	
	function UiRadioButton(props) {
	  /* User provides:
	   * * a label for the radio button (label) : string
	   * * the selected status of the radio button (selected) : boolean
	   * * a value that will get propagated through the handler when selected (value) : string
	   * * a handler function which handles clicks and takes the value as an input (handleChange) : function
	   */
	  var label = props.label,
	      value = props.value,
	      selected = props.selected,
	      disabled = props.disabled,
	      handleChange = props.handleChange;
	
	
	  var handleClick = function handleClick() {
	    if (!disabled) {
	      handleChange(value);
	    }
	  };
	
	  return React.createElement(
	    "div",
	    { className: "lr-ui-radio-button-container", onClick: handleClick },
	    React.createElement("input", {
	      className: "lr-ui-radio-button-input",
	      name: label,
	      type: "radio",
	      value: value,
	      disabled: disabled,
	      checked: selected,
	      onChange: handleClick
	    }),
	    React.createElement("div", { className: "lr-ui-radio-button" }),
	    React.createElement(
	      "div",
	      { className: "lr-ui-radio-button-label" },
	      label
	    )
	  );
	};
	
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React, cn) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = UiTile;
	
	var _uiIcon = __webpack_require__(18);
	
	var _uiIcon2 = _interopRequireDefault(_uiIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function UiTile(props) {
	  // User must pass in:
	  //  - icon that is displayed in the tile (icon) : string
	  //  - string displayed under the image as a label (labelText) : string
	  //  - whether the tile is currently selected (selected) : boolean
	  //  - function to update state in the parent component that takes in the
	  //    change event (handleChange) : function
	  //  - whether the tile is active (disabled) : boolean
	
	  var icon = props.icon,
	      labelText = props.labelText,
	      selected = props.selected,
	      handleChange = props.handleChange,
	      disabled = props.disabled;
	
	
	  var handleClick = function handleClick(e) {
	    if (!disabled) {
	      handleChange(e);
	    }
	  };
	
	  return React.createElement(
	    'div',
	    { className: cn('lr-ui-tile', { 'selected': selected }, { 'disabled': disabled }), onClick: handleClick },
	    React.createElement(
	      'div',
	      { className: 'lr-ui-tile-content' },
	      React.createElement(_uiIcon2.default, { icon: icon, classes: 'lr-ui-tile-icon' }),
	      React.createElement(
	        'div',
	        { className: 'lr-ui-tile-text' },
	        labelText
	      )
	    )
	  );
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(9)))

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(cn, React) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = UiWizardControls;
	
	var _uiIcon = __webpack_require__(18);
	
	var _uiIcon2 = _interopRequireDefault(_uiIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function UiWizardControls(props) {
	  // User must pass in:
	  //  - an object with 3 keys: `left`, `cancel`, and `right`. Each key maps
	  //    to an object containing the disabled/enabled state and click handler
	  //    for each button (buttonAttribs) : Object
	  //  - leaving out the disabled property has the same effect as specifying `disabled: false`
	  //  - the handleChange function won't be called if the button is disabled
	  //  - the content above the wizard controls must specify `padding-bottom: 120px`
	  //    in the style for proper spacing. An example of this can be found in
	  //    the UiWizardControlsSandbox component.
	  //  <UiWizardControls buttonAttribs={{
	  //    left: {
	  //      handleChange: (e) => console.log(e.target),
	  //      disabled: false
	  //    },
	  //    cancel: {
	  //      handleChange: (e) => console.log('closed')
	  //    },
	  //    right: {
	  //      handleChange: (e) => console.log('this will never print!'),
	  //      disabled: true
	  //    }
	  //  }}/>
	
	  var buttonAttribs = props.buttonAttribs;
	
	
	  var generateWizardButton = function generateWizardButton(buttonIcon, attr) {
	    var buttonClasses = cn('lr-ui-wizard-controls-button', {
	      'disabled': attr.disabled
	    });
	
	    return React.createElement(_uiIcon2.default, {
	      icon: buttonIcon,
	      classes: buttonClasses,
	      onClick: attr.disabled ? null : attr.handleChange
	    });
	  };
	
	  return React.createElement(
	    'div',
	    { className: 'lr-ui-wizard-controls' },
	    React.createElement(
	      'div',
	      { className: 'lr-ui-wizard-controls-buttons' },
	      generateWizardButton('arrow-left', buttonAttribs.left),
	      generateWizardButton('cancel', buttonAttribs.cancel),
	      generateWizardButton('arrow-right', buttonAttribs.right)
	    )
	  );
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(9), __webpack_require__(7)))

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React, _) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/*
	 * Props:
	 *  title: string or arbitrary jsx
	 *  color: string (defaults to 'gray')
	 *  handleChangeDefault: function (required when one or more options does not have a "handleChange" function)
	 *  options: array of strings and/or hashes
	 *    - hashes of the form: { "text" (required), "value" (optional string), border" (optional bool), "handleChange" (optional function) }
	 *
	 *  for example:
	 *    const options = [ 'a',
	 *                      { text: 'b', border: true, value: 'b-value' },
	 *                      { text: 'c', handleChange: x => console.log(x + ' -- custom callback') }
	 *                    ];
	 *    <UiDropdown title={<strong>Dropdown like it's hot</strong>} options={options} color='green' handleChangeDefault={x => console.log(x)} />
	 */
	
	var docs = {
	  title: "UiDropdown",
	  propDetails: [{ title: "title",
	    required: true,
	    type: "string",
	    description: "The title for the Dropdown." }, { title: "options",
	    required: true,
	    type: "array",
	    description: "An array of strings and/or hashes - if the element is a hash it can have keys text (required string), border (optional boolean), value (optional string), and handleChange (optional function). Text is custom text for the dropdown option, border is a boolean that determines if there is a border, value is the value of the option, and handleChange is a custom handleChange for the option." }, { title: "handleChangeDefault",
	    required: false,
	    type: "function",
	    description: "A function to handle change - required when one or more options does not have a handleChange function." }, { title: "color",
	    required: false,
	    type: "string",
	    description: "The color of the dropdown - defaults to grey." }]
	};
	
	var UiDropdown = React.createClass({
	  displayName: "UiDropdown",
	  getInitialState: function getInitialState() {
	    return {
	      expanded: false
	    };
	  },
	  render: function render() {
	    var _props = this.props,
	        title = _props.title,
	        options = _props.options,
	        _props$color = _props.color,
	        color = _props$color === undefined ? 'gray' : _props$color,
	        hideCaret = _props.hideCaret,
	        _props$tooltipPositio = _props.tooltipPosition,
	        tooltipPosition = _props$tooltipPositio === undefined ? 'center' : _props$tooltipPositio;
	
	    var containerClass = 'lr-ui-dropdown ' + color + (this.state.expanded ? ' open' : '');
	    return React.createElement(
	      "div",
	      { className: containerClass },
	      React.createElement(
	        "div",
	        {
	          className: "lr-ui-dropdown-toggle",
	          tabIndex: "1",
	          onBlur: this.closeOnBlur,
	          "aria-expanded": this.state.expanded.toString(),
	          onClick: this.toggleExpanded },
	        React.createElement(
	          "label",
	          null,
	          title
	        ),
	        _.isEmpty(options) || hideCaret ? null : React.createElement("i", { className: "fa fa-angle-down" }),
	        React.createElement(
	          "ul",
	          { className: 'dropdown-menu ' + (tooltipPosition === 'left' ? 'tooltip-left ' : '') + (tooltipPosition === 'right' ? 'tooltip-right ' : '') },
	          _.map(options, this.generateDropdownOption)
	        )
	      )
	    );
	  },
	  toggleExpanded: function toggleExpanded() {
	    if (!_.isEmpty(this.props.options)) {
	      this.setState({ expanded: !this.state.expanded });
	    }
	  },
	  closeOnBlur: function closeOnBlur() {
	    if (this.state.expanded) {
	      this.toggleExpanded();
	    }
	  },
	  generateDropdownOption: function generateDropdownOption(option, index) {
	    var _this = this;
	
	    var borderStyle = option.border ? { borderBottom: 'thin solid white' } : {};
	    var optionText = typeof option === 'string' ? option : option.text;
	    var onMouseDown = function onMouseDown() {
	      _this.toggleExpanded();
	      if (typeof option.handleChange === 'function') {
	        option.handleChange(optionText, option.value);
	      } else {
	        _this.props.handleChangeDefault(optionText, option.value);
	      }
	    };
	    return React.createElement(
	      "li",
	      { key: index, value: option.value || optionText, onMouseDown: onMouseDown },
	      React.createElement(
	        "a",
	        { style: borderStyle },
	        optionText
	      )
	    );
	  }
	});
	
	exports.default = UiDropdown;
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(6)))

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/*
	 * example:
	 *      const blurb = <p>Nice to blurb you</p>;
	 *      return <UiCollapse
	 *               expanded={true}
	 *               expandPrompt={<span className='spanny'>Show Details</span>}
	 *               collapsePrompt='Hide Details'
	 *               info={blurb} />
	 */
	
	var docs = {
	  title: "UiCollapse",
	  propDetails: [{ title: "expanded",
	    required: true,
	    type: "boolean",
	    description: "Initial expanded state of collapse." }, { title: "expandPrompt",
	    required: true,
	    type: "string",
	    description: "The prompt when the collapse is expanded." }, { title: "collapsePrompt",
	    required: true,
	    type: "string",
	    description: "The prompt when the collapse is collapsed." }, { title: "info",
	    required: true,
	    type: "string or component",
	    description: "The information to show when expanded." }, { title: "expandUp",
	    required: false,
	    type: "boolean",
	    description: "should the info expand upwards? defaults to expand below prompt"
	  }]
	};
	var UiCollapse = React.createClass({
	  displayName: "UiCollapse",
	  getInitialState: function getInitialState() {
	    return {
	      expanded: !!this.props.expanded
	    };
	  },
	  render: function render() {
	    var _props = this.props,
	        expandPrompt = _props.expandPrompt,
	        collapsePrompt = _props.collapsePrompt,
	        info = _props.info,
	        _props$expandUp = _props.expandUp,
	        expandUp = _props$expandUp === undefined ? false : _props$expandUp;
	    var expanded = this.state.expanded;
	
	    var prompt = React.createElement(
	      "div",
	      { className: "lr-ui-collapse-prompt", onClick: this.toggleExpanded },
	      expanded ? collapsePrompt : expandPrompt
	    );
	    return React.createElement(
	      "div",
	      { className: "lr-ui-collapse" },
	      !expandUp ? prompt : '',
	      expanded && info,
	      expandUp ? prompt : ''
	    );
	  },
	  toggleExpanded: function toggleExpanded() {
	    this.setState({ expanded: !this.state.expanded });
	  }
	});
	
	exports.default = UiCollapse;
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	
	var _reactAddonsCssTransitionGroup = __webpack_require__(236);
	
	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);
	
	var _uiIcon = __webpack_require__(18);
	
	var _uiIcon2 = _interopRequireDefault(_uiIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/* User provides:
	* * > type - the type of the alert (string)
	* *      + must be one of [success, warning, information, error] - otherwise defaults to information
	* * > message - the message to be shown (string)
	* * > handleClose - function for handling the click of the 'x' (function)
	* * > permanent - alert will stay on the page until the user clicks to close, defaults to false (boolean)
	*/
	
	var docs = {
	  title: "UiAlert",
	  propDetails: [{ title: "type",
	    required: true,
	    type: "string",
	    description: "The type of the alert - must be one of [success, warning, information, error] - otherwise defaults to information." }, { title: "message",
	    required: true,
	    type: "string",
	    description: "The message to be shown." }, { title: "handleClose",
	    required: true,
	    type: "function",
	    description: "Handles the user closing the alert." }, { title: "permanent",
	    required: false,
	    type: "boolean",
	    description: "If true, alert will stay on the page until the user clicks close. Otherwise alert closes after 8 seconds of non interaction." }]
	};
	
	var alertTypes = ['success', 'warning', 'information', 'error'];
	
	var UiAlert = React.createClass({
	  displayName: 'UiAlert',
	  getInitialState: function getInitialState() {
	    return {
	      timeToClose: new Date().getTime() + 8000,
	      mouseOver: false,
	      removeAlert: false
	    };
	  },
	  componentDidMount: function componentDidMount() {
	    var _this = this;
	
	    if (!this.props.permanent) {
	      var intervalId = setInterval(function () {
	        if (new Date().getTime() > _this.state.timeToClose && !_this.state.mouseOver) {
	          _this.removeAlert();
	        }
	      }, 1000);
	      this.intervalId = intervalId;
	    }
	  },
	  componentWillReceiveProps: function componentWillReceiveProps() {
	    this.setState({ timeToClose: new Date().getTime() + 8000 });
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (Number.isInteger(this.intervalId)) {
	      clearInterval(this.intervalId);
	    }
	  },
	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    //Refresh elevio tooltips (here rather than across apps: (Admin / Connect ...))
	    //if we move to open source, we may want to reconsider how we handle this case
	    if (window._elev && window._elev.reloadTips) {
	      window._elev.reloadTips();
	    }
	  },
	  render: function render() {
	    var type = this.props.type;
	    var message = this.props.message;
	
	    if (!alertTypes.includes(type)) {
	      type = 'information';
	    }
	
	    var alertMessage = React.createElement(
	      'div',
	      { key: 1, className: 'lr-ui-alert-wrapper ' + type },
	      React.createElement(
	        'div',
	        { className: 'lr-ui-alert-container' },
	        React.createElement(
	          'div',
	          { className: 'lr-ui-alert-message' },
	          message
	        ),
	        React.createElement(
	          'div',
	          { onClick: this.removeAlert, className: 'lr-ui-alert-close' },
	          React.createElement(_uiIcon2.default, {
	            icon: 'cancel',
	            dimensions: [14, 14],
	            classes: type === "warning" ? "sidebar-dark" : "white"
	          })
	        )
	      )
	    );
	
	    return React.createElement(
	      'div',
	      { onMouseEnter: this.mouseOver, onMouseLeave: this.mouseLeave, className: 'lr-ui-alert' },
	      React.createElement(
	        _reactAddonsCssTransitionGroup2.default,
	        {
	          transitionName: 'lr-ui-alert',
	          transitionAppear: true,
	          transitionAppearTimeout: 0,
	          transitionEnter: false,
	          transitionLeave: true,
	          transitionLeaveTimeout: 0 },
	        !this.state.removeAlert ? alertMessage : null
	      )
	    );
	  },
	  mouseOver: function mouseOver() {
	    if (!this.state.removeAlert) {
	      this.setState({
	        mouseOver: true
	      });
	    }
	  },
	  mouseLeave: function mouseLeave() {
	    if (!this.state.removeAlert) {
	      this.setState({
	        mouseOver: false,
	        timeToClose: new Date().getTime() + 8000
	      });
	    }
	  },
	  removeAlert: function removeAlert() {
	    var _this2 = this;
	
	    setTimeout(function () {
	      _this2.props.handleClose();
	    }, 350);
	    this.setState({
	      removeAlert: true
	    });
	  }
	});
	
	exports.default = UiAlert;
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 236 */
/***/ function(module, exports) {

	module.exports = require("react-addons-css-transition-group");

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = UiFileUploadStatus;
	function UiFileUploadStatus(props) {
	  // User provides:
	  //  - progress: a percentage of the total work that the process has finished
	  //  - text: optional text to have in the center of the component
	
	  var progress = props.progress,
	      text = props.text;
	
	
	  var correctProgress = progress / 100 * 100.53;
	
	  return React.createElement(
	    "div",
	    { className: "lr-ui-file-upload-status-container" },
	    React.createElement(
	      "svg",
	      { className: "lr-ui-file-upload-status-svg", viewBox: "0 0 32 32" },
	      text ? React.createElement(
	        "text",
	        { x: "50%", y: "50%", className: "lr-ui-file-upload-status-text" },
	        text
	      ) : null,
	      React.createElement("circle", { className: "lr-ui-file-upload-status-progress-circle", r: "16", cx: "16", cy: "16", strokeDasharray: correctProgress + " 100.53" }),
	      React.createElement("circle", { className: "lr-ui-file-upload-status-static-white-mask", r: "16", cx: "16", cy: "16" }),
	      React.createElement("circle", { className: "lr-ui-file-upload-status-static-border", r: "16", cx: "16", cy: "16" }),
	      React.createElement("circle", { className: "lr-ui-file-upload-status-progress-border", r: "16", cx: "16", cy: "16", strokeDasharray: correctProgress + " 100.53" })
	    )
	  );
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)))

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React, _, cn) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _uiHeader = __webpack_require__(119);
	
	var _uiHeader2 = _interopRequireDefault(_uiHeader);
	
	var _uiSearch = __webpack_require__(223);
	
	var _uiSearch2 = _interopRequireDefault(_uiSearch);
	
	var _uiCheckbox = __webpack_require__(8);
	
	var _uiCheckbox2 = _interopRequireDefault(_uiCheckbox);
	
	var _uiIcon = __webpack_require__(18);
	
	var _uiIcon2 = _interopRequireDefault(_uiIcon);
	
	var _uiButtonGroup = __webpack_require__(5);
	
	var _uiButtonGroup2 = _interopRequireDefault(_uiButtonGroup);
	
	var _uiDropdown = __webpack_require__(233);
	
	var _uiDropdown2 = _interopRequireDefault(_uiDropdown);
	
	var _uiLoadingComponent = __webpack_require__(221);
	
	var _uiLoadingComponent2 = _interopRequireDefault(_uiLoadingComponent);
	
	var _reactAddonsCssTransitionGroup = __webpack_require__(236);
	
	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);
	
	var _reactInfiniteScroller = __webpack_require__(239);
	
	var _reactInfiniteScroller2 = _interopRequireDefault(_reactInfiniteScroller);
	
	var _reactTooltip = __webpack_require__(121);
	
	var _reactTooltip2 = _interopRequireDefault(_reactTooltip);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var leftBorder;
	
	// User must pass in:
	//  - initialFetchComplete        : boolean   : whether the initial fetch is complete
	//  - title                       : string    : the title for the table
	//  - columnSortedBy              : string    : the name of the key on which the table is sorted
	//  - sortOrderAscending          : boolean   : whether the sort order on the column is ascending or not
	//  - handleColumnSort            : function  : a function to handle column sorting that takes in the name of the column and a boolean that determines if the sort order is ascending or not
	//  - hideDetail                  : boolean   : whether or not to hide the ability to show the detail view
	//  - detailView                  : function  : a function that takes in an element and returns a detail view
	//  - headerFilterGroup           : object    : A group of filters (UiFilterGroup) to be displayed in the header
	//  - headerButtonGroup           : object    : A group of buttons (UiButtonGroup) to be displayed in the header
	//  - searchValue                 : string    : the value of the string in the UiSearch component in the header
	//  - handleSearchChange          : function  : A function that handles change in the UiSearch component that takes in the event
	//  - handleSearchEnter           : function  : A function that handles the user pressing enter while focused on the UiSearch component
	//  - handleCheckboxChange        : function  : A function that handles the user clicking a row checkbox, takes in the id of the element and a boolean representing whether or not the checkbox is checked
	//  - handleSelectAllChange       : function  : A function that handles the user clicking the select all checkbox, the second argument is a boolean which tells whether or not the checkbox is checked
	//  - selectAllChecked            : boolean   : whether or not the select all checkbox is checked
	//  - selectedRows                : array     : array of element id's representing which elements are selected
	//  - loadMoreElements            : function  : a function which gets called when the user scrolls to the bottom of the infinite scroll component
	//  - hasMoreElements             : boolean   : whether or not there are more elements to load when scrolling to the bottom of the infinite scroll component
	//  - haveChildren                : boolean   : whether or not the elements have children
	//  - expandedRows                : array     : array of element id's representing which elements are expanded (child component is showing)
	//  - childComponent              : function  : a function that takes in the element and returns the child component
	//  - totalRows                   : integer   : total number of elements in the table, used for the header
	//  - elements                    : array     : the array of elements to show in the table
	//  - handleShowHideColumn        : function  : a function to show or hide a column - takes in the key that the column maps to and a boolean determining whether it should be shown or not
	//  - handleColumnResize          : function  : a function that handles column resizing (TBD)
	//  - toggleChildren              : function  : a function that updates the state of expandedRows in the parent element - takes in the id of the element
	//  - elementName                 : string    : a name for the elements shown in the table - used in the header
	//  - elementKeyMap               : object    : an object that maps the keys of the elements passed in to various properties in their rendering in the table
	//     * Each property should map to:
	//      + columnName: the name for the column - used in the column header
	//      + sortable: boolean determining whether or not the column is sortable
	//      + width: the relative width of the column
	//        -- If the widths of all of the columns shown add up to less than or equal to 24, they will be scaled to fit the containing element's width and given widths proportional to their widths
	//        -- If the widths add up to greater than 24, they will extend beyond the width of their containing element and will be sized according to their relative widths
	//      + display: an optional function that determines how to display the information. If no function is passed, a span with the property's value is used
	//        -- If optional function is provided, the first argument corresponds to the property's value for the given element
	//        -- If optional function is provided, the optional second argument corresponds to the element with all its attributes
	//      + tooltipDisplay: an optional function that determines the tooltip content if tooltipOnOverflow is 'true'. If no function is passed, the property's value is used
	//        -- If optional function is provided, the first argument corresponds to the property's value for the given element
	//        -- If optional function is provided, the optional second argument corresponds to the element with all its attributes
	//      + columnHeaderTooltip: an optional function that determines the permanent tooltip texts.  Takes precendent over  'tooltipOnOverflow' and 'tooltipDisplay'
	
	//  - columnOrder                 : array     : the order that the columns should be shown in - the elements of this array are the keys of the objects, not their columnNames
	//  - columnsToShow               : array     : An array of columns that should be shown in the table - again, these map to keys of the elements, not the actual name of the column
	//  - showCheckboxes              : boolean   : whether or not to show checkboxes
	//  - hideSearch                  : boolean   : whether or not to show the search in the header
	//  - hideFilters                 : boolean   : whether or not to show the filters
	//  - hideScrollToTop             : boolean   : whether or not to show the scrollToTop button
	
	// User may pass in:
	//  - customFirstRow              : object    : JSX tag for the first row of the table (commonly used for select all by filters)
	//  - showCustomFirstRow          : boolean   : whether or not to show the customFirstRow
	//  - emptyView                   : object    : JSX tag for the empty view (displayed if initialFetchComplete is true and elements.length === 0)
	//  - tooltipOnOverflow           : boolean   : whether or not to show a tooltip when hovered on row element or header that is overflowing (defaults to 'true')
	//  - loadingRowsCount            : integer   : number of grey loading rows to show, defaults to 20, for testing set initialFetchComplete to false
	
	var UiTable = React.createClass({
	  displayName: 'UiTable',
	  getInitialState: function getInitialState() {
	    return {
	      columnSelectorOpen: false,
	      detailViewOpen: false,
	      detailViewElement: null,
	      hideScrollToTop: true
	    };
	  },
	
	
	  componentDidUpdate: function componentDidUpdate(prevProps, prevState) {
	    _reactTooltip2.default.rebuild();
	  },
	
	  componentWillUnmount: function componentWillUnmount() {
	    if (this.scrollListener) {
	      this.rowContainer.removeEventListener('scroll', this.handleScroll);
	    }
	  },
	
	  render: function render() {
	    var _props = this.props,
	        initialFetchComplete = _props.initialFetchComplete,
	        title = _props.title,
	        columnSortedBy = _props.columnSortedBy,
	        sortOrderAscending = _props.sortOrderAscending,
	        handleColumnSort = _props.handleColumnSort,
	        detailView = _props.detailView,
	        headerFilterGroup = _props.headerFilterGroup,
	        headerButtonGroup = _props.headerButtonGroup,
	        searchValue = _props.searchValue,
	        handleSearchChange = _props.handleSearchChange,
	        handleSearchEnter = _props.handleSearchEnter,
	        handleCheckboxChange = _props.handleCheckboxChange,
	        handleSelectAllChange = _props.handleSelectAllChange,
	        selectAllChecked = _props.selectAllChecked,
	        selectedRows = _props.selectedRows,
	        loadMoreElements = _props.loadMoreElements,
	        hasMoreElements = _props.hasMoreElements,
	        handleCheck = _props.handleCheck,
	        haveChildren = _props.haveChildren,
	        expandedRows = _props.expandedRows,
	        childComponent = _props.childComponent,
	        totalRows = _props.totalRows,
	        elements = _props.elements,
	        handleShowHideColumn = _props.handleShowHideColumn,
	        handleColumnResize = _props.handleColumnResize,
	        toggleChildren = _props.toggleChildren,
	        elementName = _props.elementName,
	        elementKeyMap = _props.elementKeyMap,
	        columnOrder = _props.columnOrder,
	        columnsToShow = _props.columnsToShow,
	        showCheckboxes = _props.showCheckboxes,
	        hideSearch = _props.hideSearch,
	        hideFilters = _props.hideFilters,
	        emptyView = _props.emptyView;
	    var hideScrollToTop = this.props.hideScrollToTop;
	
	
	    if (elements.length <= 20 || this.state.hideScrollToTop) {
	      hideScrollToTop = true;
	    }
	
	    var totalWidth = 0;
	
	    _.each(columnsToShow, function (column) {
	      totalWidth += elementKeyMap[column].width;
	    });
	
	    var containerWidth;
	    if (totalWidth <= 24) {
	      containerWidth = "100%";
	    } else {
	      containerWidth = Math.round(totalWidth / 24.0 * 100) + "%";
	    }
	
	    this.totalWidth = totalWidth;
	    this.containerWidth = containerWidth;
	
	    var selectedRowsHash = {};
	    _.each(selectedRows, function (row) {
	      selectedRowsHash[row] = true;
	    });
	    this.selectedRowsHash = selectedRowsHash;
	
	    var expandedRowsHash = {};
	    _.each(expandedRows, function (id) {
	      expandedRowsHash[id] = true;
	    });
	
	    this.expandedRowsHash = expandedRowsHash;
	
	    if (!initialFetchComplete) {
	      return React.createElement(
	        'div',
	        { className: 'lr-ui-table' },
	        this.getHeader(),
	        !hideFilters ? this.getFilters() : null,
	        React.createElement(
	          'div',
	          { className: 'lr-ui-table-container' },
	          this.getColumnHeaders(),
	          this.getLoadingRows()
	        )
	      );
	    }
	
	    return React.createElement(
	      'div',
	      { className: 'lr-ui-table' },
	      this.getHeader(),
	      !hideFilters ? this.getFilters() : null,
	      React.createElement(
	        'div',
	        { className: 'lr-ui-table-container' },
	        this.getColumnHeaders(),
	        elements.length === 0 && emptyView ? emptyView : this.getRows()
	      ),
	      React.createElement(
	        _reactAddonsCssTransitionGroup2.default,
	        {
	          transitionName: 'lr-ui-table-scroll',
	          transitionAppear: true,
	          transitionEnterTimeout: 250,
	          transitionAppearTimeout: 250,
	          transitionEnter: true,
	          transitionLeave: true,
	          transitionLeaveTimeout: 0
	        },
	        !hideScrollToTop ? React.createElement(
	          'div',
	          { className: 'lr-ui-table-scroll-container' },
	          React.createElement(_uiIcon2.default, { dimensions: [20, 20], icon: "caret-up", color: "header-gray", onClick: function onClick() {
	              $(".lr-ui-table-row-container").animate({ scrollTop: 0 });
	            } })
	        ) : null
	      ),
	      this.getRowTooltip(),
	      this.getHeaderTooltip()
	    );
	  },
	  getRowTooltip: function getRowTooltip() {
	    var _props$tooltipOnOverf = this.props.tooltipOnOverflow,
	        tooltipOnOverflow = _props$tooltipOnOverf === undefined ? true : _props$tooltipOnOverf;
	
	
	    if (tooltipOnOverflow) {
	      var tooltip = React.createElement(_reactTooltip2.default, { id: 'uiTableRowTooltip', place: 'bottom', type: 'dark', effect: 'solid', getContent: function getContent() {
	          // Overflowing when scrollWidth is greater than the offsetWidth
	          var elem = document.getElementById(event.target.id);
	          return elem && elem.offsetWidth < elem.scrollWidth ? elem.getAttribute('data-tip') : null;
	        } });
	
	      return tooltip;
	    } else {
	      return null;
	    }
	  },
	  getHeaderTooltip: function getHeaderTooltip() {
	    var _props$tooltipOnOverf2 = this.props.tooltipOnOverflow,
	        tooltipOnOverflow = _props$tooltipOnOverf2 === undefined ? true : _props$tooltipOnOverf2;
	
	
	    return React.createElement(_reactTooltip2.default, { id: 'uiTableHeaderTooltip', place: 'top', type: 'dark', effect: 'solid', getContent: function getContent() {
	        var elem = document.getElementById(event.target.id);
	        // If element has a permanent tooltip or has 'tooltipOnOverflow' set and it is overflowing
	        if (elem && elem.hasAttribute('data-permanent') || tooltipOnOverflow && elem.offsetWidth < elem.scrollWidth) {
	          return elem.getAttribute('data-tip');
	        } else {
	          // React tooltip will display 'data-tip content when getContent returns 'null', so make data-tip null
	          elem.setAttribute('data-tip', null);
	          return null;
	        }
	      } });
	  },
	  getColumnHeaders: function getColumnHeaders() {
	    var _this = this;
	
	    var _props2 = this.props,
	        showCheckboxes = _props2.showCheckboxes,
	        selectAllChecked = _props2.selectAllChecked,
	        handleSelectAllChange = _props2.handleSelectAllChange,
	        haveChildren = _props2.haveChildren,
	        elementKeyMap = _props2.elementKeyMap,
	        columnOrder = _props2.columnOrder,
	        columnsToShow = _props2.columnsToShow,
	        columnSortedBy = _props2.columnSortedBy,
	        sortOrderAscending = _props2.sortOrderAscending,
	        handleColumnSort = _props2.handleColumnSort,
	        _props2$tooltipOnOver = _props2.tooltipOnOverflow,
	        tooltipOnOverflow = _props2$tooltipOnOver === undefined ? true : _props2$tooltipOnOver,
	        columnHeaderTooltip = _props2.columnHeaderTooltip;
	
	
	    var sortColumnClick = function sortColumnClick(column, sortable) {
	      if (sortable) {
	        if (column === columnSortedBy) {
	          handleColumnSort(column, !sortOrderAscending);
	        } else {
	          handleColumnSort(column, true);
	        }
	      }
	    };
	
	    var getHeaderTooltipText = function getHeaderTooltipText(elementKeyMap, column) {
	      if (elementKeyMap[column].columnHeaderTooltip) {
	        return elementKeyMap[column].columnHeaderTooltip();
	      } else if (tooltipOnOverflow) {
	        return elementKeyMap[column].columnName;
	      } else {
	        return null;
	      }
	    };
	
	    var getCaret = function getCaret(column) {
	      return React.createElement(
	        'div',
	        { className: 'lr-ui-table-column-header-caret-container' },
	        React.createElement(_uiIcon2.default, { onClick: function onClick() {}, icon: columnSortedBy === column && sortOrderAscending ? 'caret-up' : 'caret-down', color: columnSortedBy === column ? 'base-green' : 'sidebar-dark', dimensions: columnSortedBy === column ? [12, 12] : [10, 10] })
	      );
	    };
	
	    return React.createElement(
	      'div',
	      { className: "lr-ui-table-column-header-row", style: { width: this.containerWidth } },
	      showCheckboxes ? React.createElement(
	        'div',
	        { className: 'lr-ui-table-header-checkbox-container' },
	        React.createElement(_uiCheckbox2.default, { checked: selectAllChecked, handleChange: handleSelectAllChange })
	      ) : null,
	      haveChildren ? React.createElement('div', { style: { width: "10px", display: 'inline-block' } }) : null,
	      _.map(columnOrder, function (column, i) {
	        if (_.contains(columnsToShow, column)) {
	          var columnWidth = Math.round(elementKeyMap[column].width / _this.totalWidth * 92.0);
	          var styleWidth = columnWidth + "%";
	          var key = 'header-' + column;
	
	          //Default the tooltip to the overflow id, which will be ignored if tooltipOverflow
	          var tooltipText = getHeaderTooltipText(elementKeyMap, column);
	          var permanentTooltip = !!elementKeyMap[column].columnHeaderTooltip ? 'permanent' : null;
	
	          return React.createElement(
	            'div',
	            { key: i, className: "lr-ui-column-header-container", style: elementKeyMap[column].justification ? { textAlign: elementKeyMap[column].justification, width: styleWidth } : { width: styleWidth } },
	            React.createElement(
	              'div',
	              { onClick: sortColumnClick.bind(null, column, elementKeyMap[column].sortable), className: cn('lr-ui-table-column-header', { 'sorted-by': columnSortedBy === column }) },
	              React.createElement(
	                'div',
	                { id: key, className: 'lr-ui-table-column-header-label-container', 'data-tip': tooltipText, 'data-for': 'uiTableHeaderTooltip', 'data-permanent': permanentTooltip },
	                elementKeyMap[column].columnName,
	                ' '
	              ),
	              elementKeyMap[column].sortable ? getCaret(column) : null
	            ),
	            React.createElement(
	              'div',
	              { className: "lr-ui-table-column-header-divider" },
	              '\xA0'
	            )
	          );
	        }
	      })
	    );
	  },
	  getHeader: function getHeader() {
	    var _props3 = this.props,
	        title = _props3.title,
	        elements = _props3.elements,
	        totalRows = _props3.totalRows,
	        elementName = _props3.elementName,
	        hideSearch = _props3.hideSearch,
	        searchValue = _props3.searchValue,
	        handleSearchChange = _props3.handleSearchChange,
	        handleSearchEnter = _props3.handleSearchEnter;
	
	
	    return React.createElement(_uiHeader2.default, {
	      textTitle: title,
	      subHeader: React.createElement(
	        'p',
	        null,
	        'Showing',
	        React.createElement(
	          'strong',
	          null,
	          ' ',
	          elements.length,
	          ' '
	        ),
	        'of',
	        React.createElement(
	          'strong',
	          null,
	          ' ',
	          totalRows,
	          ' '
	        ),
	        elementName,
	        's'
	      ),
	      rightSideContent: !hideSearch ? React.createElement(_uiSearch2.default, {
	        customStyle: { margin: '0' },
	        inputValue: searchValue,
	        placeholder: "Search",
	        hideBorder: true,
	        handleChange: handleSearchChange,
	        handleEnter: handleSearchEnter
	      }) : null
	    });
	  },
	  getDetailView: function getDetailView() {
	    var detailView = this.props.detailView;
	
	    return React.createElement(
	      'div',
	      { className: 'lr-ui-table-detail-view' },
	      React.createElement(
	        'div',
	        { className: 'lr-ui-table-detail-view-container' },
	        detailView(this.state.detailViewElement),
	        React.createElement(_uiIcon2.default, { icon: 'cancel', color: 'white', classes: 'lr-ui-table-detail-view-clear-icon', dimensions: [20, 20], onClick: this.closeDetailView }),
	        React.createElement(
	          'div',
	          { onClick: this.closeDetailView, className: 'lr-ui-table-detail-view-caret-container' },
	          React.createElement(_uiIcon2.default, { icon: 'caret-right', color: 'base-green', dimensions: [15, 15] })
	        )
	      )
	    );
	  },
	  closeDetailView: function closeDetailView() {
	    this.setState({
	      detailViewOpen: false,
	      detailViewElement: null
	    });
	  },
	  openDetailView: function openDetailView(element) {
	    this.setState({ detailViewOpen: true, detailViewElement: element });
	  },
	  getLoadingRow: function getLoadingRow(i) {
	    var _props4 = this.props,
	        showCheckboxes = _props4.showCheckboxes,
	        haveChildren = _props4.haveChildren;
	
	
	    var leftMargin = 0;
	    if (showCheckboxes) {
	      leftMargin += 28;
	    }
	
	    if (haveChildren) {
	      leftMargin += 7;
	    }
	
	    var leftMarginStyle = leftMargin + "px";
	    return React.createElement(
	      'div',
	      { key: i, className: 'lr-ui-table-loading-row', style: { height: '30px', width: '100%' } },
	      React.createElement('div', { className: 'animated-background', style: { marginLeft: leftMarginStyle, height: '8px', top: '4px', display: 'inline-block', width: '12%' } }),
	      React.createElement('div', { className: 'animated-background', style: { height: '8px', top: '4px', display: 'inline-block', width: '45%' } }),
	      React.createElement('div', { className: 'animated-background', style: { height: '8px', top: '4px', display: 'inline-block', width: '10%' } })
	    );
	  },
	  getLoadingRows: function getLoadingRows() {
	    var _props$loadingRowsCou = this.props.loadingRowsCount,
	        loadingRowsCount = _props$loadingRowsCou === undefined ? 20 : _props$loadingRowsCou;
	
	    return React.createElement(
	      'div',
	      { className: 'lr-ui-table-loading-row-container' },
	      _.times(loadingRowsCount, this.getLoadingRow)
	    );
	  },
	  getFilters: function getFilters() {
	    var _props5 = this.props,
	        headerFilterGroup = _props5.headerFilterGroup,
	        headerButtonGroup = _props5.headerButtonGroup,
	        columnsToShow = _props5.columnsToShow,
	        columnOrder = _props5.columnOrder,
	        handleShowHideColumn = _props5.handleShowHideColumn,
	        elementKeyMap = _props5.elementKeyMap,
	        detailView = _props5.detailView;
	
	
	    var dropdownOptions = _.map(columnOrder, function (column) {
	      var onlyOneSelected = columnsToShow.length === 1;
	      var selected = _.contains(columnsToShow, column);
	      return {
	        text: React.createElement(
	          'div',
	          null,
	          React.createElement(
	            'div',
	            { style: { display: 'inline-block' } },
	            React.createElement(_uiCheckbox2.default, { color: 'grey', value: column, checked: selected, disabled: onlyOneSelected && selected, handleChange: handleShowHideColumn.bind(null, column, !selected) })
	          ),
	          React.createElement(
	            'div',
	            { style: { display: "inline-block", marginLeft: '8px' } },
	            elementKeyMap[column].columnName
	          )
	        ),
	        value: column,
	        handleChange: onlyOneSelected && selected ? function () {} : handleShowHideColumn.bind(null, column, !selected)
	      };
	    });
	
	    return React.createElement(
	      'div',
	      { className: 'lr-ui-table-filters-container' },
	      React.createElement(
	        'div',
	        { className: 'lr-ui-table-filter-group-container' },
	        headerFilterGroup
	      ),
	      React.createElement(
	        'div',
	        { className: 'lr-ui-table-button-group-column-selector-container' },
	        React.createElement(
	          'div',
	          { className: 'lr-ui-table-button-group-container' },
	          headerButtonGroup
	        ),
	        React.createElement(
	          'div',
	          { className: 'lr-ui-table-column-selector-container' },
	          React.createElement(_uiDropdown2.default, {
	            title: React.createElement(_uiIcon2.default, { icon: 'admin', color: 'base-green', dimensions: [22, 22] }),
	            options: dropdownOptions,
	            tooltipPosition: "right",
	            hideCaret: true
	          })
	        )
	      ),
	      this.state.detailViewOpen ? this.getDetailView() : null
	    );
	  },
	  getRows: function getRows() {
	    var _this2 = this;
	
	    var _props6 = this.props,
	        loadMoreElements = _props6.loadMoreElements,
	        hasMoreElements = _props6.hasMoreElements,
	        elements = _props6.elements,
	        selectedRows = _props6.selectedRows,
	        expandedRows = _props6.expandedRows,
	        handleCheckboxChange = _props6.handleCheckboxChange,
	        showCheckboxes = _props6.showCheckboxes,
	        haveChildren = _props6.haveChildren,
	        columnOrder = _props6.columnOrder,
	        hideDetail = _props6.hideDetail,
	        toggleChildren = _props6.toggleChildren,
	        columnsToShow = _props6.columnsToShow,
	        customFirstRow = _props6.customFirstRow,
	        showCustomFirstRow = _props6.showCustomFirstRow,
	        elementKeyMap = _props6.elementKeyMap,
	        childComponent = _props6.childComponent,
	        _props6$tooltipOnOver = _props6.tooltipOnOverflow,
	        tooltipOnOverflow = _props6$tooltipOnOver === undefined ? true : _props6$tooltipOnOver;
	
	
	    if (this.state.detailViewElement) {
	      var detailedElement = this.state.detailViewElement.id;
	    } else {
	      detailedElement = null;
	    }
	
	    return React.createElement(
	      'div',
	      { ref: function ref(rowContainer) {
	          _this2.rowContainer = rowContainer;_this2.addRowContainerScrollListener();
	        }, className: 'lr-ui-table-row-container', style: { width: this.containerWidth, height: '600px' } },
	      showCustomFirstRow ? customFirstRow : null,
	      React.createElement(
	        _reactInfiniteScroller2.default,
	        {
	          pageStart: 0,
	          loadMore: loadMoreElements,
	          hasMore: hasMoreElements,
	          loader: React.createElement(
	            'div',
	            { style: { textAlign: 'center', height: '200px' } },
	            React.createElement(_uiLoadingComponent2.default, { type: 'loading' })
	          ),
	          useWindow: false
	        },
	        _.map(elements, function (element, rowNum) {
	          var rowSelected = _this2.selectedRowsHash[element.id];
	          var showChild = _.contains(expandedRows, element.id);
	          return React.createElement(
	            'div',
	            { onClick: showCheckboxes ? _this2.handleRowClick.bind(null, element, !rowSelected) : null, key: rowNum, className: cn('lr-ui-table-row', { 'selected': rowSelected }, { 'detailed': detailedElement === element.id }) },
	            React.createElement(
	              'div',
	              { className: 'lr-ui-table-row-subcomponent-container' },
	              showCheckboxes ? React.createElement(
	                'div',
	                { className: 'lr-ui-table-checkbox-container' },
	                React.createElement(_uiCheckbox2.default, { checked: rowSelected, value: element.id, handleChange: _this2.handleCheckboxClick.bind(null, element, !rowSelected) })
	              ) : null,
	              haveChildren ? React.createElement(
	                'span',
	                { className: 'lr-ui-table-caret-container' },
	                React.createElement(_uiIcon2.default, { onClick: function onClick(e) {
	                    e.stopPropagation();toggleChildren(element.id);
	                  },
	                  icon: showChild ? 'caret-down' : 'caret-right',
	                  color: showChild ? 'base-green' : 'sidebar-dark',
	                  dimensions: [10, 10] })
	              ) : null,
	              _.map(columnOrder, function (column, colNum) {
	                if (_.contains(columnsToShow, column)) {
	                  var columnWidth = Math.round(elementKeyMap[column].width / _this2.totalWidth * 92.0);
	                  var styleWidth = columnWidth + "%";
	                  var key = column + '-' + rowNum;
	
	                  var tooltipText = null;
	                  if (tooltipOnOverflow) {
	                    tooltipText = elementKeyMap[column].tooltipDisplay ? elementKeyMap[column].tooltipDisplay(element[column], element) : element[column];
	                  }
	
	                  return React.createElement(
	                    'div',
	                    { id: key, key: colNum, className: 'lr-ui-table-row-subcomponent', style: elementKeyMap[column].justification ? { textAlign: elementKeyMap[column].justification, width: styleWidth } : { width: styleWidth }, 'data-tip': tooltipText, 'data-for': 'uiTableRowTooltip' },
	                    elementKeyMap[column].display ? elementKeyMap[column].display(element[column], element) : React.createElement(
	                      'span',
	                      null,
	                      element[column]
	                    )
	                  );
	                }
	              })
	            ),
	            !hideDetail ? React.createElement(
	              'div',
	              { className: 'ellipsis-holder', onClick: function onClick(e) {
	                  e.stopPropagation();_this2.openDetailView(element);
	                } },
	              React.createElement(_uiIcon2.default, { icon: 'ellipses', dimensions: [18, 5] })
	            ) : null,
	            showChild ? childComponent(element) : null
	          );
	        })
	      )
	    );
	  },
	  handleCheckboxClick: function handleCheckboxClick(element) {
	    var selected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	
	    this.props.handleCheckboxChange(element.id, selected);
	  },
	  handleRowClick: function handleRowClick(element) {
	    var selected = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
	
	    if (this.state.detailViewOpen) {
	      this.setState({
	        detailViewElement: element
	      });
	    } else {
	      this.props.handleCheckboxChange(element.id, selected);
	    }
	  },
	  addRowContainerScrollListener: function addRowContainerScrollListener() {
	    if (this.rowContainer) {
	      this.rowContainer.addEventListener('scroll', this.handleScroll);
	      this.scrollListener = true;
	    };
	  },
	  handleScroll: function handleScroll() {
	    if (this.rowContainer.scrollTop === 0) {
	      this.setState({
	        hideScrollToTop: true
	      });
	    } else {
	      this.setState({
	        hideScrollToTop: false
	      });
	    }
	  }
	});
	
	exports.default = UiTable;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(6), __webpack_require__(9)))

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;
	  };
	}();
	
	var _react = __webpack_require__(7);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(13);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	function _interopRequireDefault(obj) {
	  return obj && obj.__esModule ? obj : { default: obj };
	}
	
	function _objectWithoutProperties(obj, keys) {
	  var target = {};for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];
	  }return target;
	}
	
	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}
	
	function _possibleConstructorReturn(self, call) {
	  if (!self) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }return call && (typeof call === "object" || typeof call === "function") ? call : self;
	}
	
	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
	  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
	}
	
	function topPosition(domElt) {
	  if (!domElt) {
	    return 0;
	  }
	  return domElt.offsetTop + topPosition(domElt.offsetParent);
	}
	
	var InfiniteScroll = function (_React$Component) {
	  _inherits(InfiniteScroll, _React$Component);
	
	  function InfiniteScroll(props) {
	    _classCallCheck(this, InfiniteScroll);
	
	    var _this = _possibleConstructorReturn(this, (InfiniteScroll.__proto__ || Object.getPrototypeOf(InfiniteScroll)).call(this, props));
	
	    _this.scrollListener = _this.scrollListener.bind(_this);
	    return _this;
	  }
	
	  _createClass(InfiniteScroll, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.pageLoaded = this.props.pageStart;
	      this.attachScrollListener();
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      this.attachScrollListener();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var children = _props.children;
	      var hasMore = _props.hasMore;
	      var loader = _props.loader;
	      var loadMore = _props.loadMore;
	      var pageStart = _props.pageStart;
	      var threshold = _props.threshold;
	      var useWindow = _props.useWindow;
	
	      var props = _objectWithoutProperties(_props, ['children', 'hasMore', 'loader', 'loadMore', 'pageStart', 'threshold', 'useWindow']);
	
	      return _react2.default.DOM.div(props, children, hasMore && (loader || this._defaultLoader));
	    }
	  }, {
	    key: 'scrollListener',
	    value: function scrollListener() {
	      var el = _reactDom2.default.findDOMNode(this);
	      var scrollEl = window;
	
	      var offset;
	      if (this.props.useWindow == true) {
	        var scrollTop = scrollEl.pageYOffset !== undefined ? scrollEl.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;
	        offset = topPosition(el) + el.offsetHeight - scrollTop - window.innerHeight;
	      } else {
	        offset = el.scrollHeight - el.parentNode.scrollTop - el.parentNode.clientHeight;
	      }
	
	      if (offset < Number(this.props.threshold)) {
	        this.detachScrollListener();
	        // call loadMore after detachScrollListener to allow
	        // for non-async loadMore functions
	        this.props.loadMore(this.pageLoaded += 1);
	      }
	    }
	  }, {
	    key: 'attachScrollListener',
	    value: function attachScrollListener() {
	      if (!this.props.hasMore) {
	        return;
	      }
	
	      var scrollEl = window;
	      if (this.props.useWindow == false) {
	        scrollEl = _reactDom2.default.findDOMNode(this).parentNode;
	      }
	
	      scrollEl.addEventListener('scroll', this.scrollListener);
	      scrollEl.addEventListener('resize', this.scrollListener);
	      this.scrollListener();
	    }
	  }, {
	    key: 'detachScrollListener',
	    value: function detachScrollListener() {
	      var scrollEl = window;
	      if (this.props.useWindow == false) {
	        scrollEl = _reactDom2.default.findDOMNode(this).parentNode;
	      }
	
	      scrollEl.removeEventListener('scroll', this.scrollListener);
	      scrollEl.removeEventListener('resize', this.scrollListener);
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.detachScrollListener();
	    }
	  }, {
	    key: 'setDefaultLoader',
	    value: function setDefaultLoader(loader) {
	      this._defaultLoader = loader;
	    }
	  }]);
	
	  return InfiniteScroll;
	}(_react2.default.Component);
	
	exports.default = InfiniteScroll;
	
	InfiniteScroll.PropTypes = {
	  pageStart: _react2.default.PropTypes.number,
	  hasMore: _react2.default.PropTypes.bool,
	  loadMore: _react2.default.PropTypes.func.isRequired,
	  threshold: _react2.default.PropTypes.number,
	  useWindow: _react2.default.PropTypes.bool
	};
	InfiniteScroll.defaultProps = {
	  pageStart: 0,
	  hasMore: false,
	  loadMore: function loadMore() {},
	  threshold: 250,
	  useWindow: true
	};
	module.exports = exports['default'];

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React, _) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _uiIcon = __webpack_require__(18);
	
	var _uiIcon2 = _interopRequireDefault(_uiIcon);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var docs = {
	  title: "UiSplitButton",
	  propDetails: [{ title: "label",
	    required: true,
	    type: "string",
	    description: "The label of the button." }, { title: "handleButtonClick",
	    required: true,
	    type: "function",
	    description: "onClick function for the main button." }, { title: "dropDownOptions",
	    required: true,
	    type: "array",
	    description: "Array of the options for the dropdown. An element can be a string (title of the menu option) or an object with fields text, value, and handleChange. handleChange is a function that takes text and value as arguments." }, { title: "handleChangeDefault",
	    required: false,
	    type: "function",
	    description: "Default function called when a dropdown option does not have a handleChange function." }]
	};
	/* User provides:
	  * Props:
	  *  label: label of the button
	  *  handleButtonClick: onClick function for the button
	  *  dropDownOptions: array of strings and/or hashes for the dropdown
	  *    - hashes of the form: { "text" (required), "value" (optional string),
	  *      "handleChange" (optional function) }
	  *
	  *    for example:
	  *    const dropDownOptions = [ 'a',
	  *                      { text: 'b', value: 'b-value' },
	  *                      { text: 'c', handleChange: x => console.log(x + ' -- custom callback') }
	  *                    ];
	  *  handleChangeDefault: function (required when one or more options does not
	  *    have a "handleChange" function, accepts text and the option value as arguments)
	*/
	
	function UiSplitButtonMenuItem(props) {
	  var className = props.className,
	      optionValue = props.optionValue,
	      optionOnClick = props.optionOnClick,
	      menuText = props.menuText,
	      key = props.key,
	      toggleMenu = props.toggleMenu;
	
	
	  function optionClicked() {
	    toggleMenu();
	    return optionOnClick(menuText, optionValue);
	  }
	
	  return React.createElement(
	    "div",
	    { className: className, key: key, optionValue: optionValue, onClick: optionClicked },
	    menuText
	  );
	}
	
	var UiSplitButton = React.createClass({
	  displayName: "UiSplitButton",
	  getInitialState: function getInitialState() {
	    return { open: false };
	  },
	  render: function render() {
	    var _this = this;
	
	    var _props = this.props,
	        label = _props.label,
	        handleButtonClick = _props.handleButtonClick,
	        dropDownOptions = _props.dropDownOptions,
	        handleChangeDefault = _props.handleChangeDefault;
	
	    var menu = void 0;
	    var menuItems = void 0;
	    var caretIcon = void 0;
	
	    if (this.state.open) {
	      (function () {
	        caretIcon = 'caret-up';
	        var menuText = void 0;
	        var optionOnClick = void 0;
	        var optionValue = void 0;
	
	        menuItems = _.map(dropDownOptions, function (option) {
	          menuText = option.text ? option.text : option;
	          optionValue = option.value;
	          optionOnClick = option.handleChange ? option.handleChange : handleChangeDefault;
	
	          return React.createElement(UiSplitButtonMenuItem, {
	            key: menuText,
	            className: "lr-ui-split-button-menu-option",
	            optionValue: optionValue,
	            optionOnClick: optionOnClick,
	            toggleMenu: _this.toggleMenu,
	            menuText: menuText
	          });
	        });
	
	        menu = React.createElement(
	          "div",
	          { className: "lr-ui-split-button-menu" },
	          menuItems
	        );
	      })();
	    } else {
	      caretIcon = 'caret-down';
	    }
	
	    return React.createElement(
	      "div",
	      { className: "lr-ui-split-button-container", onMouseLeave: this.closeOnMouseLeave },
	      React.createElement(
	        "div",
	        { className: "lr-ui-split-button-subcontainer" },
	        React.createElement(
	          "div",
	          { className: "button lr-ui-split-button", onClick: handleButtonClick },
	          label
	        ),
	        React.createElement(
	          "div",
	          { className: "lr-ui-split-button-line-container" },
	          React.createElement("div", { className: "lr-ui-split-button-line" })
	        ),
	        React.createElement(
	          "div",
	          { className: "button lr-ui-split-dropdown-button", onClick: this.toggleMenu },
	          React.createElement(_uiIcon2.default, { icon: caretIcon, dimensions: [15, 15], color: "white" })
	        )
	      ),
	      menu
	    );
	  },
	  closeOnMouseLeave: function closeOnMouseLeave() {
	    if (this.state.open) {
	      this.toggleMenu();
	    }
	  },
	  toggleMenu: function toggleMenu() {
	    this.setState({ open: !this.state.open });
	  }
	});
	
	exports.default = UiSplitButton;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(6)))

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(React, _) {"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.docs = undefined;
	
	var _uiProgressMeter = __webpack_require__(228);
	
	var _uiProgressMeter2 = _interopRequireDefault(_uiProgressMeter);
	
	var _uiWizardControls = __webpack_require__(232);
	
	var _uiWizardControls2 = _interopRequireDefault(_uiWizardControls);
	
	var _reactAddonsCssTransitionGroup = __webpack_require__(236);
	
	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var docs = {
	  title: "UiWizard",
	  propDetails: [{ title: "steps",
	    required: true,
	    type: "array",
	    description: "Array of js objects containing step information.\n      Each step must have: name, component.\n      Optional attributes for each step are: nextCallback, canProceed, canRecede." }, { title: "showNavigation",
	    required: false,
	    type: "boolean",
	    description: "A function to dictate whether or not to show UiWizardControls. Default is true." }, { title: "cancel",
	    required: false,
	    type: "function",
	    description: "A function to handle cancel in the UiWizardControls. Required if showNavigation is true." }, { title: "start",
	    required: false,
	    type: "integer",
	    description: "Optional starting step" }]
	};
	
	var UiWizard = React.createClass({
	  displayName: "UiWizard",
	  getDefaultProps: function getDefaultProps() {
	    return {
	      showNavigation: true
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      compState: this.props.start || 0
	    };
	  },
	  next: function next(currentStep) {
	    currentStep.nextCallback && currentStep.nextCallback();
	    if (this.state.compState < this.props.steps.length) {
	      this.setState({ compState: this.state.compState + 1 });
	    }
	  },
	  previous: function previous() {
	    if (this.state.compState > 0) {
	      this.setState({ compState: this.state.compState - 1 });
	    }
	  },
	  showNext: function showNext(currentStep) {
	    if (currentStep > 0 && currentStep != this.props.steps.length - 1) {
	      return true;
	    } else if (currentStep == 0) {
	      return true;
	    } else {
	      return false;
	    }
	  },
	  showPrevious: function showPrevious(currentStep) {
	    if (currentStep > 0 && currentStep != this.props.steps.length - 1) {
	      return true;
	    } else if (currentStep == 0) {
	      return false;
	    } else {
	      return true;
	    }
	  },
	  render: function render() {
	    var _this = this;
	
	    var currentStep = this.props.steps[this.state.compState];
	    var customButton = currentStep.customButton;
	    var nextDisabled = currentStep.canProceed ? !currentStep.canProceed() : false;
	    var previousDisabled = currentStep.canRecede ? !currentStep.canRecede() : false;
	    // TODO jedgcomb: make onclick next callback thing less shitty
	    return React.createElement(
	      "div",
	      null,
	      React.createElement(
	        "div",
	        { className: "wizard-tracker" },
	        React.createElement(
	          "ol",
	          { className: "progtrckr" },
	          this.renderSteps()
	        )
	      ),
	      React.createElement(
	        "div",
	        { className: "wizard-body" },
	        React.createElement(
	          _reactAddonsCssTransitionGroup2.default,
	          {
	            transitionName: "wizard-step",
	            transitionAppear: true,
	            transitionAppearTimeout: 1000,
	            transitionEnterTimeout: 1000,
	            transitionLeaveTimeout: 1000 },
	          React.createElement(
	            "div",
	            { key: this.state.compState },
	            currentStep.component
	          )
	        )
	      ),
	      React.createElement(
	        "div",
	        { className: "wizard-footer" },
	        React.createElement(
	          "div",
	          { style: this.props.showNavigation ? {} : { display: 'none' } },
	          React.createElement(_uiWizardControls2.default, {
	            buttonAttribs: {
	              left: {
	                handleChange: this.previous,
	                disabled: previousDisabled || !this.showPrevious(this.state.compState)
	              },
	              cancel: {
	                handleChange: this.props.cancel
	              },
	              right: {
	                handleChange: function handleChange() {
	                  return _this.next(currentStep);
	                },
	                disabled: nextDisabled || !this.showNext(this.state.compState)
	              }
	            }
	          })
	        )
	      )
	    );
	  },
	  renderSteps: function renderSteps() {
	    var steps = _.map(this.props.steps, function (step) {
	      return { name: step.name, overrideView: step.overrideView, customStyle: step.customStyle };
	    });
	    return React.createElement(_uiProgressMeter2.default, {
	      steps: steps,
	      currentPosition: this.state.compState });
	  }
	});
	
	exports.default = UiWizard;
	exports.docs = docs;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7), __webpack_require__(6)))

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,