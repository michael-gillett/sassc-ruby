const docs = {
  title: "UiProgressMeter",
  propDetails: [
    { title: "steps",
      required: true,
      type: "array",
      description: "An array which includes objects that represent each step - each object must have a property name which is the name of the step. Additionally each object can take an overrideView (optional renderer overriding the step number) and a customStyle (object to inline-style the text)." },
    { title: "currentPosition",
      required: true,
      type: "integer",
      description: "The current step you are at, corresponding to an index in the array." }
  ]
}

export default function UiProgressMeter(props) {
  // User provides:
  //  - an array which inludes objects that represent each step (steps) : array
  //    + each object will have the following properties:
  //      - name: the name of the step
  //      - overrideView: a view that is passed in that will override the step number
  //      - customStyle: a hash which is used to inline style the step name
  //  - the current step that you are at, corresponding to an index in the array (currentPosition) : integer

  const { steps, currentPosition } = props;

  const getProgressClassName = (i) => {
    if (i < currentPosition) {
      return 'lr-ui-progress-meter-step-done';
    } else if (i == currentPosition) {
      return 'lr-ui-progress-meter-step-doing';
    } else {
      return 'lr-ui-progress-meter-step-todo';
    }
  };

  return (
    <div className='lr-ui-progress-meter-container'>
      <ol className='lr-ui-progress-meter'>
        {
          _.map(steps, (step, index) => {
            return (
              <li className={getProgressClassName(index)} key={index} value={index}>
                <div className={getProgressClassName(index) + "-box"} />
                <div className="step">
                  { step.overrideView ? <div className="custom-view">{step.overrideView}</div> : <div className="step-number">{index + 1}</div> }
                  { step.customStyle ? <div className="step-name" style={step.customStyle}>{step.name}</div> : <div className="step-name">{step.name}</div> }
                </div>
              </li>
            );
          })
        }
      </ol>
    </div>
  );
};


export { docs };
