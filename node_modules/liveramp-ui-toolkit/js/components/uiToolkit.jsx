var Select = require('react-select');
var TestForm = require('components/testForm.jsx');
import UiTitle from "components/uiTitle.jsx";
import UiHeader from "components/uiHeader.jsx";
import UiInput from "components/uiInput.jsx";
import UiSearch from "components/uiSearch.jsx";
import UiLoadingComponent from "components/uiLoadingComponent.jsx";
import UiLabel from "components/uiLabel.jsx";
import UiSelect from "components/uiSelect.jsx";
import UiFilterGroup from "components/uiFilterGroup.jsx";
import UiSlider from "components/uiSlider.jsx";
import UiProgressMeter from "components/uiProgressMeter.jsx";
import UiTabbedView from "components/uiTabbedView.jsx";
import UiRadioButton from "components/uiRadioButton.jsx";
import UiRadioButtonGroup from "components/uiRadioButtonGroup.jsx";
import UiIdentifierSelect from "components/uiIdentifierSelect.jsx";
import UiCheckbox from "components/uiCheckbox.jsx";
import UiIcon from "components/uiIcon.jsx";
import UiDropdown from "components/uiDropdown.jsx";
import UiAlert from 'components/uiAlert.jsx';
import UiCollapse from 'components/uiCollapse.jsx';
import UiDocsDetail from 'components/uiDocsDetail.jsx';
import CSSTransitionGroup from 'react-addons-css-transition-group';

const dropdownOptions = [ 'Option 1',
  { text: 'Option 2', border: true, value: 'b-value' },
  { text: 'Option 3', handleChange: x => console.log(x + ' -- custom callback') }
];

const sliderMap = {
  1: "Individual",
  2: "Household",
  3: "City",
  4: "State",
  5: "Country",
  6: "Continent",
  7: "Hemisphere",
  8: "Planet",
  9: "Solar System",
  10: "Galaxy"
};

const progressMeterSteps = [
  {name: "Wake up"},
  {name: "Commute"},
  {name: "Work"},
  {name: "Happy Hour"}
];

const blurb = <img src="http://cdn3-www.comingsoon.net/assets/uploads/2016/03/hasselhoffbaywatch.jpg" alt="Smiley face" height="120"></img>;

const filterGroupList = [
  {
    name: "Continents",
    selectOptions: [
      {
        label: "North America",
        value: 1
      },
      {
        label: "South America",
        value: 2
      },
      {
        label: "Africa",
        value: 3
      },
      {
        label: "Australia",
        value: 4
      },
      {
        label: "Asia",
        value: 5
      },
      {
        label: "Antarctica",
        value: 6
      },
      {
        label: "Europe",
        value: 7
      }
    ],
    isMulti: true
  },
  {
    name: "Apex Engineers",
    selectOptions: [
      {
        label: "Parker",
        value: 1
      },
      {
        label: "Alfonso",
        value: 2
      },
      {
        label: "Tevy",
        value: 3
      },
      {
        label: "Pardha",
        value: 4
      },
      {
        label: "Uncle Charles",
        value: 5
      },
      {
        label: "Young Charles",
        value: 6
      },
      {
        label: "Josh",
        value: 7
      }
    ],
    isMulti: false
  }
];

const selectOptions = [
  {
    label: "Hillary Clinton",
    value: 1
  },
  {
    label: "Donald Trump",
    value: 2
  }
];

const multiSelectOptions = [
  {
    label: "Noc Noc",
    value: 1
  },
  {
    label: "Chelsea Place",
    value: 2
  },
    {
    label: "The Tonga Room",
    value: 3
  },
  {
    label: "Local Edition",
    value: 4
  },
    {
    label: "El Techo",
    value: 5
  },
  {
    label: "Wait, are these bars or phone booths?",
    value: 6
  }
];

const labelSelectOptions = {
  name: "day",
  selectOptions: [{label: "day", value: 1}, {label: "week", value: 2}, {label: "month", value: 3}],
  isMulti: false,
  allowCreate: false
};

const radioButtonArray = [
  {label: "iOS", value: "0", disabled: false},
  {label: "Android", value: "1", disabled: false},
  {label: "Windows", value: "2", disabled: true}
];

const UiToolkit = React.createClass({

  getInitialState() {
    return {
      titleSwitchOn: true,

      inputValue: "",

      sliderValue: 1,

      selectedByFilterName: {
        'Continents': null,
        'Apex Engineers': null
      },

      selectedField: null,

      multiSelect: null,

      selectedWithCreateField: null,

      labelWithSwitchOn: true,

      labelSelectedField: null,

      selectedRadioButton: null,

      radioButtonActivated: false,

      checkboxChecked: false,

      showAlert: false,

      alertType: "",

      alertMessage: "",

      inputValueFirst: "",

      valid: true,

      populated: false,

      includedIdentifiers: ["apple", "android", "phone"],

      disabledIdentifiers: ["unidentified", "phone"],

      showDocsDetail: false,

      docsDetailComponent: null
    }
  },

  render: function() {

    const identifiers = [
      {
        checked: this.state.includedIdentifiers.includes("apple"),
        disabled: this.state.disabledIdentifiers.includes("apple"),
        value: "apple",
        icon: "apple"
      },
      {
        checked: this.state.includedIdentifiers.includes("android"),
        disabled: this.state.disabledIdentifiers.includes("android"),
        value: "android",
        icon: "android"
      },
      {
        checked: this.state.includedIdentifiers.includes("unidentified"),
        disabled: this.state.disabledIdentifiers.includes("unidentified"),
        value: "unidentified",
        icon: "user"
      },
      {
        checked: this.state.includedIdentifiers.includes("postal"),
        disabled: this.state.disabledIdentifiers.includes("postal"),
        value: "postal",
        icon: "postal"
      },
      {
        checked: this.state.includedIdentifiers.includes("phone"),
        disabled: this.state.disabledIdentifiers.includes("phone"),
        value: "phone",
        icon: "phone"
      },
    ];

    return (
  <div id="wrapper" onClick={this.closeDocsDetail} >
    <CSSTransitionGroup
      transitionName='lr-ui-toolkit-docs-detail'
      transitionAppear={true}
      transitionAppearTimeout={0}
      transitionEnter={true}
      transitionEnterTimeout={0}
      transitionLeave={true}
      transitionLeaveTimeout={0} >
      { this.state.showDocsDetail ?
        <div className="lr-ui-toolkit-docs-detail" onClick={(e) => {e.stopPropagation();}}>
            <UiDocsDetail
              component={this.state.docsDetailComponent}
              handleChange={() => {this.closeDocsDetail();}}
              />
        </div> : null}
    </CSSTransitionGroup>
    <nav className="sidebar">
      <ul className="main-menu">

        <li><a className="parent-nav" href="#hello" id="nav-close"></a></li>
        <li><a className="parent-nav" href="#getting-started" id="getting-started">Getting Started</a></li>
        <li><a className="parent-nav" href="#base-styles-section">Base Styles</a>
          <ul className="sub-list">
              <li><a className="sub-nav" href="#colors">Colors</a></li>
              <li><a className="sub-nav" href="#fonts">Fonts</a></li>
              <li><a className="sub-nav" href="#UiHeader">UiHeader</a></li>
              <li><a className="sub-nav" href="#UiTitle">UiTitle</a></li>
          </ul>
        </li>
        <li><a className="parent-nav" href="#grid-section">Grid</a></li>
        <li><a className="parent-nav" href="#buttons-section">Buttons</a>
          <ul className="sub-list">
              <li><a className="sub-nav" href="#buttons">Buttons</a></li>
              <li><a className="sub-nav" href="#menu-button">Menu Button</a></li>
          </ul>
        </li>
        <li><a className="parent-nav" href="#icons-section">Icons</a>
          <ul className="sub-list">
            <li><a className="sub-nav" href="#UiIcon">UiIcon</a></li>
          </ul>
        </li>
        <li><a className="parent-nav" href="#input-forms-section">Input forms</a>
          <ul className="sub-list">
              <li><a className="sub-nav" href="#UiInput">UiInput</a></li>
              <li><a className="sub-nav" href="#UiSearch">UiSearch</a></li>
              <li><a className="sub-nav" href="#UiSelect">UiSelect</a></li>
              <li><a className="sub-nav" href="#UiLabel">UiLabel</a></li>
              {/*<li className="sub-nav"><a href="#login-forms">Login forms<span className="icon"></span></a></li>*/}
              <li><a className="sub-nav" href="#UiCheckbox">UiCheckbox</a></li>
              <li><a className="sub-nav" href="#UiRadioButton">UiRadioButton</a></li>
              <li><a className="sub-nav" href="#UiRadioButtonGroup">UiRadioButtonGroup</a></li>
              <li><a className="sub-nav" href="#UiIdentifierSelect">UiIdentifierSelect</a></li>
              <li><a className="sub-nav" href="#UiSlider">UiSlider</a></li>
              <li><a className="sub-nav" href="#UiDropdown">UiDropdown</a></li>
          </ul>
        </li>
        <li><a className="parent-nav" href="#controls-section">Controls</a>
          <ul className="sub-list">
              <li><a className="sub-nav" href="#UiFilterGroup">UiFilterGroup</a></li>
              <li><a className="sub-nav" href="#UiCollapse">UiCollapse</a></li>
              <li><a className="sub-nav" href="#UiTabbedView">UiTabbedView</a></li>
          </ul>
        </li>
        <li><a className="parent-nav" href="#stuff-section">Stuff</a>
          <ul className="sub-list">
              <li><a className="sub-nav" href="#UiAlert">UiAlert</a></li>
              <li><a className="sub-nav" href="#UiProgressMeter">UiProgressMeter</a></li>
              <li><a className="sub-nav" href="#UiLoadingComponent">UiLoadingComponent</a></li>
          </ul>
        </li>
      </ul>
    </nav>

    <div className="wrapper">
      <div className="menu">
          <a id="nav-expander" className="nav-expander fixed">
            <button className="hamburger hamburger-morph" id="hamburger-menu">
              <span>toggle menu</span>
            </button>
          </a>
      </div>
      <div id="git-link">
          <a href="https://git.liveramp.net/RailsRepos/ui_toolkit" target="_blank">
            Get me on Git.
          </a>
      </div>

      <div className="container" id="main-section">

        <header>
          <div className="container clearfix">
            <div className="doc-header">
              <h1>Hi, I&#39;m Kodos.</h1>
              <h2>Your friendly neighborhood UI toolkit.</h2>
              <div id="scroll-prompt" className="animated prompt"></div>
            </div>
          </div>
        </header>

        <section id="getting-started">
          <div className="section-header">
            <h1>Getting Started</h1>
          </div>
          <div className="row">
            <div className="col-lg-12">
              <div className="setup-step step-1">
                <div className="setup-step-number">1</div>
                <div className="setup-step-name">
                  <h2>Set registry</h2>
                  <p>npm set registry http{"://"}npm-repository.liveramp.net:4873</p>
                </div>
              </div>
              <div className="setup-step step-2">
                <div className="setup-step-number">2</div>
                <div className="setup-step-name">
                  <h2>Install</h2>
                  <p>npm install liveramp-ui-toolkit</p>
                </div>
              </div>
              <div className="setup-step step-3">
                <div className="setup-step-number">3</div>
                <div className="setup-step-name">
                  <h2>Import Components</h2>
                  <p>import {"{"} UiHeader, UiTitle, UiProgressMeter {"}"} from ‘liveramp-ui-toolkit’;</p>
                </div>
              </div>
            </div>
          </div>
        </section>

        <section id="base-styles-section" style={{'width' : '100%'}}>
          <div className="section-header" id="base-styles-header">
            <h1>Base Styles</h1>
          </div>
          <div className="row" style={{'margin' : '0'}}>
            <div className="subsection-header" id="primary-colors">
              <h2>Primary Colors</h2>
            </div>
            <div className="col-sm-1"></div>
            <div className="col-sm-2">
              <div className="color color--background-color">
                <p className="color-var" style={{'color' : '#A1A1A1'}}>$background-color</p>
                <p className="color-code" style={{'color' : '#A1A1A1'}}>#F5F5F5</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--medium-gray">
                <p className="color-var">$medium-gray</p>
                <p className="color-code">#D8D8D8</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--header-gray">
                <p className="color-var">$header-gray</p>
                <p className="color-code">#A1A1A1</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--sidebar-light">
                <p className="color-var">$sidebar-light</p>
                <p className="color-code">#333</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--sidebar-dark">
                <p className="color-var">$sidebar-dark</p>
                <p className="color-code">#222</p>
              </div>
            </div>
            <div className="col-sm-1"></div>
          </div>
          <div className="row subsection" style={{'margin' : '0'}}>
            <div className="col-sm-1"></div>
            <div className="col-sm-2">
              <div className="color color--white" style={{'border' : '1px solid #f5f5f5'}}>
                <p className="color-var" style={{'color' : '#A1A1A1'}}>$white</p>
                <p className="color-code" style={{'color' : '#A1A1A1'}}>#FFFFFF</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--light-green">
                <p className="color-var">$light-green</p>
                <p className="color-code">#C9E4C5</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--base-green">
                <p className="color-var">$base-green</p>
                <p className="color-code">#70C262</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--hover-green">
                <p className="color-var">$hover-green</p>
                <p className="color-code">#53AE43</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--select-green">
                <p className="color-var">$select-green</p>
                <p className="color-code">#418935</p>
              </div>
            </div>
            <div className="col-sm-1"></div>
          </div>

          <div className="row" style={{'margin' : '0'}}>
            <div className="subsection-header" id="secondary-colors">
              <h2>Secondary Colors</h2>
            </div>
            <div className="col-sm-1"></div>
            <div className="col-sm-2">
              <div className="color color--alert-red">
                <p className="color-var">$alert-red</p>
                <p className="color-code">#D0021B</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--alert-yellow">
                <p className="color-var">$alert-yellow</p>
                <p className="color-code">#F8E71C</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--alert-green">
                <p className="color-var">$alert-green</p>
                <p className="color-code">#34B234</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--alert-blue">
                <p className="color-var">$alert-blue</p>
                <p className="color-code">#2492F2</p>
              </div>
            </div>
            <div className="col-sm-2">
              <div className="color color--alert-orange">
                <p className="color-var">$alert-orange</p>
                <p className="color-code">#FA8D29</p>
              </div>
            </div>
            <div className="col-sm-1"></div>
          </div>
          </section>

          <section id="base-styles-section" style={{'paddingTop' : '0'}}>
          <div className="row subsection">
            <div className="col-md-3">
              <div className="subsection-header" id="fonts" style={{'marginTop' : '20px'}}>
                <h2>Fonts</h2>
              </div>
            </div>
            <div className="col-md-9">
              <table id="headers-table" style={{'textAlign' : 'left'}}>
                <tbody>
                  <tr>
                    <td><h1>h1</h1></td>
                    <td><h1>Flexo is used {'for'} h1 headers</h1></td>
                  </tr>
                  <tr>
                    <td><h2>h2</h2></td>
                    <td><h2>Open Sans</h2></td>
                  </tr>
                  <tr>
                    <td><h3>h3</h3></td>
                    <td><h3>is used</h3></td>
                  </tr>
                  <tr>
                    <td><h4>h4</h4></td>
                    <td><h4>{'for'} all</h4></td>
                  </tr>
                  <tr>
                    <td><h5>h5</h5></td>
                    <td><h5>other headers.</h5></td>
                  </tr>
                </tbody>
              </table>
              <div>
                <h2>Open Sans is also used {'for'} everything {'else'}.</h2>
                <p>Market share B2C disrupt social buttons content curation. Intuitive seed money thought leadership. Ideation leading the pack brand voice integrated flat design synergies. Conversation marketing goals for engagement wearables drone visibility SEO hashtag. Funnel trending buzzword snackable content conversation marketing. Seamless chatvertizing target influencer. Dynamic content disrupt ROI seed money. Click-through rate hackathon user-friendly emerging buzzword robust. CPM B2B CRM dashboard sticky content.</p>
            </div>
            </div>
          </div>

          <div className="row subsection" id="UiHeader">
            <div className="col-md-3">
              <div className="subsection-header" style={{'marginTop' : '30px'}}>
                <h2>UiHeader</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiHeader");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="example-header">
                <UiHeader
                  textTitle={"Look Familiar?"}
                  helpText={"This is where the super helpful help text goes."}
                  />
              </div>
              <div className="example-header-code">
<pre><code>
<span>&#60;UiHeader</span>{'\n'}
<span>textTitle={'{'}"Look Familiar?"{'}'}</span>{'\n'}
<span>helpText={'{'}"This is where the super helpful help text goes."{'}'}</span>{'\n'}
<span>&#47;&#62;</span>
</code></pre>
              </div>
            </div>
          </div>

          <div className="row subsection" id="UiTitle">
            <div className="col-md-3">
              <div className="subsection-header" style={{'marginTop' : '15px'}}>
                <h2>UiTitle</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiTitle");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="example-title">
                <UiTitle
                  textTitle={ "This is a Title" }
                  date={"07/29/16"}
                  showSwitch={true}
                  switchOn={this.state.titleSwitchOn}
                  handleChange={this.toggleTitle}
                  />
              </div>
              <div className="example-title-code">
<pre><code>
<span>{'//'}Optional date and master switch</span>{'\n'}
<span>&#60;UiTitle</span>{'\n'}
<span>  textTitle={'{'}"This is a Title"{'}'}</span>{'\n'}
<span>  date={'{'}"07/29/16"{'}'}</span>{'\n'}
<span>  showSwitch={'{'}true{'}'}</span>{'\n'}
<span>  switchOn={'{'}this.state.titleSwitchOn{'}'}</span>{'\n'}
<span>  handleChange={'{'}this.toggleTitle{'}'}</span>{'\n'}
<span>&#47;&#62;</span>
</code></pre>
              </div>
            </div>
          </div>

        </section>


        <section id="grid-section">
          <div className="section-header">
            <h1>Grid</h1>
          </div>
          <div className="row subsection">
            <div className="col-lg-12">
            <h4 style={{"margin": "0 0 20px 0"}}>We use a Bootstrap grid of 12 responsize columns. Xs, sm, md, and lg columns will <a href="http://getbootstrap.com/css/#grid">stack at different breakpoints.</a> We usually use md and lg. Resize your screen to see this in action.</h4>
              <div className="example-grid">
                <div className="row example-grid-row">
                  <div className="col-sm-2 example-grid-col"><h4>.col-sm-2</h4></div>
                  <div className="col-sm-2 example-grid-col"><h4>.col-sm-2</h4></div>
                  <div className="col-sm-3 example-grid-col"><h4>.col-sm-3</h4></div>
                  <div className="col-sm-5 example-grid-col"><h4>.col-sm-5</h4></div>
                </div>
                <div className="row example-grid-row">
                  <div className="col-md-4 example-grid-col"><h4>.col-md-4</h4></div>
                  <div className="col-md-4 example-grid-col"><h4>.col-md-4</h4></div>
                  <div className="col-md-4 example-grid-col"><h4>.col-md-4</h4></div>
                </div>
                <div className="row example-grid-row">
                  <div className="col-md-6 example-grid-col"><h4>.col-md-6</h4></div>
                  <div className="col-md-6 example-grid-col"><h4>.col-md-6</h4></div>
                </div>
                <div className="row example-grid-row">
                  <div className="col-lg-12 example-grid-col"><h4>.col-lg-12</h4></div>
                </div>
              </div>
            </div>
          </div>
          <div className="row subsection">
            <div className="col-md-12">
              <h4>Here&rsquo;s how to stack components to form a compound:{'\n'}</h4>
              <h4>1. If you are creating a simple stack of components, make each component a full 12 column width. If you are creating a table of components, make sure the columns add up to 12.{'\n'}</h4>
              <h4>2. Wrap the stack of components in a row.{'\n'}</h4>
              <h4>3. Wrap the compound in a div of 10-column width, offset by one column. This creates a 1 column gutter on either side of the compound.{'\n'}</h4>
              <h4>4. Wrap the compound in a row.{'\n'}</h4>
              <div className="example-grid-code">
  <pre><code>
  <span>&#60;div className="row"&#62;</span>{'\n'}
  <span>  &#60;div className="col-md-10 col-md-offset-1"&#62;</span>{'\n'}
  <span>    &#60;div className="row"&#62;</span>{'\n'}
  <span>      &#60;div className="col-md-6"&#62;Some component 1 here&#60;&#47;div&#62;</span>{'\n'}
  <span>      &#60;div className="col-md-3"&#62;Component 2&#60;&#47;div&#62;</span>{'\n'}
  <span>      &#60;div className="col-md-3"&#62;Component 3&#60;&#47;div&#62;</span>{'\n'}
  <span>    &#60;&#47;div&#62;</span>{'\n'}
  <span>  &#60;&#47;div&#62;</span>{'\n'}
  <span>&#60;&#47;div&#62;</span>{'\n'}
  </code></pre>
              </div>
            </div>
          </div>
        </section>



        <section id="buttons-section">
          <div className="section-header">
            <h1>Buttons</h1>
          </div>

          <div className="row subsection" id="buttons">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>Buttons</h2>
              </div>
            </div>
            <div className="col-md-3">
              <div className="ex-center example-buttons">
                <div className="button">Button</div>
                <div className="button" disabled="true">Button</div>
              </div>
              <div className="example-buttons-code">
                <pre><code><span>.button</span>{'\n'}
  <span>.button[disabled]</span></code></pre>
              </div>
              <div className="button-explanation">
                Use the <strong>default green button</strong> for calls to action: submit buttons, success buttons, buttons that route the user to the next step in a workflow.
              </div>
            </div>
            <div className="col-md-3">
              <div className="ex-center example-buttons">
                <div className="button open">Button</div>
                <div className="button open" disabled="true">Button</div>
              </div>
              <div className="example-buttons-code">
                <pre><code><span>.button.open</span>{'\n'}
  <span>.button.open[disabled]</span></code></pre>
              </div>
              <div className="button-explanation">
                Use <strong>open buttons</strong> for all other user options: edit buttons, filter buttons, buttons to send users emails.
              </div>
            </div>
            <div className="col-md-3">
              <div className="ex-center example-buttons">
                <div className="button dark">Button</div>
                <div className="button dark" disabled="true">Button</div>
              </div>
              <div className="example-buttons-code">
                <pre><code><span>.button.dark</span>{'\n'}
  <span>.button.dark[disabled]</span></code></pre>
              </div>
              <div className="button-explanation">
                Use <strong>dark buttons</strong> for cancel buttons, exit buttons, etc.
              </div>
            </div>
          </div>



          <div className="row subsection" id="menu-button">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>Menu Button (Hamburger)</h2>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-center example-burger">
                <a id="nav-expander" className="nav-expander fixed example-expander">
                  <button className="hamburger hamburger-morph hamburger-example">
                    <span>toggle menu</span>
                  </button>
                </a>
              </div>
              <div className="example-burger-code">
                <pre><code>
  <span>%a#nax-expander.nav-expander.fixed</span>{'\n'}
  <span>&nbsp;%button.hamburger.hamburger-morph</span>{'\n'}
  <span>&nbsp;&nbsp;%span placeholder text</span>{'\n'}
  <hr/>
  <span>{'//'}Bit of js to make this work</span>{'\n'}
<span>$("#nav-expander").on("click",function(e){'{'}</span>{'\n'}
<span>  e.preventDefault();</span>{'\n'}
<span>  $("body").toggleClass("nav-expanded");</span>{'\n'}
<span>  $(".hamburger").toggleClass("is-active");</span>{'\n'}
<span>{'}'});</span>{'\n'}
<span>$("#nav-close").on("click",function(e){'{'}</span>{'\n'}
<span>  e.preventDefault();</span>{'\n'}
<span>  $("body").removeClass("nav-expanded");</span>{'\n'}
<span>  $(".hamburger").removeClass("is-active");</span>{'\n'}
<span>{'}'});</span></code></pre>
              </div>
            </div>
          </div>
        </section>



        <section id="icons-section">
          <div className="section-header" id="UiIcon">
            <h1>Icons</h1>
          </div>
          <div className="row subsection">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiIcon</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiIcon");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-icons">
                 <p>We use a library of custom SVGs for our icons. UiIcon makes using icons easy and flexible. Just pass in the name, the size, and the toolkit color of the icon you want to use. Note you have to pass in an onClick function to make the icon "clickable". A clickable icon has hover and click states.</p>
              </div>
              <div className="ex-left example-icons-code">
<pre><code><span>&#60;UiIcon</span>{'\n'}
<span>  icon={"{"}'cancel'{"}"}</span>{'\n'}
<span>  dimensions={"{["}18, 18{"]}"}</span>{'\n'}
<span>  color="alert-red"</span>{'\n'}
<span>  onClick={"{ ()"} => {"{}"} {"}"}</span>{'\n'}
<span>&#47;&#62;</span>
</code></pre>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-md-2">
              <div className="icon-box control">
                <UiIcon icon='arrow-left' dimensions={[15, 15]} color="white" onClick={ () => {} } />
                <span>arrow-left</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box control">
                <UiIcon icon='arrow-right' dimensions={[15, 15]} color="white" onClick={ () => {} } />
                <span>arrow-right</span>
              </div>
            </div>
            <div className="col-md-2 icon">
              <div className="icon-box control">
                <UiIcon icon='check' dimensions={[15, 15]} color="white" onClick={ () => {} } />
                <span>check</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box control">
                <UiIcon icon='cancel' dimensions={[15, 15]} color="white" onClick={ () => {} } />
                <span>cancel</span>
              </div>
            </div>
            <div className="col-md-2 icon">
              <div className="icon-box control">
                <UiIcon icon='plus' dimensions={[15, 15]} color="white" onClick={ () => {} } />
                <span>plus</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box control">
                <UiIcon icon='ellipses' dimensions={[15, 15]} color="white" onClick={ () => {} } />
                <span>ellipses</span>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-md-2">
              <div className="icon-box control">
                <UiIcon icon='caret-left' dimensions={[15, 15]} color="white" onClick={ () => {} } />
                <span>caret-left</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box control">
                <UiIcon icon='caret-up' dimensions={[15, 15]} color="white" onClick={ () => {} }/>
                <span>caret-up</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box control">
                <UiIcon icon='caret-right' dimensions={[15, 15]} color="white" onClick={ () => {} }/>
                <span>caret-right</span>
              </div>
            </div>
            <div className="col-md-2 icon">
              <div className="icon-box control">
                <UiIcon icon='caret-down' dimensions={[15, 15]} color="white" onClick={ () => {} }/>
                <span>caret-down</span>
              </div>
            </div>
            <div className="col-md-2 icon">
              <div className="icon-box control">
                <UiIcon icon='exclamation' dimensions={[15, 15]} color="white" onClick={ () => {} }/>
                <span>exclamation</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box control">
                <UiIcon icon='notification' dimensions={[15, 15]} color="white" onClick={ () => {} } />
                <span>notification</span>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-md-2">
              <div className="icon-box identifier">
                <UiIcon icon='desktop' color="white" onClick={ () => {} } />
                <span>desktop</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box identifier">
                <UiIcon icon='user' color="white" onClick={ () => {} } />
                <span>user</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box identifier">
                <UiIcon icon='apple' color="white" onClick={ () => {} } />
                <span>apple</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box identifier">
                <UiIcon icon='android' color="white" onClick={ () => {} } />
                <span>android</span>
              </div>
            </div>
            <div className="col-md-2 icon">
              <div className="icon-box identifier">
                <UiIcon icon='phone' color="white" onClick={ () => {} } />
                <span>phone</span>
              </div>
            </div>
            <div className="col-md-2 icon">
              <div className="icon-box identifier">
                <UiIcon icon='postal' color="white" onClick={ () => {} } />
                <span>postal</span>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-md-2">
              <div className="icon-box identifier">
                <UiIcon icon='pel' color="white" onClick={ () => {} } />
                <span>pel</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box identifier">
                <UiIcon icon='household' color="white" onClick={ () => {} } />
                <span>household</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box identifier">
                <UiIcon icon='email' color="white" onClick={ () => {} } />
                <span>email</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box identifier">
                <UiIcon icon='mobile' color="white" onClick={ () => {} } />
                <span>mobile</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box identifier">
                <UiIcon icon='source' color="white" onClick={ () => {} } />
                <span>source</span>
              </div>
            </div>
            <div className="col-md-2 icon">
              <div className="icon-box identifier">
                <UiIcon icon='destination' color="white" onClick={ () => {} } />
                <span>destination</span>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-md-2 icon">
              <div className="icon-box identifier">
                <UiIcon icon='cart' color="white" onClick={ () => {} } />
                <span>cart</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='add-company' color="white" onClick={ () => {} } />
                <span>add-company</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='manage-segments' color="white" onClick={ () => {} } />
                <span>manage-segments</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='upload' color="white" onClick={ () => {} } />
                <span>upload</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='file-status' color="white" onClick={ () => {} } />
                <span>file-status</span>
              </div>
            </div>
            <div className="col-md-2 icon">
              <div className="icon-box">
                <UiIcon icon='reports' color="white" onClick={ () => {} } />
                <span>reports</span>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-md-2 icon">
              <div className="icon-box">
                <UiIcon icon='distribute' color="white" onClick={ () => {} } />
                <span>distribute</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='audience' color="white" onClick={ () => {} } />
                <span>audience</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='sftp' color="white" onClick={ () => {} } />
                <span>sftp</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='upload-box' color="white" onClick={ () => {} } />
                <span>upload-box</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='fast-forward' color="white" onClick={ () => {} } />
                <span>fast-forward</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='connect-source' dimensions={[90, 90]} color="white" onClick={ () => {} } />
                <span>connect-source</span>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='admin' color="white" dimensions={[35, 35]} onClick={ () => {} } />
                <span>admin</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='trash' color="white" dimensions={[30, 30]} onClick={ () => {} } />
                <span>trash</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='edit' color="white" dimensions={[30, 30]} onClick={ () => {} } />
                <span>edit</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='copy' color="white" dimensions={[30, 30]} onClick={ () => {} } />
                <span>copy</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='advanced-search' color="white" dimensions={[30, 30]} onClick={ () => {} } />
                <span>advanced-search</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='clear' dimensions={[24, 24]} color="white" onClick={ () => {} } />
                <span>clear</span>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='success' dimensions={[107, 107]} color="white" onClick={ () => {} } />
                <span>success</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='error' dimensions={[107, 107]} color="white" onClick={ () => {} } />
                <span>error</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='dashed-ring' dimensions={[107, 107]} />
                <span>dashed-ring</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box">
                <UiIcon icon='small-dashed-ring' />
                <span>small-dashed-ring</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='status-active' dimensions={[24, 24]} onClick={ () => {} } color="alert-green" />
                <span>status-active</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='status-stopped' dimensions={[24, 24]} onClick={ () => {} } color="alert-red" />
                <span>status-stopped</span>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='silver' dimensions={[90, 90]}  />
                <span>silver</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='gold' dimensions={[90, 90]}  />
                <span>gold</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='platinum' dimensions={[90, 90]} />
                <span>platinum</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='status-inprogress' dimensions={[24, 24]} />
                <span>status-inprogress</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='status-error' dimensions={[24, 24]} />
                <span>status-error</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='status-cancelled' dimensions={[24, 24]} />
                <span>status-cancelled</span>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='status-inactive' dimensions={[24, 24]} />
                <span>status-inactive</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='status-waiting-approval' dimensions={[24, 24]} />
                <span>status-waiting-approval</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='status-success' dimensions={[24, 24]} />
                <span>status-success</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='status-pending' dimensions={[24, 24]} />
                <span>status-pending</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='fast-lane-pill-black' dimensions={[24, 24]} />
                <span>fast-lane-pill-black</span>
              </div>
            </div>
            <div className="col-md-2">
              <div className="icon-box pill-box">
                <UiIcon icon='fast-lane-pill-white' dimensions={[24, 24]} />
                <span>fast-lane-pill-white</span>
              </div>
            </div>
          </div>
        </section>



        <section id="input-forms-section">
          <div className="section-header">
            <h1>Input Forms</h1>
          </div>

          <div className="row subsection" id="UiInput">
            <div className="col-md-3">
              <div className="subsection-header" style={{'marginTop' : '10px'}}>
                <h2>UiInput</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiInput");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-input-forms">
                <p className="chatter">You&#39;ve got a couple of options for UiInput. A basic text input form looks like plain text, with an optional label</p>
                <UiInput
                label={"What is your name? It better not be 3 characters."}
                inputValue={this.state.inputValue}
                valid={this.validateInput(this.state.inputValue)}
                placeholder={"Enter name here"}
                handleChange={this.uiInputChange}
                />
              </div>
              <div className="example-input-forms-code">
<pre><code>
<span>&#60;UiInput</span>{'\n'}
<span>  label={'{'}"What is your name? It better not be 3 characters."{'}'}</span>{'\n'}
<span>  inputValue={'{'}this.state.inputValue{'}'}</span>{'\n'}
<span>  valid={'{'}this.validateInput(this.state.inputValue){'}'}</span>{'\n'}
<span>  placeholder={'{'}"Enter name here"{'}'}</span>{'\n'}
<span>  handleChange={'{'}this.uiInputChange}</span>{'\n'}
<span>&#47;&#62;</span>
</code></pre>
              </div>
              <div className="ex-left example-input-forms">
                <p className="chatter">If this text input is meant for a form, set the prop <strong>formtext</strong> to true. A formtext input has a persistent underline.</p>
                <UiInput
                inputValue={this.state.inputValue}
                valid={this.validateInput(this.state.inputValue)}
                placeholder={"Email please!"}
                handleChange={this.uiInputChange}
                formtext={true}
                />
              </div>
              <div className="example-input-forms-code">
<pre><code>
<span>&#60;UiInput</span>{'\n'}
<span>  inputValue={'{'}this.state.inputValue{'}'}</span>{'\n'}
<span>  valid={'{'}this.validateInput(this.state.inputValue){'}'}</span>{'\n'}
<span>  placeholder={'{'}"Email please!"{'}'}</span>{'\n'}
<span>  handleChange={'{'}this.uiInputChange}</span>{'\n'}
<span>  formtext={'{'}true{"}"}</span>{'\n'}
<span>&#47;&#62;</span>
</code></pre>
              </div>
              <div className="ex-left example-input-forms">
                <p className="chatter">If you want to get really fancy, use our labelShift text input (just set prop <strong>labelShift</strong> to true). For example, these inputs will be used on our login and signup pages.</p>
                <UiInput
                  inputValue={this.state.inputValueFirst}
                  label={"First Name"}
                  placeholder={""}
                  valid={ !this.state.inputValueFirst || this.state.inputValueFirst.length > 3 }
                  labelShift={true}
                  handleChange={ (e) => { this.setState({inputValueFirst: e.target.value}); } }
                />
              </div>
              <div className="example-input-forms-code">
<pre><code>
<span>&#60;UiInput</span>{'\n'}
<span>  inputValue={'{'}this.state.inputValue{'}'}</span>{'\n'}
<span>  label={'{'}"First Name"{'}'}</span>{'\n'}
<span>  placeholder={'{'}""{'}'}</span>{'\n'}
<span>  valid={'{'}!this.state.inputValueFirst || this.state.inputValueFirst.length > 3{'}'}</span>{'\n'}
<span>  handleChange={'{ ('}e{")"} => {"{"} this.setState{"({"}inputValueFirst: e.target.value{"}); } }"}</span>{'\n'}
<span>  labelShift={'{'}true{"}"}</span>{'\n'}
<span>&#47;&#62;</span>
</code></pre>
              </div>
            </div>
          </div>

          <div className="row subsection" id="UiSearch">
            <div className="col-md-3">
              <div className="subsection-header" style={{'marginTop' : '10px'}}>
                <h2>UiSearch</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiSearch");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-center example-search-forms" style={{"textAlign" : "left"}}>
                <div className="search">
                  <div className="search-input-container">
                    <UiSearch
                    inputValue={this.state.searchInputValue}
                    placeholder={"Search"}
                    handleChange={this.uiSearchInputChange}
                    />
                  </div>
                </div>
              </div>
              <div className="example-search-forms-code">
<pre><code><span>&#60;UiSearch</span>{'\n'}
<span>  inputValue={'{'}this.state.searchInputValue{'}'}</span>{'\n'}
<span>  placeholder={'{'}"Search"{'}'}</span>{'\n'}
<span>  handleChange={'{'}this.uiSearchInputChange{'}'}</span>{'\n'}
<span>&#47;&#62;</span>
</code></pre>
              </div>
            </div>
          </div>


          <div className="row subsection" id="UiSelect">
            <div className="col-md-3">
              <div className="subsection-header" style={{'marginTop' : '10px'}}>
                <h2>UiSelect</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiSelect");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-select-forms">
                <p className="chatter">We use the <strong>react-select</strong> library for our select forms. See <a href="https://github.com/JedWatson/react-select" target='_blank'>here</a> for full functionality. Basic select forms can be full-width (default) or fixed-width (<strong>fixedwidth</strong>=true).</p>
                <UiSelect
                  label={"President"}
                  selected={this.state.selectedField}
                  selectOptions={selectOptions}
                  placeholder={"POTUS"}
                  isMulti={false}
                  handleChange={this.uiSelectFieldChange}
                  clearable={false}
                  fixedwidth={true}
                />
              </div>
              <div className="example-select-forms-code">
  <pre><code><span>&#60;UiSelect</span>{'\n'}
  <span>  label={'{'}"President"{'}'}</span>{'\n'}
  <span>  selected={'{'}this.state.selectedField{'}'}</span>{'\n'}
  <span>  selectOptions={'{'}selectOptions{'}'}</span>{'\n'}
  <span>  placeholder={'{'}"POTUS"{'}'}</span>{'\n'}
  <span>  isMulti={'{'}false{'}'}</span>{'\n'}
  <span>  handleChange={'{'}this.uiSelectFieldChange{'}'}</span>{'\n'}
  <span>  clearable={'{'}false{'}'}</span>{'\n'}
  <span>  fixedwidth={'{'}true{"}"}</span>{'\n'}
  &#47;&#62;
  </code></pre>
              </div>
              <div className="ex-left example-select-forms">
                <p className="chatter">Here&#39;s a nice multi-select form.</p>
                <UiSelect
                  label={"Where to tonight?"}
                  selected={this.state.selectedField}
                  selectOptions={multiSelectOptions}
                  placeholder={"Dives"}
                  isMulti={true}
                  handleChange={this.uiSelectFieldChange}
                  clearable={false}
                  fixedwidth={false}
                />
              </div>
              <div className="example-select-forms-code">
  <pre><code><span>&#60;UiSelect</span>{'\n'}
  <span>  label={'{'}"Where to tonight?"{'}'}</span>{'\n'}
  <span>  selected={'{'}this.state.selectedField{'}'}</span>{'\n'}
  <span>  selectOptions={'{'}multiSelectOptions{'}'}</span>{'\n'}
  <span>  placeholder={'{'}"Dives"{'}'}</span>{'\n'}
  <span>  isMulti={'{'}true{'}'}</span>{'\n'}
  <span>  handleChange={'{'}this.uiSelectFieldChange{'}'}</span>{'\n'}
  <span>  clearable={'{'}false{'}'}</span>{'\n'}
  <span>  fixedwidth={'{'}false{"}"}</span>{'\n'}
  &#47;&#62;
  </code></pre>
              </div>
            </div>
          </div>


          <div className="row subsection" id="UiLabel">
            <div className="col-md-3">
              <div className="subsection-header" style={{'marginTop' : '10px'}}>
                <h2>UiLabel</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiLabel");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-label-forms">
                <UiLabel
                  label={"Eat ice cream every "}
                  showSwitch={true}
                  switchOn={this.state.showIceCreamOptions}
                  showSelect={true}
                  labelSelectOptions={_.extend(labelSelectOptions, {selected: this.state.selectedFrequency})}
                  handleSelectChange={this.handleSelectChange}
                  handleSwitchChange={this.handleSwitchChange}
                  />
              </div>
              <div className="example-label-forms-code">
  <pre><code><span>&#60;UiLabel</span>{'\n'}
  <span>  label={'{'}"Eat ice cream every "{'}'}</span>{'\n'}
  <span>  showSwitch={'{'}true{'}'}</span>{'\n'}
  <span>  switchOn={'{'}this.state.showIceCreamOptions{'}'}</span>{'\n'}
  <span>  showSelect={'{'}true{'}'}</span>{'\n'}
  <span>  labelSelectOptions={'{_.'}extend{'('}labelSelectOptions{", {"}selected: this.state.selectedFrequency{'})}'}</span>{'\n'}
  <span>  handleSelectChange={'{'}this.handleSelectChange{'}'}</span>{'\n'}
  <span>  handleSwitchChange={'{'}this.handleSwitchChange{'}'}</span>{'\n'}
  &#47;&#62;
  </code></pre>
              </div>
            </div>
          </div>

          {/*<div className="subsection-header" id="login-forms">
            <h2>Login Forms</h2>
          </div>
          <div className="row">
            <div className="col-md-6 col-md-offset-3">
              <div className="ex-center">
                <div className="card example-login-forms">
                  <div className="header">

                    <p className="login-text">Login to</p>
                    <h1>CONNECT</h1>

                  </div>
                  <div className="body">
                    <div className="one-col login-body">
                      <div className="form-group">
                        <div className="controls">
                          <input type="text" placeholder="Email" id="login-primary-email" />
                          <i className="fa fa-user"></i>
                        </div>
                      </div>
                      <div className="form-group">
                        <div className="controls">
                          <input type="text" placeholder="Password" id="login-password" />
                          <i className="fa fa-lock"></i>
                        </div>
                      </div>
                      <div className="form-group">
                        <div className="controls">
                          <div className="button success" id="login-button">SIGN IN</div>
                          <a>Forgot your password?</a>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div className="row">
            <div className="col-md-12">
              <div className="example-login-forms-code">

<pre><code>.card{'\n'}
&nbsp;.header{'\n'}
&nbsp;&nbsp;LOGIN HEADER{'\n'}
&nbsp;.body{'\n'}
&nbsp;&nbsp;.one-col{'\n'}
&nbsp;&nbsp;&nbsp;.form-group{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;.controls{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= f.text_field{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:login_primary_email,{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:id => 'login_primary_email',{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:placeholder => 'Email please!'{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%i.fa.fa-user{'\n'}
&nbsp;&nbsp;&nbsp;.form-group{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;.controls{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= f.password_field{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:login_password,{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:id => 'login_password',{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:placeholder => 'Password',{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:autocomplete => 'off'{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%i.fa.fa-lock{'\n'}
&nbsp;&nbsp;&nbsp;.form-group{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;.controls{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;= submit_tag 'SIGN IN',{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:class => 'button success',{'\n'}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:id => 'login-button'{'\n'}
</code></pre>
              </div>
            </div>
          </div>*/}

          <div className="row subsection" id="UiCheckbox">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiCheckbox</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiCheckbox");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-checkboxes">
                <UiCheckbox
                  label={ "This is a great checkbox, seriously" }
                  value={ 0 }
                  checked={ this.state.checkboxChecked }
                  disabled={ false }
                  handleChange={ this.uiCheckboxChange }
                />
              </div>
              <div className="example-checkboxes-code">
<pre><code><span>&#60;UiCheckbox</span>{'\n'}
<span>  label={'{'}"This is a great checkbox, seriously"{'}'}</span>{'\n'}
<span>  value={'{'}0{'}'}</span>{'\n'}
<span>  checked={'{'}this.state.checkboxChecked{'}'}</span>{'\n'}
<span>  disabled={'{'}false{'}'}</span>{'\n'}
<span>  handleChange={'{'}this.uiCheckboxChange{'}'}</span>{'\n'}
&#47;&#62;
</code></pre>
              </div>
            </div>
          </div>

          <div className="row subsection" id="UiRadioButton">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiRadioButton</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiRadioButton");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-radio-buttons">
                <UiRadioButton
                  label={ "This radio button does something" }
                  value={ 0 }
                  selected={ this.state.radioButtonActivated }
                  disabled={ false }
                  handleChange={ this.uiRadioButtonChange }
                />
              </div>

              <div className="example-radio-buttons-code">
<pre><code><span>&#60;UiRadioButton</span>{'\n'}
<span>  label={'{'}"This radio button does something"{'}'}</span>{'\n'}
<span>  value={'{'}0{'}'}</span>{'\n'}
<span>  selected={'{'}this.state.radioButtonActivated{'}'}</span>{'\n'}
<span>  disabled={'{'}false{'}'}</span>{'\n'}
<span>  handleChange={'{'}this.uiRadioButtonChange{'}'}</span>{'\n'}
&#47;&#62;
</code></pre>
              </div>
            </div>
          </div>

          <div className="row subsection" id="UiRadioButtonGroup">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiRadioButtonGroup</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiRadioButtonGroup");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-radio-button-group">
                <UiRadioButtonGroup
                  title={"Device Type"}
                  selected={this.state.selectedRadioButton}
                  radioButtonArray={radioButtonArray}
                  handleChange={this.uiRadioButtonGroupChange}
                  />
              </div>

              <div className="example-radio-button-group-code">
<pre><code><span>&#60;UiRadioButtonGroup</span>{'\n'}
<span>  title={'{'}"Device Type"{'}'}</span>{'\n'}
<span>  selected={'{'}this.state.selectedRadioButton{'}'}</span>{'\n'}
<span>  radioButtonArray={'{'}radioButtonArray{'}'}</span>{'\n'}
<span>  handleChange={'{'}this.uiRadioButtonGroupChange{'}'}</span>{'\n'}
&#47;&#62;
</code></pre>
              </div>
            </div>
          </div>

          <div className="row subsection" id="UiIdentifierSelect">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiIdentifierSelect</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiIdentifierSelect");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-identifier-select">
                <div>
                  <UiIdentifierSelect
                    title="Look at all these here identifiers"
                    handleChange={this.updateIdentifiers}
                    identifiers={identifiers}
                    displayOnly={false}
                  />
                </div>
              </div>
              <div className="example-radio-button-group-code">
<pre><code><span>&#60;UiIdentifierSelect</span>{'\n'}
<span>  title="Look at all these here identifiers"</span>{'\n'}
<span>  handleChange={'{'}this.updateIdentifiers{'}'}</span>{'\n'}
<span>  identifiers={'{'}identifiers{'}'}</span>{'\n'}
<span>  displayOnly={'{'}false{'}'}</span>{'\n'}
&#47;&#62;
</code></pre>
              </div>
              <div className="ex-left example-identifier-select-display">
                <div>
                  <UiIdentifierSelect
                    title="These ones are display only"
                    handleChange={null}
                    identifiers={identifiers}
                    displayOnly={true}
                  />
                </div>
              </div>
              <div className="example-radio-button-group-code-display">
<pre><code><span>&#60;UiIdentifierSelect</span>{'\n'}
<span>  title="These ones are display only"</span>{'\n'}
<span>  handleChange={'{'}this.updateIdentifiers{'}'}</span>{'\n'}
<span>  identifiers={'{'}identifiers{'}'}</span>{'\n'}
<span>  displayOnly={'{'}true{'}'}</span>{'\n'}
&#47;&#62;
</code></pre>
              </div>
            </div>
          </div>

          <div className="row subsection" id="UiSlider">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiSlider</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiSlider");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-center example-slider">
                <UiSlider
                  label={"Scope"}
                  steps={sliderMap}
                  value={this.state.sliderValue}
                  handleChange={this.uiSliderChange}
                  />
              </div>
              <div className="example-slider-code">
<pre><code>&#60;UiSlider{'\n'}
&nbsp;label={'{'}"Scope"{'}'}{'\n'}
&nbsp;steps={'{'}sliderMap{'}'}{'\n'}
&nbsp;value={'{'}this.state.sliderValue{'}'}{'\n'}
&nbsp;handleChange={'{'}this.uiSliderChange{'}'}{'\n'}
&#47;&#62;</code></pre>{'\n'}
              </div>
            </div>
          </div>

          <div className="row subsection" id="UiDropdown">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiDropdown</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiDropdown");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="row">
                <div className="col-sm-6">
                  <div className="ex-center example-dropdowns">
                    <UiDropdown
                      title={"Select"}
                      options={dropdownOptions}
                      color='green'
                      handleChangeDefault={x => console.log(x)}
                    />
                  </div>
                  <div className="ex-center example-dropdowns-code">
<pre><code><span>&#60;UiDropdown</span>{'\n'}
<span>  title={"{"}"Select"{"}"}</span>{'\n'}
<span>  options={"{"}dropdownOptions{"}"}</span>{'\n'}
<span>  color='green' </span>{'\n'}
<span>  handleChangeDefault={"{"}x => console.log{"("}x{")}"}</span>
<span>&#47;&#62;</span></code></pre>
                  </div>
                </div>
                <div className="col-sm-6">
                  <div className="ex-center example-dropdowns">
                    <UiDropdown
                      title={"Select"}
                      options={dropdownOptions}
                      color='gray'
                      handleChangeDefault={x => console.log(x)}
                    />
                  </div>
                  <div className="ex-center example-dropdowns-code">
<pre><code><span>&#60;UiDropdown</span>{'\n'}
<span>  title={"{"}"Select"{"}"}</span>{'\n'}
<span>  options={"{"}dropdownOptions{"}"}</span>{'\n'}
<span>  color='gray' </span>{'\n'}
<span>  handleChangeDefault={"{"}x => console.log{"("}x{")}"}</span>
<span>&#47;&#62;</span></code></pre>
                  </div>
                </div>
              </div>
            </div>
          </div>

        </section>


        <section id="controls-section">
          <div className="section-header">
            <h1>Controls</h1>
          </div>

          <div className="row subsection" id="UiFilterGroup">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiFilterGroup</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiFilterGroup");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-filter-group">
                <UiFilterGroup
                filterParams={this.buildFilterGroupProps(filterGroupList)}
                handleChange={this.handleFilterGroupChange}
                />
              </div>
              <div className="example-filter-group-code">
<pre><code><span>&#60;UiFilterGroup</span>{'\n'}
<span>  filterParams={"{"}this.buildFilterGroupProps{"("}filterGroupList{")}"}</span>{'\n'}
<span>  handleChange={"{"}this.handleFilterGroupChange{"}"}</span>{'\n'}
<span>&#47;&#62;</span></code></pre>{'\n'}
              </div>
            </div>
          </div>

          <div className="row subsection" id="uiCollapse">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiCollapse</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiCollapse");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-collapse-view">
                <UiCollapse
                  expanded={false}
                  expandPrompt={<span className='spanny'>Don&#39;t click me!</span>}
                  collapsePrompt='Told you not to click.'
                  info={blurb} />
              </div>
              <div className="ex-left example-collapse-view-code">
<pre><code>
<span>const blurb = {"<img"} src="secret-img.jpeg"{"></img>;"}</span>{'\n\n'}
<span>&#60;UiCollapse</span>{'\n'}
<span>  expanded={"{"}false{"}"}</span>{'\n'}
<span>  expandPrompt={"{<"}span className="spanny"{">"}Don&#39;t click me!{"</span>}"}</span>{'\n'}
<span>  collapsePrompt="Told you not to click."</span>{'\n'}
<span>  info={"{"}blurb{"}"}</span>{'\n'}
<span>&#47;&#62;</span></code></pre>{'\n'}
              </div>
            </div>
          </div>

          <div className="row subsection" id="UiTabbedView">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiTabbedView</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiTabbedView");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-tabbed-view">
                <UiTabbedView
                  tabs={[["tab1", <div className="tab1"><div className="inner-tab">I AM TAB 1</div></div>], ["tab2", <div className="tab2"><div className="inner-tab">I AM TAB 2</div></div>]]}
                />
              </div>
              <div className="example-tabbed-view-code">
<pre><code><span>&#60;UiTabbedView</span>{'\n'}
<span>  tabs={'{[['}"tab1", &#60;div&#62;I AM TAB 1&#60;/div&#62;], ["tab2", &#60;div&#62;I AM TAB 2&#60;/div>{']]}'}
</span>{'\n'}
<span>&#47;&#62;</span></code></pre>{'\n'}
              </div>
            </div>
          </div>

        </section>

        <section id="stuff-section">
          <div className="section-header">
            <h1>Stuff</h1>
          </div>

          <div className="row subsection" id="uiAlert">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiAlert</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiAlert");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-alerts">
                <div className="button" id="success-alert-button" onClick={ () => {this.setState({
                  showAlert: true,
                  alertType: 'success',
                  alertMessage: 'Good job, way to click!' })}}>Success</div>
                <div className="button" id="error-alert-button" onClick={() =>  {this.setState({
                  showAlert: true,
                  alertType: 'error',
                  alertMessage: 'That was a bad decision.' })}}>Error</div>
                <div className="button" id="info-alert-button" onClick={() => {this.setState({
                  showAlert: true,
                  alertType: 'information',
                  alertMessage: 'Did you know banging your head against a wall burns 150 calories an hour?' })}}>Info</div>
                <div className="button" id="warning-alert-button"onClick={() => {this.setState({
                  showAlert: true,
                  alertType: 'warning',
                  alertMessage: 'Please don\'t do that.' })}}>Warning</div>

                { this.state.showAlert ? <UiAlert
                  type={this.state.alertType}
                  message={this.state.alertMessage}
                  handleClose={ () => { this.setState({showAlert: false}); } }
                  /> : null }
              </div>
              <div className="ex-left example-alerts-code">
<pre><code><span>{'{'} this.state.showAlert &#63; &#60;UiAlert</span>{'\n'}
<span>  type={'{'}this.state.alertType{'}'}</span>{'\n'}
<span>  message={'{'}this.state.alertMessage{'}'}</span>{'\n'}
<span>  handleClose={'{ () '}  => {'{'} this.setState{'({'}showAlert: false{'})'}; {'} }'}</span>{'\n'}
<span>&#47;&#62; : null {'}'}</span>{'\n'}{'\n'}
<span>&#60;div className="button" id="success-alert-button" onClick={'{ ()'} => {'{'}this.setState{'({'}</span>{'\n'}
<span>  showAlert: true, </span>{'\n'}
<span>  alertType: 'success',</span>{'\n'}
<span>  alertMessage: 'Good job, way to click!' {'})}}'}>Success</span>{'\n'}
<span>&#60;&#47;div&#62;</span></code></pre>{'\n'}
              </div>
            </div>
          </div>

          <div className="row subsection" id="UiProgressMeter">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiProgressMeter</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiProgressMeter");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="ex-left example-progress-meter">
                <UiProgressMeter
                steps={progressMeterSteps}
                currentPosition={1}
                />
              </div>
              <div className="example-progress-meter-code">
<pre><code><span>&#60;UiProgressMeter</span>{'\n'}
<span>  steps={"{"}progressMeterSteps{"}"}</span>{'\n'}
<span>  currentPosition={"{"}1{"}"}</span>{'\n'}
<span>&#47;&#62;</span></code></pre>{'\n'}
              </div>
            </div>
          </div>

          <div className="row subsection" id="UiLoadingComponent">
            <div className="col-md-3">
              <div className="subsection-header">
                <h2>UiLoadingComponent</h2>
                <p className="detail-trigger" onClick={(e) => {e.stopPropagation(); this.openDocsDetail("UiLoadingComponent");}}>MORE DETAILS PLZ</p>
              </div>
            </div>
            <div className="col-md-9">
              <div className="row">
                <div className="col-md-6">
                  <div className="ex-center example-loading-spinner">
                    <UiLoadingComponent
                      type={"loading"}
                      show={true}
                      />
                  </div>
                </div>
                <div className="col-md-6">
                  <div className="ex-center example-loading-spinner">
                    <UiLoadingComponent
                      type={"small"}
                      show={true}
                      />
                  </div>
                </div>
              </div>
              <div className="row">
                <div className="col-md-6">
                  <div className="example-loading-spinner-code">
    <pre><code>&#60;UiLoadingComponent{'\n'}
    &nbsp;type={'{'}"loading"{'}'}{'\n'}
    &nbsp;show={'{'}"true"{'}'}{'\n'}
    &#47;&#62;</code></pre>{'\n'}
                  </div>
                </div>
                <div className="col-md-6">
                  <div className="example-loading-spinner-code">
    <pre><code>&#60;UiLoadingComponent{'\n'}
    &nbsp;type={'{'}"small"{'}'}{'\n'}
    &nbsp;show={'{'}"true"{'}'}{'\n'}
    &#47;&#62;</code></pre>{'\n'}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/*<section id="pagination-section">
          <div className="section-header">
            <h1>Pagination</h1>
          </div>
          <div className="row">
            <div className="col-lg-12">
              <div className="ex-center example-pagination">
              </div>
              <div className="example-pagination-code">
                <pre><code></code></pre>
              </div>
            </div>
          </div>
        </section>*/}

      </div>
      <div id="clear"><span></span>
      </div>
    </div>
  </div>
)},

toggleTitle(e) {
  this.setState({
    titleSwitchOn: !this.state.titleSwitchOn
  });
},

uiInputChange(e) {
  this.setState({
    inputValue: e.target.value
  });
},

uiSearchInputChange(e) {
  this.setState({
    searchInputValue: e.target.value
  });
},

validateInput(input) {
  return input.length !== 3;
},

uiSelectFieldChange(value) {
  this.setState({
    selectedField: value
  });
},

handleFilterGroupChange(isMulti, name, selected) {
  var newSelected;
  if (selected === "") {
    newSelected = isMulti ? [] : null;
  } else {
    newSelected = isMulti ? selected.split(',') : parseInt(selected);
  }
  const newSelectedByFilterName = this.state.selectedByFilterName;
  // newSelectedByFilterName[name] = isMulti ? _.pluck(selected, 'value') : selected.value;
  newSelectedByFilterName[name] = newSelected;
  this.setState({ selectedByFilterName: newSelectedByFilterName });
},

buildFilterGroupProps(filters) {
  // combines selected state with filter configurations
  return _.map(filters, (filter) => {
    return _.extend(filter, { selected: this.state.selectedByFilterName[filter.name]} );
  });
},

uiSliderChange(value) {
  this.setState({
    sliderValue: value
  });
},

uiRadioButtonChange(e) {
  console.log(e);
  this.setState({
    radioButtonActivated: !this.state.radioButtonActivated
  });
},

uiRadioButtonGroupChange(e) {
  this.setState({
    selectedRadioButton: e
  });
},

uiCheckboxChange(e) {
  console.log(e);
  this.setState({
    checkboxChecked: !this.state.checkboxChecked
  });
},

handleSelectChange(value) {
  this.setState({
    selectedFrequency: value
  });
},
handleSwitchChange() {
  this.setState({
    showIceCreamOptions: !this.state.showIceCreamOptions
  });
},

logChange: function(val) {
    console.log("Selected: " + val);
},

updateIdentifiers(identifier) {
  let includedIdentifiers = this.state.includedIdentifiers;

  if (this.state.includedIdentifiers.includes(identifier)) {
    includedIdentifiers = _.without(includedIdentifiers, identifier);
  } else {
    includedIdentifiers.push(identifier);
  }

  this.setState({ includedIdentifiers: includedIdentifiers });
},

closeDocsDetail () {
  this.setState({
    showDocsDetail: false
  });
},

openDocsDetail (component) {
  this.setState({
    docsDetailComponent: component,
    showDocsDetail: true
  });
}

});

module.exports = UiToolkit;
