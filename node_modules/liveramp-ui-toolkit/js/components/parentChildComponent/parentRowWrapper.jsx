import ChildComponent from 'components/parentChildComponent/childComponent';
import UiCheckbox from 'components/uiCheckbox.jsx'

const ParentRowWrapper = React.createClass({
  getInitialState() {
    return { open: false };
  },

  render() {
    const { parent, ParentRow, parentRowProps, showChildren, showCheckboxes } = this.props;
    const children = parent[parentRowProps.childrenKey];

    let ShownChildComponent = '';
    if (this.state.open) {
      ShownChildComponent = (
        <ChildComponent
          children={children}
          childComponentConfigs={this.props.childComponentConfigs}
          childrenMetaData={this.props.defaultChildrenMetaData}
          ChildRow={this.props.ChildRow}
          childWrapperOptions={this.props.childWrapperOptions}
          childRowOptions={this.props.childRowOptions}
        />
      );
    }

    return (
      <div className={"parent-row-wrapper container-fluid " + this.props.extraClasses}>
        {showChildren ? this.getCaret() : null}
        {showCheckboxes ? this.getCheckbox() : null}
        <div className={"parent-row-content" + (showCheckboxes ? " checkbox-showing" : "")}>
          <ParentRow
            model={parent}
            {...parentRowProps}
          />
        </div>
        <div className="children">
          {ShownChildComponent}
        </div>
      </div>
    );
  },

  getCaret() {
    return (
      <div className='parent-row-caret'>
        <i className={ 'fa fa-caret-' + (this.state.open ? 'down' : 'right') } onClick={this.toggleChildRow} />
      </div>
    );
  },

  getCheckbox() {
    return (
      <div className="parent-row-checkbox">
        <UiCheckbox
          resourceId={this.props.parent.id}
          checked={this.props.parentCheckboxChecked}
          onChangeChecked={this.props.onChangeChecked}
          checked={this.props.parent[this.props.checkedKey]}
          namespace={this.props.namespace || 'dms'}
          editable={true}
        />
      </div>
    );
  },

  toggleChildRow() {
    this.setState({ open: !this.state.open });
  }
});

export default ParentRowWrapper;
