import UiIcon from './uiIcon.jsx';

export default function UiWizardControls(props) {
  // User must pass in:
  //  - an object with 3 keys: `left`, `cancel`, and `right`. Each key maps
  //    to an object containing the disabled/enabled state and click handler
  //    for each button (buttonAttribs) : Object
  //  - leaving out the disabled property has the same effect as specifying `disabled: false`
  //  - the handleChange function won't be called if the button is disabled
  //  - the content above the wizard controls must specify `padding-bottom: 120px`
  //    in the style for proper spacing. An example of this can be found in
  //    the UiWizardControlsSandbox component.
  //  <UiWizardControls buttonAttribs={{
  //    left: {
  //      handleChange: (e) => console.log(e.target),
  //      disabled: false
  //    },
  //    cancel: {
  //      handleChange: (e) => console.log('closed')
  //    },
  //    right: {
  //      handleChange: (e) => console.log('this will never print!'),
  //      disabled: true
  //    }
  //  }}/>

  const { buttonAttribs } = props;

  const generateWizardButton = (buttonIcon, attr) => {
    const buttonClasses = cn('lr-ui-wizard-controls-button', {
      'disabled': attr.disabled
    });

    return (
      <UiIcon
        icon={buttonIcon}
        classes={buttonClasses}
        onClick={ attr.disabled ? null : attr.handleChange }
      />
    )
  };

  return (
    <div className="lr-ui-wizard-controls">
      <div className="lr-ui-wizard-controls-buttons">
        { generateWizardButton('arrow-left', buttonAttribs.left) }
        { generateWizardButton('cancel', buttonAttribs.cancel) }
        { generateWizardButton('arrow-right', buttonAttribs.right) }
      </div>
    </div>
  )
}
