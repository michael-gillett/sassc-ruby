import UiRadioButton from './uiRadioButton.jsx';

const docs = {
  title: "UiRadioButtonGroup",
  propDetails: [
    { title: "label",
      required: true,
      type: "string",
      description: "A title for the radio button group." },
    { title: "selected",
      required: true,
      type: "integer",
      description: "A value for the selected radio button." },
    { title: "radioButtonArray",
      required: true,
      type: "array",
      description: "An array of objects each of which has a label (string), value(integer), and disabled(boolean)." },
    { title: "handleChange",
      required: true,
      type: "function",
      description: "Handles radio button click, takes in teh value of the radio button which was clicked as an input." }
  ]
}

export default function UiRadioButtonGroup(props) {
  // User provides:
  //  - a title for the radio button group (title) : string
  //  - the value of the selected button (selected) : string or int
  //  - an array of objects, each of which have a label(string), value(string or int), and disabled(boolean)  (radioButtonArray) : array
  //      + formatted as follows:
  //      [{
  //        label: "iOS",
  //        value: "3",
  //        disabled: false
  //      }];
  //  - a function that handles clicks on the radio buttons which takes in the radio button value as an input (handleChange) : function

  const { title, selected, radioButtonArray, handleChange } = props;

  return (
    <div className="lr-ui-radio-button-group">
      <div className="lr-ui-radio-button-group-title">{title}</div>
      {
        _.map(radioButtonArray, (button, index) => {
            return (
              <UiRadioButton
                label={ button["label"] }
                value={ button["value"] }
                selected={ selected === button["value"] }
                handleChange={ handleChange }
                disabled={ button["disabled"] }
                key={index}
              />
            );
          }
        )
      }
    </div>
  );
};

export { docs };
