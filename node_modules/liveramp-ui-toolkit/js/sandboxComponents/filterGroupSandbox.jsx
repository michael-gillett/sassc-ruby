import UiFilterGroup from 'components/uiFilterGroup';

const someFilters = [
  {
    name: 'audience',
    selectOptions: [
      {
        label: 'val1',
        value: 1
      },
      {
        label: 'val2',
        value: 2
      },
      {
        label: 'val3',
        value: 3
      }
    ],
    isMulti: true
  },
  {
    name: 'type',
    selectOptions: [
      {
        label: 'val1',
        value: 1
      },
      {
        label: 'val2',
        value: 2
      },
      {
        label: 'val3',
        value: 3
      }
    ],
    isMulti: false
  }
];


const FilterGroupSandbox = React.createClass({

  getInitialState() {
    // hash from filter name to selected
    return {
      selectedByFilterName: {
        audience: [],
        type: 1
      }
    }
  },

  render() {
    return (
      <div>
        <UiFilterGroup
          filterParams={this.buildFilterGroupProps(someFilters)}
          handleChange={this.handleChange}
        />
      </div>
    );
  },


  buildFilterGroupProps(filters) {
    // combines selected state with filter configurations
    return _.map(filters, (filter) => {
      return _.extend(filter, { selected: this.state.selectedByFilterName[filter.name]} );
    });
  },


  handleChange(isMulti, name, selected) {
    const newSelectedByFilterName = this.state.selectedByFilterName;
    newSelectedByFilterName[name] = isMulti ? _.pluck(selected, 'value') : selected.value;
    this.setState({ selectedByFilterName: newSelectedByFilterName });
  }


});

export default FilterGroupSandbox;
