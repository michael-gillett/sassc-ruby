---
apiVersion: v1
kind: Service
metadata:
  namespace: <%= config['namespace'] %>
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind: Mapping
      name: go-links
      host: gcp-go-links.liveramp.net
      prefix: /
      service: go-links.<%= config['namespace'] %>
      timeout_ms: 6000
      ---
      apiVersion: ambassador/v1
      kind: Mapping
      name: go-links-gcp-temp
      host: gcp-go-links.liveramp.net
      prefix: /
      service: go-links.<%= config['namespace'] %>
  labels:
    app: go-links
  name: go-links
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: go-links
  type: <%= config['target'] == 'local' ? 'NodePort' : 'ClusterIP' %>
<% unless config['target'] == 'local' %>
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador
  namespace: ambassador
  annotations:
    cloud.google.com/load-balancer-type: "Internal"
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind: Module
      name: tls
      config:
        server:
          enabled: True
          redirect_cleartext_from: 80
      ---
      apiVersion: ambassador/v0
      kind: TLSContext
      name: gcp-go-links-liveramp-net
      hosts:
      - "gcp-go-links.liveramp.net"
      - "*.gcp-go-links.liveramp.net"
      secret: gcp-go-links-liveramp-net-cert
      ---
      apiVersion: ambassador/v0
      kind: TLSContext
      name: liveramp-net
      hosts:
      - "liveramp.net"
      - "*.liveramp.net"
      secret: liveramp-net-cert
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  loadBalancerSourceRanges:
    - 10.0.0.0/8
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
    - name: https
      port: 443
      targetPort: 443
      protocol: TCP
  selector:
    service: ambassador
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: ambassador-admin
  name: ambassador-admin
  namespace: ambassador
spec:
  type: NodePort
  ports:
    - name: ambassador-admin
      port: 8877
      targetPort: 8877
  selector:
    service: ambassador
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: ambassador
rules:
  - apiGroups: [""]
    resources:
      - services
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - configmaps
    verbs: ["create", "update", "patch", "get", "list", "watch"]
  - apiGroups: [""]
    resources:
      - secrets
    verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ambassador
  namespace: ambassador
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: ambassador
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ambassador
subjects:
  - kind: ServiceAccount
    name: ambassador
    namespace: ambassador
<% end %>

